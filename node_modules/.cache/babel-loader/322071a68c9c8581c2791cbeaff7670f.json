{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _taggedTemplateLiteral from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\src\\\\components\\\\Autorization\\\\registration\\\\CompanyRegistration.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    font-size: 34px;\\n    color: white;\\n    font-weight: bold;\\n    text-align: center;\\n    margin-bottom: 60px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport * as firebase from \"firebase\";\nimport styled from 'styled-components';\nvar LoginDiv = styled.div(_templateObject());\n\nvar CompanyRegistration =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CompanyRegistration, _Component);\n\n  function CompanyRegistration(props) {\n    var _this;\n\n    _classCallCheck(this, CompanyRegistration);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CompanyRegistration).call(this, props));\n    _this.state = {\n      name: '',\n      email: '',\n      password: '',\n      confirmedPassword: '',\n      validErrors: {\n        name: true,\n        email: true,\n        password: true,\n        confirmedPassword: true\n      }\n    };\n    _this.changeField = _this.changeField.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(CompanyRegistration, [{\n    key: \"changeField\",\n    value: function changeField(e, field) {\n      this.setState(_defineProperty({}, field, e.target.value));\n    }\n  }, {\n    key: \"signUpCompany\",\n    value: function signUpCompany() {\n      if (this.state.password === this.state.confirmedPassword && this.state.password && this.state.name && this.state.email) {\n        var company = _objectSpread({}, this.state);\n\n        firebase.auth().createUserWithEmailAndPassword(company.email, company.password).then(function (res) {\n          company.description = '';\n          company.image = '';\n          company.test = {};\n          company.id = res.uid;\n          company.type = 'company';\n          localStorage.setItem(\"current\", \"company\");\n          firebase.database().ref(\"companies/\".concat(res.uid)).set(company);\n          firebase.auth().currentUser.sendEmailVerification();\n        }).catch(function (e) {\n          return console.log(e.message);\n        });\n      } else {\n        var obj = {\n          name: this.state.name,\n          email: this.state.email,\n          password: this.state.password,\n          confirmedPassword: this.state.confirmedPassword\n        };\n        var objErrors = this.state.validErrors;\n\n        for (var key in obj) {\n          if (obj[key] === \"\") {\n            objErrors[key] = false;\n          }\n        }\n\n        console.log('not equal');\n      }\n\n      this.setState(_objectSpread({}, this.state));\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      e.preventDefault();\n      this.signUpCompany();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          name = _this$state.name,\n          email = _this$state.email,\n          password = _this$state.password,\n          confirmedPassword = _this$state.confirmedPassword,\n          validErrors = _this$state.validErrors;\n      return React.createElement(\"form\", {\n        onSubmit: this.handleSubmit.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"registration\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Logwrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(LoginDiv, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Register\"), validErrors.name === false && name === \"\" ? React.createElement(\"input\", {\n        className: \"info-field eror\",\n        placeholder: \"Write Your Name *\",\n        type: \"text\",\n        value: name,\n        onChange: function onChange(e) {\n          return _this2.changeField(e, 'name');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }) : React.createElement(\"input\", {\n        className: \"info-field\",\n        placeholder: \"Name *\",\n        type: \"text\",\n        value: name,\n        onChange: function onChange(e) {\n          return _this2.changeField(e, 'name');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), validErrors.email === false && email === \"\" ? React.createElement(\"input\", {\n        className: \"info-field eror\",\n        placeholder: \"Write Your Email *\",\n        type: \"text\",\n        value: email,\n        onChange: function onChange(e) {\n          return _this2.changeField(e, 'email');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }) : React.createElement(\"input\", {\n        className: \"info-field\",\n        placeholder: \"Email *\",\n        type: \"text\",\n        value: email,\n        onChange: function onChange(e) {\n          return _this2.changeField(e, 'email');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }), validErrors.password === false && password === \"\" ? React.createElement(\"input\", {\n        className: \"info-field eror\",\n        placeholder: \"Write Your Password *\",\n        type: \"password\",\n        value: password,\n        onChange: function onChange(e) {\n          return _this2.changeField(e, 'password');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }) : React.createElement(\"input\", {\n        className: \"info-field\",\n        placeholder: \"Password *\",\n        type: \"password\",\n        value: password,\n        onChange: function onChange(e) {\n          return _this2.changeField(e, 'password');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }), validErrors.confirmedPassword === false && confirmedPassword === \"\" ? React.createElement(\"input\", {\n        className: \"info-field eror\",\n        placeholder: \"Write Your Password *\",\n        type: \"password\",\n        value: confirmedPassword,\n        onChange: function onChange(e) {\n          return _this2.changeField(e, 'confirmedPassword');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }) : React.createElement(\"input\", {\n        className: \"info-field\",\n        placeholder: \"Confirm Password *\",\n        type: \"password\",\n        value: confirmedPassword,\n        onChange: function onChange(e) {\n          return _this2.changeField(e, 'confirmedPassword');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"By creating an account,you agree to DigiLearn \", React.createElement(\"span\", {\n        style: {\n          color: '#FFAD5A'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"Privacy Policy\"), \" and \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        style: {\n          color: '#FFAD5A',\n          marginBottom: '15px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"Terms of use\"), \".\"), React.createElement(\"input\", {\n        className: \"submit\",\n        type: \"submit\",\n        value: \"CREATE ACCOUNT\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return CompanyRegistration;\n}(Component);\n\nexport default CompanyRegistration;","map":{"version":3,"sources":["C:\\Users\\Gohar\\Desktop\\testing-project\\testing-project\\src\\components\\Autorization\\registration\\CompanyRegistration.js"],"names":["React","Component","firebase","styled","LoginDiv","div","CompanyRegistration","props","state","name","email","password","confirmedPassword","validErrors","changeField","bind","e","field","setState","target","value","company","auth","createUserWithEmailAndPassword","then","res","description","image","test","id","uid","type","localStorage","setItem","database","ref","set","currentUser","sendEmailVerification","catch","console","log","message","obj","objErrors","key","preventDefault","signUpCompany","handleSubmit","color","marginBottom"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport * as firebase from \"firebase\";\r\nimport styled from 'styled-components';\r\n\r\nconst LoginDiv = styled.div`\r\n    font-size: 34px;\r\n    color: white;\r\n    font-weight: bold;\r\n    text-align: center;\r\n    margin-bottom: 60px;\r\n`;\r\n\r\nclass CompanyRegistration extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            email: '',\r\n            password: '',\r\n            confirmedPassword: '',\r\n            validErrors: {name: true, email: true, password: true, confirmedPassword: true}\r\n        }\r\n        this.changeField = this.changeField.bind(this);\r\n    }\r\n\r\n    changeField(e, field) {\r\n        this.setState({\r\n            [field]: e.target.value,\r\n        })\r\n    }\r\n\r\n    signUpCompany() {\r\n\r\n        if (this.state.password === this.state.confirmedPassword && this.state.password  && this.state.name && this.state.email) {\r\n\r\n            const company = {...this.state};\r\n\r\n            firebase.auth()\r\n                .createUserWithEmailAndPassword(company.email, company.password)\r\n                .then(res => {\r\n                    company.description = '';\r\n                    company.image = '';\r\n                    company.test = {};\r\n                    company.id = res.uid;\r\n                    company.type='company';\r\n                    localStorage.setItem(\"current\", \"company\");\r\n                    firebase.database().ref(`companies/${res.uid}`).set(company);\r\n\r\n\r\n                    firebase.auth().currentUser.sendEmailVerification();\r\n                })\r\n                .catch(e => console.log(e.message))\r\n\r\n\r\n        } else {\r\n             const obj = {\r\n                name: this.state.name,\r\n                email: this.state.email,\r\n                password: this.state.password,\r\n                confirmedPassword: this.state.confirmedPassword,\r\n            }\r\n            const objErrors = this.state.validErrors;\r\n            for(let key in obj){\r\n                if(obj[key] === \"\"){\r\n                    objErrors[key] = false\r\n                }\r\n            }\r\n            console.log('not equal');\r\n        }\r\n        this.setState({\r\n            ...this.state\r\n        });\r\n    }\r\n\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        this.signUpCompany();\r\n    }\r\n\r\n\r\n    render() {\r\n        const {name, email, password, confirmedPassword, validErrors} = this.state;\r\n\r\n        return (\r\n            <form onSubmit={this.handleSubmit.bind(this)}>\r\n                <div className='registration'>\r\n                    <div className='Logwrapper'>\r\n                        <LoginDiv>Register</LoginDiv>\r\n                        {validErrors.name === false && name===\"\" ? \r\n                            <input\r\n                                className='info-field eror'\r\n                                placeholder='Write Your Name *'\r\n                                type=\"text\"\r\n                                value={name}\r\n                                onChange={(e) => this.changeField(e, 'name')}\r\n                            /> : \r\n                            <input\r\n                                className='info-field'\r\n                                placeholder='Name *'\r\n                                type=\"text\"\r\n                                value={name}\r\n                                onChange={(e) => this.changeField(e, 'name')}\r\n                            /> }\r\n                        {validErrors.email === false && email===\"\" ? \r\n                            <input\r\n                                className='info-field eror'\r\n                                placeholder='Write Your Email *'\r\n                                type=\"text\"\r\n                                value={email}\r\n                                onChange={(e) => this.changeField(e, 'email')}\r\n                            /> : \r\n                            <input\r\n                                className='info-field'\r\n                                placeholder='Email *'\r\n                                type=\"text\"\r\n                                value={email}\r\n                                onChange={(e) => this.changeField(e, 'email')}\r\n                            /> }\r\n                        {validErrors.password === false && password===\"\" ? \r\n                            <input\r\n                                className='info-field eror'\r\n                                placeholder='Write Your Password *'\r\n                                type=\"password\"\r\n                                value={password}\r\n                                onChange={(e) => this.changeField(e, 'password')}\r\n                            /> : \r\n                            <input\r\n                                className='info-field'\r\n                                placeholder='Password *'\r\n                                type=\"password\"\r\n                                value={password}\r\n                                onChange={(e) => this.changeField(e, 'password')}\r\n                            /> }\r\n                        {validErrors.confirmedPassword === false && confirmedPassword===\"\" ? \r\n                            <input\r\n                                className='info-field eror'\r\n                                placeholder='Write Your Password *'\r\n                                type=\"password\"\r\n                                value={confirmedPassword}\r\n                                onChange={(e) => this.changeField(e, 'confirmedPassword')}\r\n                            /> : \r\n                            <input\r\n                                className='info-field'\r\n                                placeholder='Confirm Password *'\r\n                                type=\"password\"\r\n                                value={confirmedPassword}\r\n                                onChange={(e) => this.changeField(e, 'confirmedPassword')}\r\n                            /> }\r\n\r\n                        <p>By creating an account,you agree to\r\n                            DigiLearn <span style={{color: '#FFAD5A'}}>Privacy Policy</span> and <br/><span\r\n                                style={{color: '#FFAD5A', marginBottom: '15px'}}>Terms of use</span>.</p>\r\n                            <input className='submit' type=\"submit\" value=\"CREATE ACCOUNT\" />\r\n                    </div>\r\n                </div>\r\n            </form>\r\n           \r\n        );\r\n    }\r\n}\r\n\r\nexport default CompanyRegistration;\r\n"]},"metadata":{},"sourceType":"module"}