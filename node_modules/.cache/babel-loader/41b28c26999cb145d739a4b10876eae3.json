{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\src\\\\containers\\\\Pages\\\\CompanyProfile.js\";\nimport React, { Component } from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport CompanySvg from '../../containers/Pages/CompanyInfoPage/CompanySvg';\nimport * as firebase from \"firebase\";\nimport { storage } from '../../firebase/firebase';\n\nvar CompanyProfile =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CompanyProfile, _Component);\n\n  function CompanyProfile(props) {\n    var _this;\n\n    _classCallCheck(this, CompanyProfile);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CompanyProfile).call(this, props));\n    _this.state = {\n      image: null,\n      url: ''\n    };\n    return _this;\n  }\n\n  _createClass(CompanyProfile, [{\n    key: \"chooseImg\",\n    value: function chooseImg(e) {\n      if (e.target.files[0]) {\n        var image = e.target.files[0];\n        this.setState({\n          image: image\n        });\n      }\n    }\n  }, {\n    key: \"handleUpload\",\n    value: function handleUpload() {\n      var _this2 = this;\n\n      var image = this.state.image;\n      var uploadImage = storage.ref(\"images/\".concat(this.props.user.id, \"/\").concat(image.name)).put(image);\n      uploadImage.on('state_changed', function (snapshot) {}, function (error) {}, function () {\n        storage.ref(\"images/\".concat(_this2.props.user.id)).child(image.name).getDownloadURL().then(function (url) {\n          console.log(url);\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"company-profile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"profile-logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(CompanySvg, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"file\",\n        name: \"file\",\n        id: \"file\",\n        className: \"upload\",\n        onChange: this.chooseImg.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.handleUpload.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Upload\")), React.createElement(\"div\", {\n        className: \"profile-synopsis\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"profile-synopsis-name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, this.props.user.name), React.createElement(\"div\", {\n        className: \"quote\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"The \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"software agency\"), \" that doesnt work for you\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, this.props.user.description))), React.createElement(\"div\", {\n        className: \"profile-find-employee\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"profile-create-test\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"checked-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: require('../../images/checkbox.png'),\n        alt: \"checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"You can find employe.\")), React.createElement(\"div\", {\n        className: \"checked-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: require('../../images/checkbox.png'),\n        alt: \"checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"You can add your own test.\"))), React.createElement(\"div\", {\n        className: \"profile-buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        to: \"/users\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"FIND EMPLOYEE\")), React.createElement(NavLink, {\n        to: \"/\".concat(this.props.user.name, \"/add-test\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"CREATE TEST\")))))));\n    }\n  }]);\n\n  return CompanyProfile;\n}(Component);\n\nexport default CompanyProfile;","map":{"version":3,"sources":["C:\\Users\\Gohar\\Desktop\\testing-project\\testing-project\\src\\containers\\Pages\\CompanyProfile.js"],"names":["React","Component","NavLink","CompanySvg","firebase","storage","CompanyProfile","props","state","image","url","e","target","files","setState","uploadImage","ref","user","id","name","put","on","snapshot","error","child","getDownloadURL","then","console","log","chooseImg","bind","handleUpload","description","require"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport CompanySvg from '../../containers/Pages/CompanyInfoPage/CompanySvg';\r\nimport * as firebase from \"firebase\";\r\nimport {storage} from '../../firebase/firebase'\r\n\r\nclass CompanyProfile extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            image: null,\r\n            url: ''\r\n        }\r\n    }\r\n\r\n    chooseImg (e) {\r\n        if(e.target.files[0]){\r\n            const image = e.target.files[0];\r\n            this.setState({image})\r\n        }\r\n    }\r\n\r\n    handleUpload () {\r\n        const { image } = this.state;\r\n        const uploadImage = storage.ref(`images/${this.props.user.id}/${image.name}`).put(image);\r\n        uploadImage.on('state_changed',\r\n        (snapshot) => {\r\n\r\n        },\r\n        (error) => {\r\n\r\n        },\r\n        () => {\r\n            storage.ref(`images/${this.props.user.id}`).child(image.name).getDownloadURL().then(url => {\r\n                console.log(url)\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <div className='company-profile'>\r\n                        <div className='profile-logo' > \r\n                            <CompanySvg /> \r\n                            <input type=\"file\" name=\"file\" id=\"file\" className=\"upload\" onChange={this.chooseImg.bind(this)}  />\r\n                            <button onClick={this.handleUpload.bind(this)}>Upload</button>\r\n                        </div>\r\n                        <div className='profile-synopsis'>\r\n                            <div className='profile-synopsis-name'>{this.props.user.name}</div>\r\n                            <div className='quote'>The <span>software agency</span> that doesnt work for you</div>\r\n                            <div>{this.props.user.description}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='profile-find-employee'>\r\n                        <div className='profile-create-test'>\r\n                            <div>\r\n                                <div className='checked-icon'>\r\n                                    <img src={require('../../images/checkbox.png')} alt='checkbox' />\r\n                                    <span>You can find employe.</span>\r\n                                </div>\r\n                                <div className='checked-icon'>\r\n                                    <img src={require('../../images/checkbox.png')} alt='checkbox' />\r\n                                    <span>You can add your own test.</span>\r\n                                </div>\r\n                            </div>\r\n                            <div className='profile-buttons'>\r\n                                <NavLink to={`/users`}>\r\n                                    <button>FIND EMPLOYEE</button>\r\n                                </NavLink>\r\n                                <NavLink to={`/${this.props.user.name}/add-test`}>\r\n                                    <button>CREATE TEST</button>\r\n                                </NavLink>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CompanyProfile;"]},"metadata":{},"sourceType":"module"}