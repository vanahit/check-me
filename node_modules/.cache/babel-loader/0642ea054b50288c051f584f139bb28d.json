{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { ADD_ANSWER, SET_ANSWERS_VALUES, DECREASE_ANSWERS_COUNT, DELETE_CHOSEN_ANSWER, RIGHT_ANSWER_CHOSEN, QUESTION_TITLE_HANDLER, TIME_HANDLER, SCORE_HANDLER, CLEAR_FIELDS } from '../actions/actionTypes';\nvar initialState = {\n  answers: [{\n    id: Date.now(),\n    title: '',\n    isRight: false\n  }, {\n    id: Date.now() + 1,\n    title: '',\n    isRight: false\n  }],\n  isRight: 0,\n  questionTitle: '',\n  time: '',\n  score: '',\n  isEditing: false\n};\nexport default function questionReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_ANSWER:\n      return _objectSpread({}, state, {\n        answers: state.answers.concat(action.answer)\n      });\n\n    case SET_ANSWERS_VALUES:\n      return _objectSpread({}, state, {\n        answers: action.answers\n      });\n\n    case DECREASE_ANSWERS_COUNT:\n      return _objectSpread({}, state, {\n        answers: state.answers.splice(1)\n      });\n\n    case DELETE_CHOSEN_ANSWER:\n      return _objectSpread({}, state, {\n        answers: state.answers.filter(function (answer) {\n          return answer.id !== action.id;\n        })\n      });\n\n    case RIGHT_ANSWER_CHOSEN:\n      return _objectSpread({}, state, {\n        isRight: action.isRight\n      });\n\n    case QUESTION_TITLE_HANDLER:\n      return _objectSpread({}, state, {\n        questionTitle: action.title\n      });\n\n    case SCORE_HANDLER:\n      return _objectSpread({}, state, {\n        score: action.score\n      });\n\n    case TIME_HANDLER:\n      return _objectSpread({}, state, {\n        time: action.time\n      });\n\n    case CLEAR_FIELDS:\n      return {\n        state: initialState\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:\\Users\\Gohar\\Desktop\\testing-project\\testing-project\\src\\store\\reducers\\questionCreater.js"],"names":["ADD_ANSWER","SET_ANSWERS_VALUES","DECREASE_ANSWERS_COUNT","DELETE_CHOSEN_ANSWER","RIGHT_ANSWER_CHOSEN","QUESTION_TITLE_HANDLER","TIME_HANDLER","SCORE_HANDLER","CLEAR_FIELDS","initialState","answers","id","Date","now","title","isRight","questionTitle","time","score","isEditing","questionReducer","state","action","type","concat","answer","splice","filter"],"mappings":";AAAA,SAAQA,UAAR,EAAoBC,kBAApB,EAAwCC,sBAAxC,EAAgEC,oBAAhE,EACEC,mBADF,EACuBC,sBADvB,EAC+CC,YAD/C,EAC6DC,aAD7D,EAC4EC,YAD5E,QAC+F,wBAD/F;AAGA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,CAAC;AAACC,IAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL,EAAL;AAAiBC,IAAAA,KAAK,EAAE,EAAxB;AAA4BC,IAAAA,OAAO,EAAE;AAArC,GAAD,EAA8C;AAACJ,IAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL,KAAa,CAAlB;AAAqBC,IAAAA,KAAK,EAAE,EAA5B;AAAgCC,IAAAA,OAAO,EAAE;AAAzC,GAA9C,CADU;AAEnBA,EAAAA,OAAO,EAAE,CAFU;AAGnBC,EAAAA,aAAa,EAAE,EAHI;AAInBC,EAAAA,IAAI,EAAE,EAJa;AAKnBC,EAAAA,KAAK,EAAE,EALY;AAMnBC,EAAAA,SAAS,EAAE;AANQ,CAArB;AASA,eAAe,SAASC,eAAT,GAAuD;AAAA,MAA9BC,KAA8B,uEAAtBZ,YAAsB;AAAA,MAARa,MAAQ;;AACpE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKvB,UAAL;AACE,+BACKqB,KADL;AAEEX,QAAAA,OAAO,EAAEW,KAAK,CAACX,OAAN,CAAcc,MAAd,CAAqBF,MAAM,CAACG,MAA5B;AAFX;;AAIA,SAAKxB,kBAAL;AACA,+BACKoB,KADL;AAEEX,QAAAA,OAAO,EAAGY,MAAM,CAACZ;AAFnB;;AAIA,SAAKR,sBAAL;AACA,+BACKmB,KADL;AAEEX,QAAAA,OAAO,EAAGW,KAAK,CAACX,OAAN,CAAcgB,MAAd,CAAqB,CAArB;AAFZ;;AAIA,SAAKvB,oBAAL;AACA,+BACKkB,KADL;AAEEX,QAAAA,OAAO,EAAGW,KAAK,CAACX,OAAN,CAAciB,MAAd,CAAqB,UAAAF,MAAM;AAAA,iBAAIA,MAAM,CAACd,EAAP,KAAcW,MAAM,CAACX,EAAzB;AAAA,SAA3B;AAFZ;;AAIA,SAAKP,mBAAL;AACA,+BACKiB,KADL;AAEEN,QAAAA,OAAO,EAAEO,MAAM,CAACP;AAFlB;;AAIA,SAAKV,sBAAL;AACA,+BACKgB,KADL;AAEEL,QAAAA,aAAa,EAAEM,MAAM,CAACR;AAFxB;;AAIA,SAAKP,aAAL;AACE,+BACKc,KADL;AAECH,QAAAA,KAAK,EAAEI,MAAM,CAACJ;AAFf;;AAIF,SAAKZ,YAAL;AACE,+BACKe,KADL;AAECJ,QAAAA,IAAI,EAAEK,MAAM,CAACL;AAFd;;AAIF,SAAKT,YAAL;AACI,aAAO;AACLa,QAAAA,KAAK,EAAEZ;AADF,OAAP;;AAGL;AACG,aAAOY,KAAP;AA9CN;AAgDD","sourcesContent":["import {ADD_ANSWER, SET_ANSWERS_VALUES, DECREASE_ANSWERS_COUNT, DELETE_CHOSEN_ANSWER, \r\n  RIGHT_ANSWER_CHOSEN, QUESTION_TITLE_HANDLER, TIME_HANDLER, SCORE_HANDLER, CLEAR_FIELDS} from '../actions/actionTypes'\r\n\r\nconst initialState = {\r\n  answers: [{id: Date.now(), title: '', isRight: false}, {id: Date.now() + 1, title: '', isRight: false}],\r\n  isRight: 0,\r\n  questionTitle: '',\r\n  time: '',\r\n  score: '',\r\n  isEditing: false,\r\n}\r\n\r\nexport default function questionReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_ANSWER:\r\n      return {\r\n        ...state,\r\n        answers: state.answers.concat(action.answer),\r\n      }\r\n      case SET_ANSWERS_VALUES:\r\n      return {\r\n        ...state,\r\n        answers : action.answers\r\n      }\r\n      case DECREASE_ANSWERS_COUNT:\r\n      return {\r\n        ...state,\r\n        answers : state.answers.splice(1),\r\n      }\r\n      case DELETE_CHOSEN_ANSWER:\r\n      return {\r\n        ...state,\r\n        answers : state.answers.filter(answer => answer.id !== action.id),\r\n      }\r\n      case RIGHT_ANSWER_CHOSEN:\r\n      return {\r\n        ...state,\r\n        isRight: action.isRight,\r\n      }\r\n      case QUESTION_TITLE_HANDLER:\r\n      return {\r\n        ...state,\r\n        questionTitle: action.title,\r\n      }\r\n      case SCORE_HANDLER:\r\n        return {\r\n          ...state,\r\n         score: action.score,\r\n      }\r\n      case TIME_HANDLER:\r\n        return {\r\n          ...state,\r\n         time: action.time,\r\n      }\r\n      case CLEAR_FIELDS:\r\n          return {\r\n            state: initialState\r\n          }\r\n     default:\r\n        return state\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}