{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\src\\\\containers\\\\QuizCreator\\\\QuestionCreater\\\\OneAnswerCreater.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  rows: \", \";\\n  width: 100%;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { setAnswersValues as _setAnswersValues } from '../../../store/actions/createAnswer';\nimport styled from 'styled-components';\nvar AnswersField = styled.textarea(_templateObject(), function (props) {\n  return props.rows || '4';\n});\n\nvar OneAnswerCreater =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(OneAnswerCreater, _React$Component);\n\n  function OneAnswerCreater(props) {\n    var _this;\n\n    _classCallCheck(this, OneAnswerCreater);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(OneAnswerCreater).call(this, props));\n\n    _this.inputChangeHandler = function (e) {\n      var value = _this.clearWordFromSpaces(e.target.value);\n\n      return new Promise(function (resolve, reject) {\n        _this.setState({\n          title: value\n        });\n\n        resolve(_this.state.title);\n      }).then(function () {\n        return _this.getInputValue();\n      });\n    };\n\n    _this.getInputValue = function () {\n      var answers = _this.props.answers;\n      var id = _this.props.id;\n      var isRight = _this.props.isRight;\n\n      for (var i = 0; i < answers.length; i++) {\n        if (answers[i].id === id) {\n          answers[i].title = _this.state.title;\n          answers[i].isRight = isRight;\n        }\n      }\n\n      _this.props.setAnswersValues(answers);\n    };\n\n    _this.clearWordFromSpaces = function (word) {\n      return word.replace(/^[ ]+/g, '').replace(/\\s*$/, '');\n    };\n\n    _this.state = {\n      title: ''\n    };\n    return _this;\n  }\n\n  _createClass(OneAnswerCreater, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      prevProps.isRight !== this.props.isRight && this.getInputValue();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(AnswersField, {\n        value: this.state.title,\n        onChange: this.inputChangeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return OneAnswerCreater;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  return {\n    answers: state.question.answers\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setAnswersValues: function setAnswersValues(answers) {\n      return dispatch(_setAnswersValues(answers));\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OneAnswerCreater);","map":{"version":3,"sources":["C:\\Users\\Gohar\\Desktop\\testing-project\\testing-project\\src\\containers\\QuizCreator\\QuestionCreater\\OneAnswerCreater.js"],"names":["React","connect","setAnswersValues","styled","AnswersField","textarea","props","rows","OneAnswerCreater","inputChangeHandler","e","value","clearWordFromSpaces","target","Promise","resolve","reject","setState","title","state","then","getInputValue","answers","id","isRight","i","length","word","replace","prevProps","Component","mapStateToProps","question","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {setAnswersValues} from '../../../store/actions/createAnswer';\r\nimport styled from 'styled-components'\r\n\r\nconst AnswersField = styled.textarea`\r\n  rows: ${props => props.rows  || '4'};\r\n  width: 100%;\r\n`;\r\n\r\nclass OneAnswerCreater extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {title: ''}\r\n}\r\n\tinputChangeHandler = (e) => {\r\n    let value = this.clearWordFromSpaces(e.target.value);\r\n    return new Promise((resolve, reject) => {\r\n\t\t\tthis.setState({title: value});\r\n\t\t\tresolve(this.state.title);\r\n\t\t})\r\n    .then(() => this.getInputValue());\r\n  }\r\n\tgetInputValue = () => {\r\n    let answers = this.props.answers;\r\n    let id = this.props.id;\r\n\t\tlet isRight = this.props.isRight;\r\n\t  for(let i = 0; i < answers.length; i++) {\r\n\t    if (answers[i].id === id) {\r\n        answers[i].title = this.state.title;\r\n        answers[i].isRight = isRight;  \r\n      } \r\n    }\r\n    this.props.setAnswersValues(answers);\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    prevProps.isRight !== this.props.isRight && this.getInputValue();\r\n  }\r\n  clearWordFromSpaces = (word) => {\r\n    return  word.replace(/^[ ]+/g, '').replace(/\\s*$/, '');\r\n  }\r\n\trender() {\r\n    return ( \r\n      <AnswersField value={this.state.title} onChange={this.inputChangeHandler}/>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {answers: state.question.answers}\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    setAnswersValues: (answers) => dispatch(setAnswersValues(answers))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OneAnswerCreater)"]},"metadata":{},"sourceType":"module"}