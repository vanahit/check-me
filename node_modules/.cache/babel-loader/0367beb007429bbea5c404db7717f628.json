{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\src\\\\containers\\\\QuizCreator\\\\QuestionCreater\\\\OneAnswerCreater.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  rows: \", \";\\n  width: 100%;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { setAnswersValues as _setAnswersValues } from '../../../store/actions/createAnswer';\nimport styled from 'styled-components';\nvar AnswersField = styled.textarea(_templateObject(), function (props) {\n  return props.rows || '4';\n});\n\nvar OneAnswerCreater = function OneAnswerCreater() {\n  inputChangeHandler = function inputChangeHandler(e) {\n    _this.title = _this.clearWordFromSpaces(e.target.value);\n\n    _this.getInputValue();\n  };\n\n  getInputValue = function getInputValue() {\n    var answers = _this.props.answers;\n    var id = _this.props.id;\n    var isRight = _this.props.isRight;\n\n    for (var i = 0; i < answers.length; i++) {\n      if (answers[i].id === id) {\n        answers[i].title = _this.title;\n        answers[i].isRight = isRight;\n      }\n    }\n\n    _this.props.setAnswersValues(answers);\n  };\n\n  clearWordFromSpaces = function clearWordFromSpaces(word) {\n    return word.replace(/^[ ]+/g, '').replace(/\\s*$/, '');\n  };\n\n  return React.createElement(AnswersField, {\n    value: _this.title,\n    onChange: _this.inputChangeHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  });\n};\n\nfunction mapStateToProps(state) {\n  return {\n    answers: state.question.answers\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setAnswersValues: function setAnswersValues(answers) {\n      return dispatch(_setAnswersValues(answers));\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OneAnswerCreater);","map":{"version":3,"sources":["C:\\Users\\Gohar\\Desktop\\testing-project\\testing-project\\src\\containers\\QuizCreator\\QuestionCreater\\OneAnswerCreater.js"],"names":["React","connect","setAnswersValues","styled","AnswersField","textarea","props","rows","OneAnswerCreater","inputChangeHandler","e","title","clearWordFromSpaces","target","value","getInputValue","answers","id","isRight","i","length","word","replace","mapStateToProps","state","question","mapDispatchToProps","dispatch"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,gBAAgB,IAAhBA,iBAAR,QAA+B,qCAA/B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,IAAMC,YAAY,GAAGD,MAAM,CAACE,QAAV,oBACR,UAAAC,KAAK;AAAA,SAAIA,KAAK,CAACC,IAAN,IAAe,GAAnB;AAAA,CADG,CAAlB;;AAKA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC9BC,EAAAA,kBAAkB,GAAG,4BAACC,CAAD,EAAO;AAC1B,IAAA,KAAI,CAACC,KAAL,GAAc,KAAI,CAACC,mBAAL,CAAyBF,CAAC,CAACG,MAAF,CAASC,KAAlC,CAAd;;AACA,IAAA,KAAI,CAACC,aAAL;AACA,GAHF;;AAICA,EAAAA,aAAa,GAAG,yBAAM;AACpB,QAAIC,OAAO,GAAG,KAAI,CAACV,KAAL,CAAWU,OAAzB;AACA,QAAIC,EAAE,GAAG,KAAI,CAACX,KAAL,CAAWW,EAApB;AACF,QAAIC,OAAO,GAAG,KAAI,CAACZ,KAAL,CAAWY,OAAzB;;AACC,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGH,OAAO,CAACI,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACtC,UAAIH,OAAO,CAACG,CAAD,CAAP,CAAWF,EAAX,KAAkBA,EAAtB,EAA0B;AACvBD,QAAAA,OAAO,CAACG,CAAD,CAAP,CAAWR,KAAX,GAAmB,KAAI,CAACA,KAAxB;AACAK,QAAAA,OAAO,CAACG,CAAD,CAAP,CAAWD,OAAX,GAAqBA,OAArB;AACD;AACF;;AACD,IAAA,KAAI,CAACZ,KAAL,CAAWJ,gBAAX,CAA4Bc,OAA5B;AACD,GAXD;;AAYCJ,EAAAA,mBAAmB,GAAG,6BAACS,IAAD,EAAU;AAC/B,WAAQA,IAAI,CAACC,OAAL,CAAa,QAAb,EAAuB,EAAvB,EAA2BA,OAA3B,CAAmC,MAAnC,EAA2C,EAA3C,CAAR;AACD,GAFA;;AAGD,SACI,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAE,KAAI,CAACX,KAA1B;AAAiC,IAAA,QAAQ,EAAE,KAAI,CAACF,kBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAGA,CAvBF;;AAyBA,SAASc,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AAACR,IAAAA,OAAO,EAAEQ,KAAK,CAACC,QAAN,CAAeT;AAAzB,GAAP;AACD;;AACD,SAASU,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLzB,IAAAA,gBAAgB,EAAE,0BAACc,OAAD;AAAA,aAAaW,QAAQ,CAACzB,iBAAgB,CAACc,OAAD,CAAjB,CAArB;AAAA;AADb,GAAP;AAGD;;AAED,eAAef,OAAO,CAACsB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6ClB,gBAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {setAnswersValues} from '../../../store/actions/createAnswer';\r\nimport styled from 'styled-components'\r\n\r\nconst AnswersField = styled.textarea`\r\n  rows: ${props => props.rows  || '4'};\r\n  width: 100%;\r\n`;\r\n\r\nconst OneAnswerCreater = () => {\r\n\tinputChangeHandler = (e) => {\r\n   this.title =  this.clearWordFromSpaces(e.target.value);\r\n   this.getInputValue();\r\n  }\r\n  getInputValue = () => {\r\n    let answers = this.props.answers;\r\n    let id = this.props.id;\r\n\t\tlet isRight = this.props.isRight;\r\n\t  for(let i = 0; i < answers.length; i++) {\r\n\t    if (answers[i].id === id) {\r\n        answers[i].title = this.title;\r\n        answers[i].isRight = isRight;  \r\n      } \r\n    }\r\n    this.props.setAnswersValues(answers);\r\n  }\r\n   clearWordFromSpaces = (word) => {\r\n    return  word.replace(/^[ ]+/g, '').replace(/\\s*$/, '');\r\n  }\r\n  return ( \r\n      <AnswersField value={this.title} onChange={this.inputChangeHandler}/>\r\n    )\r\n }\r\n\r\nfunction mapStateToProps(state) {\r\n  return {answers: state.question.answers}\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    setAnswersValues: (answers) => dispatch(setAnswersValues(answers))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OneAnswerCreater)"]},"metadata":{},"sourceType":"module"}