{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\src\\\\containers\\\\TestPassPanel\\\\TestPassPanel.js\";\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n\\tfont-size: 24px;\\n\\tcolor: #100529;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n\\tposition:relative;\\n\\twidth:  \", \";\\n\\tbox-sizing: border-box;\\n\\t\\t   \\n\\t@media screen and (max-width: 1190px) {\\n\\t\\tmargin: 5px;\\n\\t\\tmin-width: 100%;\\n\\t}\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n\\tdisplay: flex;\\n\\tposition:relative;\\n\\tflex-direction: column;\\n\\tflex-wrap: wrap;\\n\\tmargin: 30px 0;\\n\\tjustify-content: space-between;\\n\\talign-items: center;\\n\\twidth: \", \";\\n\\tbox-sizing: border-box;\\n\\n\\t@media screen and (max-width: 1190px) {\\n\\t\\tflex-direction: column;\\n\\t\\tmin-width: 100%;\\n\\t}\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n\\tmargin: auto;\\n\\tmax-width: 826px;\\n\\tfont-size: 24px;\\n\\toverflow: auto;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport styled, { css } from 'styled-components';\nimport { connect } from 'react-redux';\nimport { submittedFalse as _submittedFalse, submittedTrue as _submittedTrue, increaseTotalScore as _increaseTotalScore } from '../../store/actions/testCreater';\nimport { firebase } from '../../firebase/firebase';\nvar Main = styled.div(_templateObject());\nvar FlexRow = styled.div(_templateObject2(), function (props) {\n  return props.width || '100%';\n});\nvar FlexChild = styled.div(_templateObject3(), function (props) {\n  return props.width || '25%';\n});\nvar QuestionNumber = styled.span(_templateObject4());\n\nvar TestPassPanel =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TestPassPanel, _Component);\n\n  function TestPassPanel(props) {\n    var _this;\n\n    _classCallCheck(this, TestPassPanel);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TestPassPanel).call(this, props));\n    _this.state = {\n      testData: {},\n      choosed: false,\n      testEnd: false,\n      totalScore: 0,\n      currentQuesion: {}\n    };\n    return _this;\n  }\n\n  _createClass(TestPassPanel, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      return new Promise(function (resolve, reject) {\n        var test;\n        firebase.database().ref('tests/-LS0j3a0GongklJjoPEw').on('value', function (snapshot) {\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = snapshot[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var item = _step.value;\n              item = snapshot.val();\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n\n          test = _objectSpread({}, snapshot.val());\n          resolve(test);\n          console.log(test);\n        });\n      }).then(function (test) {\n        return _this2.setState({\n          testData: test\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var test = _objectSpread({}, this.state.testData.data);\n\n      var questions = console.log(this.state.testData.questions);\n      return React.createElement(Main, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, questions.map(function (question) {\n        return React.createElement(FlexRow, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, React.createElement(QuestionNumber, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, \"Question 1/10\"), React.createElement(FlexChild, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }));\n      }));\n    }\n  }]);\n\n  return TestPassPanel;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    totalScore: state.test.totalScore,\n    submitted: state.test.submitted\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    submittedTrue: function submittedTrue() {\n      return dispatch(_submittedTrue());\n    },\n    submittedFalse: function submittedFalse() {\n      return dispatch(_submittedFalse());\n    },\n    increaseTotalScore: function increaseTotalScore(score) {\n      return dispatch(_increaseTotalScore(score));\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TestPassPanel);","map":{"version":3,"sources":["C:\\Users\\Gohar\\Desktop\\testing-project\\testing-project\\src\\containers\\TestPassPanel\\TestPassPanel.js"],"names":["React","Component","styled","css","connect","submittedFalse","submittedTrue","increaseTotalScore","firebase","Main","div","FlexRow","props","width","FlexChild","QuestionNumber","span","TestPassPanel","state","testData","choosed","testEnd","totalScore","currentQuesion","Promise","resolve","reject","test","database","ref","on","snapshot","item","val","console","log","then","setState","data","questions","map","question","mapStateToProps","submitted","mapDispatchToProps","dispatch","score"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport styled, {css} from 'styled-components'\r\nimport { connect } from 'react-redux';\r\nimport {submittedFalse, submittedTrue,  increaseTotalScore} from '../../store/actions/testCreater';\r\nimport { firebase } from '../../firebase/firebase';\r\n\r\n\r\nconst Main = styled.div`\r\n\tmargin: auto;\r\n\tmax-width: 826px;\r\n\tfont-size: 24px;\r\n\toverflow: auto;\r\n`;\r\nconst FlexRow = styled.div`\r\n\tdisplay: flex;\r\n\tposition:relative;\r\n\tflex-direction: column;\r\n\tflex-wrap: wrap;\r\n\tmargin: 30px 0;\r\n\tjustify-content: space-between;\r\n\talign-items: center;\r\n\twidth: ${props => props.width || '100%'};\r\n\tbox-sizing: border-box;\r\n\r\n\t@media screen and (max-width: 1190px) {\r\n\t\tflex-direction: column;\r\n\t\tmin-width: 100%;\r\n\t}\r\n`;\r\nconst FlexChild = styled.div`\r\n\tposition:relative;\r\n\twidth:  ${props => props.width || '25%'};\r\n\tbox-sizing: border-box;\r\n\t\t   \r\n\t@media screen and (max-width: 1190px) {\r\n\t\tmargin: 5px;\r\n\t\tmin-width: 100%;\r\n\t}\r\n`;\r\nconst QuestionNumber = styled.span`\r\n\tfont-size: 24px;\r\n\tcolor: #100529;\r\n`;\r\n\r\nclass TestPassPanel extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n            testData: {},\r\n\t\t\tchoosed: false,\r\n\t\t\ttestEnd: false,\r\n\t\t\ttotalScore: 0,\r\n\t\t\tcurrentQuesion: {},\r\n\t\t}\r\n    }\r\n   componentDidMount() {\t\r\n\t\t\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tlet test;\r\n\t\t\tfirebase.database().ref('tests/-LS0j3a0GongklJjoPEw').on('value', function(snapshot) {\r\n\t\t\t\tfor (let item of snapshot) {\r\n\t\t\t\t\titem = snapshot.val()\r\n\t\t\t\t}\r\n\t\t\t\ttest = {...snapshot.val()}\r\n\t\t\t\tresolve(test);console.log(test);\r\n\t\t\t})\r\n\t\t}).then(test => this.setState({testData: test}))\r\n\t}\r\n\trender() {\r\n\t\tlet test = {...this.state.testData.data};\r\n\t\tlet questions = \r\n\t\t\r\n\t\tconsole.log(this.state.testData.questions)\r\n\t\treturn (\r\n\t\t\t<Main>\r\n\t\t\t\t{\r\n\t\t\t\tquestions.map(question => (\r\n\t\t\t\t\t<FlexRow>\r\n\t\t\t\t \t\t<QuestionNumber>Question 1/10</QuestionNumber>\r\n\t\t\t\t \t\t<FlexChild></FlexChild>\r\n\t\t\t\t \t</FlexRow>\r\n\t\t\t\t \t))\r\n\t\t\t\t}\r\n\t\t\t</Main>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n\treturn {\r\n\t\ttotalScore: state.test.totalScore,\r\n\t\tsubmitted: state.test.submitted,\r\n\t}\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n\treturn {\r\n\t submittedTrue: () => dispatch( submittedTrue()),\r\n\t submittedFalse: () => dispatch( submittedFalse()),\r\n\t increaseTotalScore: (score) => dispatch(increaseTotalScore(score)),\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TestPassPanel)\r\n\r\n"]},"metadata":{},"sourceType":"module"}