{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\src\\\\containers\\\\QuizCreator\\\\QuestionCreator\\\\QuestionCreator.js\";\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n\\tmax-width:  \", \";\\n\\twidth: \", \";\\n\\tbox-sizing: border-box;\\n\\t@media screen and (max-width: 1190px) {\\n\\t\\tmin-width: 99%;\\n\\t}\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n\\tdisplay: flex;\\n\\tflex-direction: row;\\n\\talign-items: flex-start;\\n\\tmargin: 15px 0;\\n\\twidth: \", \";\\n\\tbox-sizing: border-box;\\n\\n\\t@media screen and (max-width: 1190px) {\\n\\t\\tflex-wrap:  \", \";\\n\\t\\tmin-width: 100%;\\n\\t\\tmax-width: 100%;\\n\\t}\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n\\tmargin: 30px 0;\\n\\tposition: relative;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport OneAnswerCreator from './QuestionComponents/AnswerCreator/OneAnswer';\nimport RadioFlag from '../../../components/QuizCreator/RadioFlag';\nimport styled, { css } from 'styled-components';\nimport { connect } from 'react-redux';\nimport { changeTotalScore as _changeTotalScore, submittedFalse } from '../../../store/actions/testCreator';\nimport DeleteQuestion from '../QuestionCreator/QuestionComponents/DeleteQuestion';\nimport QuestionScore from './QuestionComponents/QuestionScore';\nimport QuestionTitle from './QuestionComponents/QuestionTitle';\nimport AnswersCounter from './QuestionComponents/AnswersCounter';\nimport QuestionRightAnswer from './QuestionComponents/QuestionRightAnswer';\nimport DeleteAnswer from './QuestionComponents/AnswerCreator/DeleteAnswer';\nimport OneAnswer from './QuestionComponents/AnswerCreator/OneAnswer';\nvar Question = styled.div(_templateObject());\nvar FlexRow = styled.div(_templateObject2(), function (props) {\n  return props.width || '100%';\n}, function (props) {\n  return props.wrap || 'wrap';\n});\nvar FlexChild = styled.div(_templateObject3(), function (props) {\n  return props.maxWidth || '100%';\n}, function (props) {\n  return props.width || '100%';\n});\n\nvar QuestionCreator =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(QuestionCreator, _Component);\n\n  function QuestionCreator(props) {\n    var _this;\n\n    _classCallCheck(this, QuestionCreator);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(QuestionCreator).call(this, props));\n\n    _this.getInputValue = function (e, field) {\n      var value = e.target.value;\n      value = _this.props.clearWordFromSpaces(value);\n\n      if (e.target.type === 'number') {\n        if (value < 0) {\n          value = +value * -1;\n        } else if (value > 0) {\n          value = +value;\n        } else {\n          value = '';\n        }\n      }\n\n      _this.setState(_defineProperty({}, field, value));\n    };\n\n    _this.getAnswersValues = function (id, title) {\n      var answers = _this.state.answers.map(function (answer) {\n        if (answer.id === id) {\n          answer.title = _this.props.clearWordFromSpaces(title);\n        }\n\n        return answer;\n      });\n\n      _this.setState({\n        answers: answers\n      });\n    };\n\n    _this.answersCountHandler = function (actionName) {\n      if (actionName === 'minus') {\n        if (_this.state.answers.length > 2) {\n          _this.setState({\n            answers: _this.state.answers.splice(1)\n          });\n        }\n      }\n\n      if (actionName === 'plus') {\n        var newAnswer = {\n          id: Date.now(),\n          title: ''\n        };\n\n        if (_this.state.answers.length < 5) {\n          _this.setState({\n            answers: _this.state.answers.concat(newAnswer)\n          });\n        }\n      } // if (actionName === 'delete') {\n      // \tif (this.state.answers.length > 2) {\n      // \t\tthis.setState( {answers: this.state.answers.filter(answer => answer.id !== id) });\n      // \t\tthis.state.isRight === id && this.setState({isRight: 0});\n      // \t}\n      // }\n\n    };\n\n    _this.updateQuestionValues = function () {\n      _this.getInputValue();\n\n      var state = {\n        questionTitle: '',\n        score: '',\n        isRight: '',\n        answers: []\n      };\n\n      _this.isQuestionValid();\n\n      _this.props.getQuestionValues(_this.props.id, state);\n    };\n\n    _this.isQuestionValid = function () {\n      if (_this.state.isRight && _this.state.questionTitle && _this.state.score) {\n        _this.props.isQuestionValid(true);\n      } else {\n        _this.props.isQuestionValid(false);\n      }\n    };\n\n    _this.answersListCreator = function () {\n      return _this.state.answers.map(function (input, index) {\n        return React.createElement(FlexRow, {\n          key: input.id,\n          width: '100%',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, React.createElement(QuestionRightAnswer, {\n          getInputValue: _this.getInputValue,\n          id: input.id,\n          name: _this.state.id,\n          count: index + 1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }), React.createElement(OneAnswer, {\n          count: index + 1,\n          id: input.id,\n          validation: _this.props.checkInputValidation,\n          isFilled: _this.props.isFilled,\n          getAnswersValues: _this.getAnswersValues,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }), React.createElement(DeleteAnswer, {\n          answersCountHandler: _this.answersCountHandler,\n          id: input.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }));\n      });\n    };\n\n    _this.state = {\n      id: _this.props.id,\n      answers: [{\n        id: Date.now(),\n        title: ''\n      }, {\n        id: Date.now() + 1,\n        title: ''\n      }],\n      isRight: 0,\n      title: '',\n      score: ''\n    };\n    return _this;\n  }\n\n  _createClass(QuestionCreator, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Question, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(FlexRow, {\n        width: '98%',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(FlexChild, {\n        width: '1068px',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(DeleteQuestion, {\n        score: this.state.score,\n        id: this.props.id,\n        count: this.props.count,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }), React.createElement(QuestionTitle, {\n        count: this.props.count,\n        validation: this.props.checkInputValidation,\n        getInputValue: this.getInputValue,\n        value: this.state.score,\n        isFilled: this.props.isFilled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      })), React.createElement(QuestionScore, {\n        validation: this.props.checkInputValidation,\n        getInputValue: this.getInputValue,\n        value: this.state.score,\n        isFilled: this.props.isFilled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      })), React.createElement(FlexRow, {\n        width: '98%',\n        wrap: 'wrap-reverse',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(FlexChild, {\n        maxWidth: '1060px',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, this.answersListCreator()), React.createElement(AnswersCounter, {\n        answersCountHandler: this.answersCountHandler,\n        answersCount: this.state.answers.length,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return QuestionCreator;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    totalScore: state.testCreator.totalScore\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    changeTotalScore: function changeTotalScore(score) {\n      return dispatch(_changeTotalScore(score));\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuestionCreator);","map":{"version":3,"sources":["C:\\Users\\Gohar\\Desktop\\testing-project\\testing-project\\src\\containers\\QuizCreator\\QuestionCreator\\QuestionCreator.js"],"names":["React","Component","OneAnswerCreator","RadioFlag","styled","css","connect","changeTotalScore","submittedFalse","DeleteQuestion","QuestionScore","QuestionTitle","AnswersCounter","QuestionRightAnswer","DeleteAnswer","OneAnswer","Question","div","FlexRow","props","width","wrap","FlexChild","maxWidth","QuestionCreator","getInputValue","e","field","value","target","clearWordFromSpaces","type","setState","getAnswersValues","id","title","answers","state","map","answer","answersCountHandler","actionName","length","splice","newAnswer","Date","now","concat","updateQuestionValues","questionTitle","score","isRight","isQuestionValid","getQuestionValues","answersListCreator","input","index","checkInputValidation","isFilled","prevProps","prevState","count","mapStateToProps","totalScore","testCreator","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport OneAnswerCreator from './QuestionComponents/AnswerCreator/OneAnswer';\r\nimport RadioFlag from '../../../components/QuizCreator/RadioFlag';\r\nimport styled, {css} from 'styled-components'\r\nimport {connect} from 'react-redux';\r\nimport {changeTotalScore, submittedFalse} from '../../../store/actions/testCreator';\r\nimport DeleteQuestion from '../QuestionCreator/QuestionComponents/DeleteQuestion';\r\nimport QuestionScore from './QuestionComponents/QuestionScore';\r\nimport QuestionTitle from './QuestionComponents/QuestionTitle';\r\nimport AnswersCounter from './QuestionComponents/AnswersCounter';\r\nimport QuestionRightAnswer from './QuestionComponents/QuestionRightAnswer';\r\nimport DeleteAnswer from './QuestionComponents/AnswerCreator/DeleteAnswer';\r\nimport OneAnswer from './QuestionComponents/AnswerCreator/OneAnswer';\r\n\r\n\r\nconst Question = styled.div`\r\n\tmargin: 30px 0;\r\n\tposition: relative;\r\n`;\r\nconst FlexRow = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n\talign-items: flex-start;\r\n\tmargin: 15px 0;\r\n\twidth: ${props => props.width || '100%'};\r\n\tbox-sizing: border-box;\r\n\r\n\t@media screen and (max-width: 1190px) {\r\n\t\tflex-wrap:  ${props => props.wrap || 'wrap'};\r\n\t\tmin-width: 100%;\r\n\t\tmax-width: 100%;\r\n\t}\r\n`;\r\nconst FlexChild = styled.div`\r\n\tmax-width:  ${props => props.maxWidth || '100%'};\r\n\twidth: ${props => props.width || '100%'};\r\n\tbox-sizing: border-box;\r\n\t@media screen and (max-width: 1190px) {\r\n\t\tmin-width: 99%;\r\n\t}\r\n`;\r\nclass QuestionCreator extends Component {\r\n   \tconstructor(props) {\r\n\t\tsuper(props);\r\n  \t\tthis.state = {\r\n\t\t\tid: this.props.id,\r\n\t\t\tanswers: [{id: Date.now(), title: ''}, {id: Date.now() + 1, title: '',}],\r\n\t\t\tisRight: 0,\r\n\t\t\ttitle: '',\r\n\t\t\tscore: '',\r\n\t\t}\r\n\t}\r\n\r\n\tgetInputValue = (e, field) => {\r\n        let value = e.target.value;\r\n\t\tvalue = this.props.clearWordFromSpaces(value);\r\n\t\t\r\n        if (e.target.type === 'number') {\r\n            if (value < 0) {\r\n                value = +value * (-1);\r\n            } else if (value > 0) {\r\n                value = +value;\r\n            } else {\r\n                value = '';\r\n            }\r\n\t\t}\r\n\t\t\r\n\t\tthis.setState({ [field]: value });\r\n\t}\r\n\r\n\tgetAnswersValues = (id, title) => {\r\n\t\tlet answers = this.state.answers.map(answer => {\r\n\t\t\tif (answer.id === id) {\r\n\t\t\t\tanswer.title = this.props.clearWordFromSpaces(title);\r\n\t\t\t}\r\n\t\t\treturn answer;\r\n\t\t})\r\n\t\tthis.setState({ answers: answers });\r\n\t}\r\n\r\n \tanswersCountHandler =(actionName) => {\r\n\t\tif (actionName === 'minus') {\r\n\t\t\tif (this.state.answers.length > 2) {\r\n\t\t\t\tthis.setState({answers: this.state.answers.splice(1)});\r\n\t\t\t} \r\n\t\t}\r\n\t\tif (actionName === 'plus') {\r\n\t\t\tlet newAnswer = {id: Date.now(), title: ''};\r\n\t\t\tif (this.state.answers.length < 5) {\r\n\t\t\t\tthis.setState({answers: this.state.answers.concat(newAnswer)});\r\n\t\t\t}\r\n\t\t}\r\n\t\t// if (actionName === 'delete') {\r\n\t\t// \tif (this.state.answers.length > 2) {\r\n\t\t// \t\tthis.setState( {answers: this.state.answers.filter(answer => answer.id !== id) });\r\n\t\t// \t\tthis.state.isRight === id && this.setState({isRight: 0});\r\n\t\t// \t}\r\n\t\t// }\r\n\t}\r\n\r\n\tupdateQuestionValues = () => {\r\n\t\t\r\n\t\tthis.getInputValue();\r\n\t\tlet state = {\r\n\t\t\tquestionTitle: '',\r\n\t\t\tscore: '',\r\n\t\t\tisRight: '',\r\n\t\t\tanswers: [],\r\n\t\t}\r\n\r\n\t\tthis.isQuestionValid();\r\n\t\tthis.props.getQuestionValues(this.props.id, state);\r\n\t}\r\n\r\n\tisQuestionValid = () => {\r\n\t\tif (this.state.isRight && this.state.questionTitle && this.state.score) {\r\n\t\t\tthis.props.isQuestionValid(true)\r\n\r\n\t\t} else {\r\n\t\t\tthis.props.isQuestionValid(false);\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps, prevState) {\r\n\t\t\r\n\t\t\r\n\t}\r\n\r\n\tanswersListCreator = () => {\r\n\t\treturn ( \r\n\t\t\tthis.state.answers.map((input, index) => (\r\n\t\t\t\t<FlexRow key={input.id} width={'100%'}>\r\n\t\t\t\t\t<QuestionRightAnswer \r\n\t\t\t\t\t\tgetInputValue={this.getInputValue}\r\n\t\t\t\t\t\tid={input.id}\r\n\t\t\t\t\t\tname={this.state.id}\r\n\t\t\t\t\t\tcount={index + 1}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<OneAnswer\r\n\t\t\t\t\t\tcount={index + 1}\r\n\t\t\t\t\t\tid={input.id}\r\n\t\t\t\t\t\tvalidation={this.props.checkInputValidation}\r\n\t\t\t\t\t\tisFilled={this.props.isFilled}\r\n\t\t\t\t\t\tgetAnswersValues={this.getAnswersValues}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<DeleteAnswer \r\n\t\t\t\t\t\tanswersCountHandler={this.answersCountHandler}\r\n\t\t\t\t\t\tid={input.id}\t\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t\r\n\t\t\t\t</FlexRow>))\r\n\t\t);\r\n\t} \t  \r\n    render() {\r\n      return (\r\n\t\t<Question>\r\n\t\t\t<FlexRow width={'98%'}>\r\n\t\t\t\t<FlexChild width={'1068px'}>\r\n\t\t\t\t\t<DeleteQuestion \r\n\t\t\t\t\t\tscore={this.state.score}\r\n\t\t\t\t\t\tid={this.props.id}\r\n\t\t\t\t\t\tcount={this.props.count}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<QuestionTitle\r\n\t\t\t\t\t\tcount={this.props.count}\r\n\t\t\t\t\t\tvalidation={this.props.checkInputValidation}\r\n                        getInputValue={this.getInputValue}\r\n                        value={this.state.score}\r\n                        isFilled={this.props.isFilled} \r\n\t\t\t\t\t/>\r\n\t\t\t\t</FlexChild>\r\n\t\t\t\t<QuestionScore \r\n\t\t\t\t\tvalidation={this.props.checkInputValidation}\r\n                    getInputValue={this.getInputValue}\r\n                    value={this.state.score}\r\n                    isFilled={this.props.isFilled} \r\n\t\t\t\t/>\r\n\t\t\t</FlexRow>\r\n\t\t\t<FlexRow width={'98%'} wrap={'wrap-reverse'}>\r\n\t\t\t\t<FlexChild maxWidth={'1060px'}>\r\n\t\t\t\t\t{this.answersListCreator()}     \r\n\t\t\t\t</FlexChild>\r\n\t\t\t\t<AnswersCounter \r\n\t\t\t\t\tanswersCountHandler={this.answersCountHandler}\r\n\t\t\t\t\tanswersCount={this.state.answers.length}\r\n\t\t\t\t/>\r\n\t\t\t</FlexRow>\t\t\t\r\n        \t</Question>\r\n\t    );\r\n  \t}\r\n}\r\nfunction mapStateToProps(state) {\r\n  return {\r\n\t totalScore: state.testCreator.totalScore,\r\n  }\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n\t\tchangeTotalScore: (score) => dispatch(changeTotalScore(score)),\r\n\t\t\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuestionCreator)\r\n"]},"metadata":{},"sourceType":"module"}