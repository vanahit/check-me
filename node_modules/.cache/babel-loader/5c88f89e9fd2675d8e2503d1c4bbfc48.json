{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\Check me\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { CHANGE_TOTAL_SCORE, SUBMITTED_TRUE, SUBMITTED_FALSE, ADD_QUESTION, DELETE_QUESTION, ANSWER_VALID, ADD_QUESTION_SUBMITTED, QUESTION_VALID, ANSWER_NOT_VALID, QUESTION_NOT_VALID, TEST_NOT_VALID, TEST_VALID, UPDATE_QUESTIONS, DELETE_STATE_DATA, TEST_CREATED_FALSE, ADD_EDITING_QUESTIONS, EDITING_TEST, DELETE_TEST } from '../actions/actionTypes';\nvar initialState = {\n  questions: [],\n  totalScore: 0,\n  testCreated: false,\n  editingTest: null,\n  deletingTest: ''\n};\nexport default function testCreator() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case CHANGE_TOTAL_SCORE:\n      return _objectSpread({}, state, {\n        totalScore: state.totalScore + action.score\n      });\n\n    case SUBMITTED_TRUE:\n      return _objectSpread({}, state, {\n        submitted: true\n      });\n\n    case SUBMITTED_FALSE:\n      return _objectSpread({}, state, {\n        submitted: false\n      });\n\n    case ANSWER_VALID:\n      return _objectSpread({}, state, {\n        isAnswerValid: true\n      });\n\n    case ANSWER_NOT_VALID:\n      return _objectSpread({}, state, {\n        isAnswerValid: false\n      });\n\n    case QUESTION_VALID:\n      return _objectSpread({}, state, {\n        isQuestionValid: true\n      });\n\n    case QUESTION_NOT_VALID:\n      return _objectSpread({}, state, {\n        isQuestionValid: false\n      });\n\n    case ADD_QUESTION:\n      var oneQuestion = {\n        id: Date.now(),\n        answers: [{\n          id: Date.now(),\n          title: ''\n        }, {\n          id: Date.now() + 1,\n          title: ''\n        }],\n        isRight: 0,\n        questionTitle: '',\n        score: ''\n      };\n      return _objectSpread({}, state, {\n        questions: state.questions.concat(oneQuestion)\n      });\n\n    case ADD_EDITING_QUESTIONS:\n      return _objectSpread({}, state, {\n        questions: action.questions\n      });\n\n    case DELETE_QUESTION:\n      return _objectSpread({}, state, {\n        questions: state.questions.filter(function (question) {\n          return question.id !== action.id;\n        }),\n        totalScore: state.totalScore - action.score\n      });\n\n    case ADD_QUESTION_SUBMITTED:\n      return _objectSpread({}, state, {\n        addQuestionSubmitted: true\n      });\n\n    case TEST_NOT_VALID:\n      return _objectSpread({}, state, {\n        testValid: false\n      });\n\n    case TEST_VALID:\n      return _objectSpread({}, state, {\n        testValid: true\n      });\n\n    case UPDATE_QUESTIONS:\n      return _objectSpread({}, state, {\n        questions: action.questions\n      });\n\n    case DELETE_STATE_DATA:\n      return {\n        questions: [],\n        totalScore: 0,\n        editingTest: null,\n        deletingTest: null,\n        testCreated: true\n      };\n\n    case TEST_CREATED_FALSE:\n      return _objectSpread({}, state, {\n        testCreated: false\n      });\n\n    case EDITING_TEST:\n      return _objectSpread({}, state, {\n        editingTest: action.test\n      });\n\n    case DELETE_TEST:\n      return _objectSpread({}, state, {\n        deletingTest: action.testId\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:\\Users\\Gohar\\Desktop\\Check me\\src\\store\\reducers\\testCreator.js"],"names":["CHANGE_TOTAL_SCORE","SUBMITTED_TRUE","SUBMITTED_FALSE","ADD_QUESTION","DELETE_QUESTION","ANSWER_VALID","ADD_QUESTION_SUBMITTED","QUESTION_VALID","ANSWER_NOT_VALID","QUESTION_NOT_VALID","TEST_NOT_VALID","TEST_VALID","UPDATE_QUESTIONS","DELETE_STATE_DATA","TEST_CREATED_FALSE","ADD_EDITING_QUESTIONS","EDITING_TEST","DELETE_TEST","initialState","questions","totalScore","testCreated","editingTest","deletingTest","testCreator","state","action","type","score","submitted","isAnswerValid","isQuestionValid","oneQuestion","id","Date","now","answers","title","isRight","questionTitle","concat","filter","question","addQuestionSubmitted","testValid","test","testId"],"mappings":"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","sourcesContent":["import {CHANGE_TOTAL_SCORE, SUBMITTED_TRUE, SUBMITTED_FALSE, ADD_QUESTION, DELETE_QUESTION, \r\n    ANSWER_VALID, ADD_QUESTION_SUBMITTED, QUESTION_VALID, ANSWER_NOT_VALID, QUESTION_NOT_VALID, \r\n    TEST_NOT_VALID, TEST_VALID, UPDATE_QUESTIONS, DELETE_STATE_DATA, TEST_CREATED_FALSE, ADD_EDITING_QUESTIONS, EDITING_TEST, DELETE_TEST} from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n   questions: [],\r\n   totalScore: 0,\r\n   testCreated: false,\r\n   editingTest: null,\r\n   deletingTest: '',\r\n}\r\n\r\nexport default function testCreator(state = initialState, action) {\r\n  switch (action.type) {\r\n    case CHANGE_TOTAL_SCORE:\r\n      return {\r\n        ...state,\r\n        totalScore: state.totalScore + action.score,\r\n      }\r\n    case SUBMITTED_TRUE:\r\n      return {\r\n        ...state,\r\n        submitted: true,\r\n    }\r\n    case SUBMITTED_FALSE:\r\n    return {\r\n      ...state,\r\n      submitted: false,\r\n  }\r\n    case ANSWER_VALID:\r\n      return {\r\n        ...state,\r\n        isAnswerValid: true,\r\n    }\r\n    case ANSWER_NOT_VALID:\r\n      return {\r\n        ...state,\r\n        isAnswerValid: false,\r\n      }\r\n    case QUESTION_VALID:\r\n      return {\r\n        ...state,\r\n        isQuestionValid: true,\r\n    }\r\n    case QUESTION_NOT_VALID:\r\n      return {\r\n        ...state,\r\n        isQuestionValid: false,\r\n      }\r\n    case ADD_QUESTION:\r\n      let oneQuestion = {\r\n        id: Date.now(),\r\n        answers: [{ id: Date.now(), title: ''}, { id: Date.now() + 1, title: ''}],\r\n        isRight: 0,\r\n        questionTitle: '',\r\n        score: '',\r\n      }\r\n      return {\r\n        ...state,\r\n        questions: state.questions.concat(oneQuestion),\r\n      }\r\n      case ADD_EDITING_QUESTIONS:\r\n        return {\r\n          ...state,\r\n          questions: action.questions,\r\n      }\r\n      case DELETE_QUESTION:\r\n        return {\r\n          ...state,\r\n          questions: state.questions.filter(question => question.id !== action.id),\r\n          totalScore: state.totalScore - action.score,\r\n        }\r\n      case ADD_QUESTION_SUBMITTED:\r\n        return {\r\n          ...state,\r\n          addQuestionSubmitted: true,\r\n        }\r\n     \r\n      case TEST_NOT_VALID:\r\n        return {\r\n          ...state,\r\n          testValid: false,\r\n      }\r\n\r\n      case TEST_VALID:\r\n        return {\r\n          ...state,\r\n          testValid: true,\r\n      }\r\n\r\n      case UPDATE_QUESTIONS:\r\n        return {\r\n          ...state,\r\n          questions: action.questions,\r\n        }\r\n\r\n      case DELETE_STATE_DATA:\r\n        return {\r\n          questions: [],\r\n          totalScore: 0,\r\n          editingTest: null,\r\n          deletingTest: null,\r\n          testCreated: true\r\n      }\r\n      case TEST_CREATED_FALSE:\r\n        return {\r\n          ...state,\r\n          testCreated: false,\r\n      }\r\n      case EDITING_TEST:\r\n        return {\r\n          ...state,\r\n          editingTest: action.test\r\n        }\r\n      case DELETE_TEST:\r\n        return {\r\n          ...state,\r\n          deletingTest: action.testId\r\n        }\r\n      default:\r\n        return state\r\n    }\r\n} \r\n"]},"metadata":{},"sourceType":"module"}