{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\\\u041D\\u043E\\u0432\\u0430\\u044F \\u043F\\u0430\\u043F\\u043A\\u0430 (2)\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\\\u041D\\u043E\\u0432\\u0430\\u044F \\u043F\\u0430\\u043F\\u043A\\u0430 (2)\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\\\u041D\\u043E\\u0432\\u0430\\u044F \\u043F\\u0430\\u043F\\u043A\\u0430 (2)\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\\\u041D\\u043E\\u0432\\u0430\\u044F \\u043F\\u0430\\u043F\\u043A\\u0430 (2)\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\\\u041D\\u043E\\u0432\\u0430\\u044F \\u043F\\u0430\\u043F\\u043A\\u0430 (2)\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\\\u041D\\u043E\\u0432\\u0430\\u044F \\u043F\\u0430\\u043F\\u043A\\u0430 (2)\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\\\u041D\\u043E\\u0432\\u0430\\u044F \\u043F\\u0430\\u043F\\u043A\\u0430 (2)\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { Route, Switch, withRouter } from \"react-router-dom\";\nimport TestCreator from './components/TestCreator/TestCreator';\nimport TestEditor from './components/TestCreator/TestEditor';\nimport AboutUs from './components/AboutUs/AboutUs';\nimport Authorization from \"./components/Autorization/Authorization\";\nimport AutorizationUser from \"./components/Autorization/AutorizationUser\";\nimport AutorizationCompany from \"./components/Autorization/AutorizationCompany\";\nimport Company from \"./components/CompanyProfile/Company\";\nimport CompaniesInUser from \"./components/CompanyInfoPage/CompaniesInUser\";\nimport UsersInCompany from \"./components/UserInfoPage/UsersInCompany\";\nimport AllTests from \"./components/AllTests\";\nimport AllCompanies from \"./components/AllCompanies\";\nimport AllUsers from \"./components/AllUsers\";\nimport User from \"./components/UserProfile/User\";\nimport NoMatch from \"./components/NoMatch\";\nimport HomePage from \"./components/HomePage/HomePage\";\nimport { connect } from 'react-redux';\nimport { getCompanies as _getCompanies, getTests as _getTests, getUsers as _getUsers } from './store/thunks/thunks';\nimport * as firebase from \"firebase\";\nimport Layout from \"./Hoc/Layout\";\nimport PopUpTestAdded from './components/PopUps/PopUpTestAdded';\nimport OneTestInfo from './components/TestInfoPage/OneTestInfo';\nimport TestPassPanel from './components/TestPassPanel/TestPassPanel';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      currentLog: null,\n      userTestAdded: false,\n      user: null\n    };\n    _this.passers = 0;\n\n    _this.userTestAdded = function () {\n      _this.setState({\n        userTestAdded: !_this.state.userTestAdded\n      });\n    };\n\n    _this.addCurrentItem = function (currentItem) {\n      _this.setState({\n        currentItem: currentItem\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      firebase.auth().onAuthStateChanged(function (currentLog) {\n        if (currentLog) {\n          _this2.setState({\n            currentLog: currentLog\n          });\n\n          if (localStorage.getItem(\"current\") === \"company\") {\n            firebase.database().ref(\"companies/\".concat(currentLog.uid)).on('value', function (snapshot) {\n              if (snapshot.val()) {\n                _this2.setState({\n                  currentLog: currentLog,\n                  user: _objectSpread({}, snapshot.val())\n                });\n              }\n            });\n          }\n\n          if (localStorage.getItem(\"current\") === \"user\") {\n            firebase.database().ref(\"user/\".concat(currentLog.uid)).on('value', function (snapshot) {\n              var user = {};\n              var tests = [];\n\n              if (snapshot.hasChild('tests')) {\n                snapshot.child('tests').forEach(function (childSnapshot) {\n                  tests.push(_objectSpread({\n                    id: childSnapshot.key\n                  }, childSnapshot.val()));\n                });\n              } else {\n                tests = [];\n              }\n\n              user = _objectSpread({\n                id: snapshot.key\n              }, snapshot.val(), {\n                tests: tests\n              });\n\n              if (snapshot.val()) {\n                _this2.setState({\n                  currentLog: currentLog,\n                  user: user\n                });\n              }\n            });\n          }\n        } else {\n          localStorage.removeItem(\"current\");\n\n          _this2.setState({\n            currentLog: null,\n            user: null\n          });\n        }\n      });\n      this.props.getCompanies();\n      this.props.getTests();\n      this.props.getUsers();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var userUnpassedTest = [];\n\n      if (this.state.user && this.state.user.type === 'user') {\n        userUnpassedTest = this.state.user.tests.filter(function (test) {\n          return test.userScore === -1;\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, this.state.userTestAdded && React.createElement(PopUpTestAdded, {\n        exists: false,\n        userTestAdded: this.userTestAdded,\n        user: this.state.user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"added to tests in your propfile\"), React.createElement(Layout, {\n        currentLog: this.state.currentLog,\n        user: this.state.user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: '/',\n        component: function component() {\n          return React.createElement(HomePage, {\n            userTestAdded: _this3.userTestAdded,\n            user: _this3.state.user,\n            addCurrentItem: _this3.addCurrentItem,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 111\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/tests/\",\n        component: function component() {\n          return React.createElement(AllTests, {\n            userTestAdded: _this3.userTestAdded,\n            user: _this3.state.user,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), this.props.companies && this.props.companies.map(function (item) {\n        return React.createElement(Route, {\n          key: item.id,\n          path: \"/company-info-page/\".concat(item.id, \"-\").concat(item.name),\n          component: function component() {\n            return React.createElement(CompaniesInUser, {\n              item: item,\n              userTestAdded: _this3.userTestAdded,\n              user: _this3.state.user,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 130\n              },\n              __self: this\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        });\n      }), this.props.users && this.props.users.map(function (item) {\n        return React.createElement(Route, {\n          key: item.id,\n          path: \"/user-info-page/\".concat(item.id, \"-\").concat(item.firstName).concat(item.lastName),\n          component: function component() {\n            return React.createElement(UsersInCompany, {\n              currentUser: _this3.state.user,\n              item: item,\n              userId: _this3.state.user ? _this3.state.user.id : 1,\n              passers: _this3.passers && _this3.passers,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 144\n              },\n              __self: this\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        });\n      }), this.props.tests && this.props.tests.map(function (item) {\n        return React.createElement(Route, {\n          key: item.id,\n          path: \"/test-info-page/\".concat(item.id),\n          component: function component() {\n            return React.createElement(OneTestInfo, {\n              user: _this3.state.user,\n              item: item,\n              userTestAdded: _this3.userTestAdded,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 155\n              },\n              __self: this\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        });\n      }), this.props.tests && this.props.tests.map(function (item) {\n        _this3.passers = item.passers;\n        return React.createElement(Route, {\n          key: item.id,\n          path: \"/\".concat(item.companyId, \"-\").concat(item.company, \"/test\").concat(item.id),\n          component: function component() {\n            return React.createElement(AllUsers, {\n              passers: item.passers ? item.passers : 'no',\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 170\n              },\n              __self: this\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168\n          },\n          __self: this\n        });\n      }), React.createElement(Route, {\n        path: \"/autorization-company\",\n        component: function component() {\n          return React.createElement(AutorizationCompany, {\n            user: _this3.state.user,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 174\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/autorization-user\",\n        component: function component() {\n          return React.createElement(AutorizationUser, {\n            user: _this3.state.user,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 175\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/aboutUs/\",\n        component: AboutUs,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/registration/user\",\n        component: AutorizationUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/registration/company\",\n        component: AutorizationCompany,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/users/\",\n        component: AllUsers,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/companies/\",\n        component: function component() {\n          return React.createElement(AllCompanies, {\n            addCurrentItem: _this3.addCurrentItem,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 180\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/authorization/\",\n        component: function component() {\n          return React.createElement(Authorization, {\n            currentLog: _this3.state.currentLog,\n            user: _this3.state.user,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 183\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }), this.state.user && this.state.user.type === 'user' ? React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, userUnpassedTest && userUnpassedTest.map(function (test) {\n        return React.createElement(Route, {\n          key: Date.now() + test.id,\n          path: \"/passing-test/\".concat(test.id),\n          component: function component() {\n            return React.createElement(TestPassPanel, {\n              test: test,\n              user: _this3.state.user,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 193\n              },\n              __self: this\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        });\n      }), React.createElement(Route, {\n        path: \"/:user/profile\",\n        component: function component() {\n          return React.createElement(User, {\n            currentCompany: _this3.state.currentLog,\n            user: _this3.state.user,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 195\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/:user/tests\",\n        component: function component() {\n          return React.createElement(User, {\n            currentCompany: _this3.state.currentLog,\n            user: _this3.state.user,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 196\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }), React.createElement(Route, {\n        component: NoMatch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      })) : React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/:company/add-test\",\n        component: function component() {\n          return React.createElement(TestCreator, {\n            user: _this3.state.user,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 201\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/:company/edit-test\",\n        component: function component() {\n          return React.createElement(TestEditor, {\n            editingTest: _this3.props.editingTest,\n            user: _this3.state.user,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 203\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/:company/profile\",\n        component: function component() {\n          return React.createElement(Company, {\n            currentCompany: _this3.state.currentLog,\n            user: _this3.state.user,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 206\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/:company/tests\",\n        component: function component() {\n          return React.createElement(Company, {\n            currentCompany: _this3.state.currentLog,\n            user: _this3.state.user,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 211\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/:company/invited-users\",\n        component: function component() {\n          return React.createElement(Company, {\n            currentCompany: _this3.state.currentLog,\n            user: _this3.state.user,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 216\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }), React.createElement(Route, {\n        component: NoMatch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      })), React.createElement(Route, {\n        component: NoMatch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    editingTest: state.appReducer.editingTest,\n    users: state.appReducer.users,\n    companies: state.appReducer.companies,\n    tests: state.appReducer.tests,\n    test: state.testPasser.testDetails\n  };\n}\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getCompanies: function getCompanies(companies) {\n      return dispatch(_getCompanies(companies));\n    },\n    getTests: function getTests(tests) {\n      return dispatch(_getTests(tests));\n    },\n    getUsers: function getUsers(users) {\n      return dispatch(_getUsers(users));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));","map":{"version":3,"sources":["C:\\Users\\Gohar\\Desktop\\Новая папка (2)\\src\\App.js"],"names":["React","Component","Route","Switch","withRouter","TestCreator","TestEditor","AboutUs","Authorization","AutorizationUser","AutorizationCompany","Company","CompaniesInUser","UsersInCompany","AllTests","AllCompanies","AllUsers","User","NoMatch","HomePage","connect","getCompanies","getTests","getUsers","firebase","Layout","PopUpTestAdded","OneTestInfo","TestPassPanel","App","state","currentLog","userTestAdded","user","passers","setState","addCurrentItem","currentItem","auth","onAuthStateChanged","localStorage","getItem","database","ref","uid","on","snapshot","val","tests","hasChild","child","forEach","childSnapshot","push","id","key","removeItem","props","userUnpassedTest","type","filter","test","userScore","companies","map","item","name","users","firstName","lastName","companyId","company","Date","now","editingTest","mapStateToProps","appReducer","testPasser","testDetails","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { Route, Switch, withRouter } from \"react-router-dom\";\r\nimport TestCreator from './components/TestCreator/TestCreator';\r\nimport TestEditor from './components/TestCreator/TestEditor';\r\nimport AboutUs from './components/AboutUs/AboutUs';\r\nimport Authorization from \"./components/Autorization/Authorization\";\r\nimport AutorizationUser from \"./components/Autorization/AutorizationUser\";\r\nimport AutorizationCompany from \"./components/Autorization/AutorizationCompany\";\r\nimport Company from \"./components/CompanyProfile/Company\";\r\nimport CompaniesInUser from \"./components/CompanyInfoPage/CompaniesInUser\";\r\nimport UsersInCompany from \"./components/UserInfoPage/UsersInCompany\";\r\nimport AllTests from \"./components/AllTests\";\r\nimport AllCompanies from \"./components/AllCompanies\";\r\nimport AllUsers from \"./components/AllUsers\";\r\nimport User from \"./components/UserProfile/User\";\r\nimport NoMatch from \"./components/NoMatch\";\r\nimport HomePage from \"./components/HomePage/HomePage\";\r\nimport { connect } from 'react-redux';\r\nimport { getCompanies, getTests, getUsers } from './store/thunks/thunks';\r\nimport * as firebase from \"firebase\";\r\nimport Layout from \"./Hoc/Layout\";\r\nimport PopUpTestAdded from './components/PopUps/PopUpTestAdded';\r\nimport OneTestInfo from './components/TestInfoPage/OneTestInfo';\r\nimport TestPassPanel from './components/TestPassPanel/TestPassPanel';\r\n\r\n\r\nclass App extends Component {\r\n\r\n    state = {\r\n        currentLog: null,\r\n        userTestAdded: false,\r\n        user: null\r\n\r\n    };\r\n    passers = 0;\r\n\r\n    componentDidMount() {\r\n        \r\n        firebase.auth().onAuthStateChanged((currentLog) => {\r\n            if (currentLog) {\r\n                this.setState({ currentLog });\r\n\r\n                if (localStorage.getItem(\"current\") === \"company\") {\r\n                       firebase.database().ref(`companies/${currentLog.uid}`).on('value', (snapshot) => {\r\n\r\n                        if (snapshot.val()) {\r\n                            this.setState({ currentLog, user: { ...snapshot.val() } })\r\n                        }\r\n                    })\r\n                }\r\n                if (localStorage.getItem(\"current\") === \"user\") {\r\n                    firebase.database().ref(`user/${currentLog.uid}`).on('value', (snapshot) => {\r\n                        let user = {};\r\n                        let tests = [];\r\n                        if (snapshot.hasChild('tests')) {\r\n                            snapshot.child('tests').forEach(childSnapshot => {\r\n                                tests.push({\r\n                                    id: childSnapshot.key,\r\n                                    ...childSnapshot.val()\r\n                                })\r\n                            })\r\n                        } else {\r\n                            tests = [];\r\n                        }\r\n                        user = {\r\n                            id: snapshot.key,\r\n                            ...snapshot.val(),\r\n                            tests\r\n                        }\r\n                        if (snapshot.val()) {\r\n                            this.setState({ currentLog, user: user });\r\n                        }\r\n                    })\r\n                }\r\n              \r\n            } else {\r\n                localStorage.removeItem(\"current\")\r\n                this.setState({ currentLog: null, user: null })\r\n            }\r\n        });\r\n        this.props.getCompanies();\r\n        this.props.getTests();\r\n        this.props.getUsers();\r\n    }\r\n\r\n\r\n    \r\n    userTestAdded = () => {\r\n        this.setState({ userTestAdded: !this.state.userTestAdded });\r\n    }\r\n    addCurrentItem = (currentItem) => {\r\n        this.setState({ currentItem: currentItem });\r\n    }\r\n\r\n    render() {\r\n       let userUnpassedTest = [];\r\n       if (this.state.user && this.state.user.type === 'user') {\r\n        userUnpassedTest = this.state.user.tests.filter(test => test.userScore === -1);\r\n        }\r\n        return (\r\n            <div>\r\n                {this.state.userTestAdded &&\r\n                    <PopUpTestAdded exists={false} userTestAdded={this.userTestAdded} user={this.state.user}>\r\n                        added to tests in your propfile\r\n                    </PopUpTestAdded>\r\n                }\r\n                <Layout currentLog={this.state.currentLog} user={this.state.user}>\r\n                    <Switch className=\"App\">\r\n                        <Route exact path={'/'} component={() =>\r\n                            <HomePage\r\n                                \r\n                                userTestAdded={this.userTestAdded}\r\n                                user={this.state.user}\r\n                                addCurrentItem={this.addCurrentItem}\r\n\r\n                            />} />\r\n                        <Route path=\"/tests/\" component={() =>\r\n                            <AllTests\r\n                                \r\n                                userTestAdded={this.userTestAdded}\r\n                                user={this.state.user}\r\n                            />} />\r\n                        {this.props.companies && this.props.companies.map(item => {\r\n                            return (\r\n                                <Route\r\n                                    key={item.id}\r\n                                    path={`/company-info-page/${item.id}-${item.name}`}\r\n                                    component={() => \r\n                                    <CompaniesInUser \r\n                                        item={item}\r\n                                        \r\n                                        userTestAdded={this.userTestAdded}\r\n                                        user={this.state.user}\r\n                                     />} \r\n                                />\r\n                            )\r\n                        })}\r\n                          {this.props.users && this.props.users.map(item => {\r\n                            return (\r\n                                <Route \r\n                                    key={item.id}\r\n                                    path={`/user-info-page/${item.id}-${item.firstName}${item.lastName}`}\r\n                                    component={() => <UsersInCompany\r\n                                        currentUser={this.state.user} \r\n                                        item={item} \r\n                                        userId={this.state.user ? this.state.user.id : 1} passers={this.passers && this.passers}/>} />\r\n                            )\r\n                        })}\r\n                         {this.props.tests && this.props.tests.map(item => {\r\n                            return (\r\n                                <Route \r\n                                key={item.id}\r\n                                    path={`/test-info-page/${item.id}`} component={() =>\r\n                                    <OneTestInfo\r\n                                        user={this.state.user}\r\n                                        item={item}\r\n                                        \r\n                                        userTestAdded={this.userTestAdded}\r\n                                    />} />\r\n                            )\r\n                        })}\r\n                        \r\n    \r\n                        {this.props.tests && this.props.tests.map(item => {\r\n                            this.passers = item.passers;\r\n                            return (\r\n                                <Route \r\n                                    key={item.id}\r\n                                    path={`/${item.companyId}-${item.company}/test${item.id}`} component={() => <AllUsers  passers={item.passers ? item.passers : 'no'}/>} />\r\n                            )\r\n                        })}\r\n\r\n                        <Route path=\"/autorization-company\" component={() => <AutorizationCompany  user={this.state.user} />}  />\r\n                        <Route path=\"/autorization-user\" component={() => <AutorizationUser user={this.state.user}/>}  />\r\n                        <Route path=\"/aboutUs/\" component={AboutUs} />\r\n                        <Route path='/registration/user' component={AutorizationUser} />\r\n                        <Route path='/registration/company' component={AutorizationCompany} />\r\n                        <Route path=\"/users/\" component={AllUsers} />\r\n                        <Route path=\"/companies/\" component={() => <AllCompanies addCurrentItem={this.addCurrentItem} />} />\r\n                        <Route\r\n                            path='/authorization/'\r\n                            component={() => <Authorization currentLog={this.state.currentLog}\r\n                                user={this.state.user} />}\r\n                        />\r\n\r\n                        {this.state.user && this.state.user.type === 'user'\r\n                            ? <Switch>\r\n                                {userUnpassedTest && userUnpassedTest.map(test => {\r\n                                return(<Route \r\n                                        key={Date.now() + test.id}\r\n                                        path={`/passing-test/${test.id}`} component={() =>\r\n                                    <TestPassPanel test={test} user={this.state.user}   />} />)\r\n                                })}\r\n                                <Route path=\"/:user/profile\" component={() => <User currentCompany={this.state.currentLog} user={this.state.user} />} />\r\n                                <Route path=\"/:user/tests\" component={() => <User currentCompany={this.state.currentLog} user={this.state.user} />} /> \r\n                                <Route component={NoMatch} />\r\n                            </Switch>\r\n\r\n                            : <Switch>\r\n                                <Route path=\"/:company/add-test\" component={() => <TestCreator user={this.state.user} />} />\r\n                                <Route path=\"/:company/edit-test\" component={() =>\r\n                                    <TestEditor editingTest={this.props.editingTest} user={this.state.user} />}\r\n                                />\r\n                                <Route path=\"/:company/profile\" component={() =>\r\n                                    <Company\r\n                                        currentCompany={this.state.currentLog}\r\n                                        user={this.state.user}\r\n                                         />} />\r\n                                <Route path=\"/:company/tests\" component={() =>\r\n                                    <Company\r\n                                        currentCompany={this.state.currentLog}\r\n                                        user={this.state.user}\r\n                                         />} />\r\n                                <Route path=\"/:company/invited-users\" component={() =>\r\n                                    <Company\r\n                                        currentCompany={this.state.currentLog}\r\n                                        user={this.state.user}\r\n                                         />} />\r\n                                <Route component={NoMatch} />\r\n                            </Switch>\r\n                        }\r\n\r\n                        <Route component={NoMatch} />\r\n\r\n                    </Switch>\r\n                </Layout>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        editingTest: state.appReducer.editingTest,\r\n        users: state.appReducer.users,\r\n        companies: state.appReducer.companies,\r\n        tests: state.appReducer.tests,\r\n        test: state.testPasser.testDetails,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getCompanies: companies => dispatch(getCompanies(companies)),\r\n        getTests: tests => dispatch(getTests(tests)),\r\n        getUsers: users => dispatch(getUsers(users)),\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\r\n"]},"metadata":{},"sourceType":"module"}