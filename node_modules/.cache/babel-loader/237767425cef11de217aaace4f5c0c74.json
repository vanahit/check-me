{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { GET_TESTS_STARTED, GET_TESTS_SUCCESS, GET_TESTS_FAILURE, GET_USERS_STARTED, GET_USERS_SUCCESS, GET_USERS_FAILURE, GET_COMPANIES_STARTED, GET_COMPANIES_SUCCESS, GET_COMPANIES_FAILURE } from \"./actionTypes\";\nexport function getTestsSuccess(tests) {\n  return {\n    type: GET_TESTS_SUCCESS,\n    payload: _objectSpread({}, tests)\n  };\n}\n;\nexport function getTestsStarted() {\n  return {\n    type: GET_TESTS_STARTED\n  };\n}\n;\nexport function getTestsFailure(error) {\n  return {\n    type: GET_TESTS_FAILURE,\n    payload: {\n      error: error\n    }\n  };\n}\n;\n\nvar getUsersSuccess = function getUsersSuccess(users) {\n  return {\n    type: GET_USERS_SUCCESS,\n    payload: _objectSpread({}, users)\n  };\n};\n\nvar getUsersStarted = function getUsersStarted() {\n  return {\n    type: GET_USERS_STARTED\n  };\n};\n\nvar getUsersFailure = function getUsersFailure(error) {\n  return {\n    type: GET_USERS_FAILURE,\n    payload: {\n      error: error\n    }\n  };\n};\n\nvar getCompaniesSuccess = function getCompaniesSuccess(companies) {\n  return {\n    type: GET_COMPANIES_SUCCESS,\n    payload: _objectSpread({}, companies)\n  };\n};\n\nvar getCompaniesStarted = function getCompaniesStarted() {\n  return {\n    type: GET_COMPANIES_STARTED\n  };\n};\n\nvar getCompaniesFailure = function getCompaniesFailure(error) {\n  return {\n    type: GET_COMPANIES_FAILURE,\n    payload: {\n      error: error\n    }\n  };\n};","map":{"version":3,"sources":["C:\\Users\\Gohar\\Desktop\\testing-project\\testing-project\\src\\store\\actions\\appAction.js"],"names":["GET_TESTS_STARTED","GET_TESTS_SUCCESS","GET_TESTS_FAILURE","GET_USERS_STARTED","GET_USERS_SUCCESS","GET_USERS_FAILURE","GET_COMPANIES_STARTED","GET_COMPANIES_SUCCESS","GET_COMPANIES_FAILURE","getTestsSuccess","tests","type","payload","getTestsStarted","getTestsFailure","error","getUsersSuccess","users","getUsersStarted","getUsersFailure","getCompaniesSuccess","companies","getCompaniesStarted","getCompaniesFailure"],"mappings":";AAAA,SAASA,iBAAT,EACQC,iBADR,EAEQC,iBAFR,EAGQC,iBAHR,EAIQC,iBAJR,EAKQC,iBALR,EAMQC,qBANR,EAOQC,qBAPR,EAQQC,qBARR,QAUa,eAVb;AAYE,OAAO,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AACrC,SAAO;AACLC,IAAAA,IAAI,EAAEV,iBADD;AAELW,IAAAA,OAAO,oBACFF,KADE;AAFF,GAAP;AAMD;AAAA;AAED,OAAO,SAASG,eAAT,GAA4B;AACjC,SAAO;AACJF,IAAAA,IAAI,EAAEX;AADF,GAAP;AAGD;AAAA;AAED,OAAO,SAASc,eAAT,CAA0BC,KAA1B,EAAiC;AACtC,SAAO;AACLJ,IAAAA,IAAI,EAAET,iBADD;AAELU,IAAAA,OAAO,EAAE;AACPG,MAAAA,KAAK,EAALA;AADO;AAFJ,GAAP;AAMD;AAAA;;AAED,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCN,IAAAA,IAAI,EAAEP,iBAD0B;AAEhCQ,IAAAA,OAAO,oBACFK,KADE;AAFyB,GAAL;AAAA,CAA7B;;AAOA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB;AAAA,SAAO;AAC7BP,IAAAA,IAAI,EAAER;AADuB,GAAP;AAAA,CAAxB;;AAIA,IAAMgB,eAAe,GAAG,SAAlBA,eAAkB,CAAAJ,KAAK;AAAA,SAAK;AAChCJ,IAAAA,IAAI,EAAEN,iBAD0B;AAEhCO,IAAAA,OAAO,EAAE;AACPG,MAAAA,KAAK,EAALA;AADO;AAFuB,GAAL;AAAA,CAA7B;;AAQF,IAAMK,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAC,SAAS;AAAA,SAAK;AACtCV,IAAAA,IAAI,EAAEJ,qBADgC;AAEtCK,IAAAA,OAAO,oBACFS,SADE;AAF+B,GAAL;AAAA,CAArC;;AAOA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB;AAAA,SAAO;AAC/BX,IAAAA,IAAI,EAAEL;AADyB,GAAP;AAAA,CAA5B;;AAIA,IAAMiB,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAR,KAAK;AAAA,SAAK;AAClCJ,IAAAA,IAAI,EAAEH,qBAD4B;AAElCI,IAAAA,OAAO,EAAE;AACPG,MAAAA,KAAK,EAALA;AADO;AAFyB,GAAL;AAAA,CAAjC","sourcesContent":["import { GET_TESTS_STARTED, \r\n        GET_TESTS_SUCCESS, \r\n        GET_TESTS_FAILURE,\r\n        GET_USERS_STARTED, \r\n        GET_USERS_SUCCESS, \r\n        GET_USERS_FAILURE,\r\n        GET_COMPANIES_STARTED, \r\n        GET_COMPANIES_SUCCESS, \r\n        GET_COMPANIES_FAILURE,\r\n\r\n      } from \"./actionTypes\";\r\n\r\n  export function getTestsSuccess(tests) {\r\n    return {\r\n      type: GET_TESTS_SUCCESS,\r\n      payload: {\r\n        ...tests\r\n      }\r\n    }\r\n  };\r\n  \r\n  export function getTestsStarted () {\r\n    return {\r\n       type: GET_TESTS_STARTED\r\n    }\r\n  };\r\n  \r\n  export function getTestsFailure (error) {\r\n    return {\r\n      type: GET_TESTS_FAILURE,\r\n      payload: {\r\n        error\r\n      }\r\n    }\r\n  };\r\n\r\n  const getUsersSuccess = users => ({\r\n    type: GET_USERS_SUCCESS,\r\n    payload: {\r\n      ...users\r\n    }\r\n  });\r\n  \r\n  const getUsersStarted = () => ({\r\n    type: GET_USERS_STARTED\r\n  });\r\n  \r\n  const getUsersFailure = error => ({\r\n    type: GET_USERS_FAILURE,\r\n    payload: {\r\n      error\r\n    }\r\n  })\r\n\r\n\r\nconst getCompaniesSuccess = companies => ({\r\n    type: GET_COMPANIES_SUCCESS,\r\n    payload: {\r\n      ...companies\r\n    }\r\n  });\r\n  \r\nconst getCompaniesStarted = () => ({\r\n    type: GET_COMPANIES_STARTED\r\n  });\r\n  \r\nconst getCompaniesFailure = error => ({\r\n    type: GET_COMPANIES_FAILURE,\r\n    payload: {\r\n      error\r\n    }\r\n  })"]},"metadata":{},"sourceType":"module"}