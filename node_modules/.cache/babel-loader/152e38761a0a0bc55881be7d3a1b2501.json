{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { Route, Switch, withRouter } from \"react-router-dom\";\nimport TestCreator from './components/TestCreator/TestCreator';\nimport TestEditor from './components/TestCreator/TestEditor';\nimport AboutUs from './components/AboutUs/AboutUs';\nimport Authorization from \"./components/Autorization/Authorization\";\nimport AutorizationUser from \"./components/Autorization/AutorizationUser\";\nimport AutorizationCompany from \"./components/Autorization/AutorizationCompany\";\nimport Company from \"./containers/Pages/Company\";\nimport CompaniesInUser from \"./containers/Pages/CompanyInfoPage/CompaniesInUser\";\nimport UsersInCompany from \"./containers/Pages/UsersInCompany\";\nimport AllTests from \"./containers/Pages/AllTests\";\nimport AllCompanies from \"./containers/Pages/AllCompanies\";\nimport AllUsers from \"./containers/Pages/AllUsers\";\nimport User from \"./containers/Pages/User\";\nimport NoMatch from \"./components/NoMatch\";\nimport HomePage from \"./components/HomePage/HomePage\";\nimport { connect } from 'react-redux';\nimport { getCompanies as _getCompanies, getTests as _getTests, getUsers as _getUsers } from './store/thunks/thunks';\nimport * as firebase from \"firebase\";\nimport Layout from \"./Hoc/Layout\";\nimport PopUpLogin from './components/PopUps/PopUpLogin';\nimport PopUpDelete from './components/PopUps/PopUpDelete';\nimport { userLogin as _userLogin } from './store/actions/appAction';\nimport PopUpTestAdded from './components/PopUps/PopUpTestAdded';\nimport StartTest from './containers/Pages/StartTest';\nimport OneTestInfo from './containers/Pages/TestInfoPage/OneTestInfo';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      currentLog: null,\n      testsLoaded: _this.props.testsLoaded,\n      companiesLoaded: _this.props.companiesLoaded,\n      testAddClicked: false,\n      testDeletedClicked: false,\n      userTestAdded: false,\n      currentItem: '',\n      user: null\n    };\n\n    _this.testAddClicked = function () {\n      _this.setState({\n        testAddClicked: !_this.state.testAddClicked\n      });\n    };\n\n    _this.testDeletedClicked = function () {\n      _this.setState({\n        testDeletedClicked: !_this.state.testDeletedClicked\n      });\n    };\n\n    _this.userTestAdded = function () {\n      _this.setState({\n        userTestAdded: !_this.state.userTestAdded\n      });\n    };\n\n    _this.addCurrentItem = function (currentItem) {\n      _this.setState({\n        currentItem: currentItem\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      firebase.auth().onAuthStateChanged(function (currentLog) {\n        if (currentLog) {\n          _this2.setState({\n            currentLog: currentLog\n          });\n\n          if (localStorage.getItem(\"current\") === \"company\") {\n            _this2.props.userLogin('company');\n\n            firebase.database().ref(\"companies/\".concat(currentLog.uid)).on('value', function (snapshot) {\n              if (snapshot.val()) {\n                _this2.setState({\n                  currentLog: currentLog,\n                  user: _objectSpread({}, snapshot.val())\n                });\n              }\n            });\n          }\n\n          if (localStorage.getItem(\"current\") === \"user\") {\n            _this2.props.userLogin('user');\n\n            firebase.database().ref(\"user/\".concat(currentLog.uid)).on('value', function (snapshot) {\n              var user = {};\n              var tests = [];\n\n              if (snapshot.hasChild('tests')) {\n                snapshot.child('tests').forEach(function (childSnapshot) {\n                  tests.push(_objectSpread({\n                    id: childSnapshot.key\n                  }, childSnapshot.val()));\n                });\n              } else {\n                tests = [];\n              }\n\n              user = _objectSpread({\n                id: snapshot.key\n              }, snapshot.val(), {\n                tests: tests\n              });\n\n              if (snapshot.val()) {\n                _this2.setState({\n                  currentLog: currentLog,\n                  user: user\n                });\n              }\n            });\n          }\n\n          console.log(\"log in \");\n        } else {\n          console.log('log out');\n          localStorage.removeItem(\"current\");\n\n          _this2.setState({\n            currentLog: null,\n            user: null\n          });\n        }\n      });\n      this.props.getCompanies();\n      this.props.getTests();\n      this.props.getUsers();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (this.props.testsLoaded === true && this.props.testsLoaded !== prevProps.testsLoaded) {\n        this.setState({\n          testsLoaded: this.props.testsLoaded\n        });\n      }\n\n      if (this.props.companiesLoaded === true && this.props.companiesLoaded !== prevProps.companiesLoaded) {\n        this.setState({\n          companiesLoaded: this.props.companiesLoaded\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var testInfo = '';\n\n      if (this.state.currentItem) {\n        testInfo = this.state.currentItem;\n      }\n\n      console.log(testInfo);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, this.state.testAddClicked && React.createElement(PopUpLogin, {\n        testAddClicked: this.testAddClicked,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }), this.state.testDeletedClicked && React.createElement(PopUpDelete, {\n        testDeletedClicked: this.testDeletedClicked,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }), this.state.userTestAdded && React.createElement(PopUpTestAdded, {\n        exists: false,\n        userTestAdded: this.userTestAdded,\n        user: this.state.user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"added to tests in your propfile\"), React.createElement(Layout, {\n        currentLog: this.state.currentLog,\n        user: this.state.user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: '/',\n        component: function component() {\n          return React.createElement(HomePage, {\n            testAddClicked: _this3.testAddClicked,\n            userTestAdded: _this3.userTestAdded,\n            user: _this3.state.user,\n            addCurrentItem: _this3.addCurrentItem,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 148\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/tests/\",\n        component: function component() {\n          return React.createElement(AllTests, {\n            addCurrentItem: _this3.addCurrentItem,\n            testAddClicked: _this3.testAddClicked,\n            userTestAdded: _this3.userTestAdded,\n            user: _this3.state.user,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 156\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/autorization-company\",\n        component: AutorizationCompany,\n        currentCompany: this.state.currentLog,\n        user: this.state.user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/autorization-user\",\n        component: AutorizationUser,\n        currentCompany: this.state.currentLog,\n        user: this.state.user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/aboutUs/\",\n        component: AboutUs,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/registration/user\",\n        component: AutorizationUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/registration/company\",\n        component: AutorizationCompany,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/users/\",\n        component: AllUsers,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/companies/\",\n        component: function component() {\n          return React.createElement(AllCompanies, {\n            addCurrentItem: _this3.addCurrentItem,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 168\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/company-info-page/:comp\",\n        component: function component() {\n          return React.createElement(CompaniesInUser, {\n            item: testInfo,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 170\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/test-info-page/:test\",\n        component: function component() {\n          return React.createElement(OneTestInfo, {\n            user: _this3.state.user,\n            testInfo: testInfo,\n            testAddClicked: _this3.testAddClicked,\n            userTestAdded: _this3.userTestAdded,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 173\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }), React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, this.props.users.map(function (user) {\n        return React.createElement(Route, {\n          path: \"/user-info-page/:\".concat(user.id),\n          component: UsersInCompany,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181\n          },\n          __self: this\n        });\n      })), React.createElement(Route, {\n        path: \"/authorization/\",\n        component: function component() {\n          return React.createElement(Authorization, {\n            currentCompany: _this3.state.currentLog,\n            user: _this3.state.user,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 187\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }), localStorage.getItem(\"current\") === \"user\" ? React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/:user/start-test\",\n        component: function component() {\n          return React.createElement(StartTest, {\n            user: _this3.state.user,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 194\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/:user/:text\",\n        component: function component() {\n          return React.createElement(User, {\n            currentCompany: _this3.state.currentLog,\n            user: _this3.state.user,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 195\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      })) : React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/:company/add-test\",\n        component: function component() {\n          return React.createElement(TestCreator, {\n            user: _this3.state.user,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 200\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/:company/edit-test\",\n        component: function component() {\n          return React.createElement(TestEditor, {\n            editingTest: _this3.props.editingTest,\n            user: _this3.state.user,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 202\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/:company/:text\",\n        component: function component() {\n          return React.createElement(Company, {\n            currentCompany: _this3.state.currentLog,\n            user: _this3.state.user,\n            testDeletedClicked: _this3.testDeletedClicked,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 205\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      })), React.createElement(Route, {\n        component: NoMatch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    testsLoaded: state.appReducer.testsLoaded,\n    companiesLoaded: state.appReducer.companiesLoaded,\n    editingTest: state.appReducer.editingTest,\n    users: state.appReducer.users\n  };\n}\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getCompanies: function getCompanies(companies) {\n      return dispatch(_getCompanies(companies));\n    },\n    getTests: function getTests(tests) {\n      return dispatch(_getTests(tests));\n    },\n    getUsers: function getUsers(users) {\n      return dispatch(_getUsers(users));\n    },\n    userLogin: function userLogin(userType) {\n      return dispatch(_userLogin(userType));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));","map":{"version":3,"sources":["C:\\Users\\Gohar\\Desktop\\testing-project\\testing-project\\src\\App.js"],"names":["React","Component","Route","Switch","withRouter","TestCreator","TestEditor","AboutUs","Authorization","AutorizationUser","AutorizationCompany","Company","CompaniesInUser","UsersInCompany","AllTests","AllCompanies","AllUsers","User","NoMatch","HomePage","connect","getCompanies","getTests","getUsers","firebase","Layout","PopUpLogin","PopUpDelete","userLogin","PopUpTestAdded","StartTest","OneTestInfo","App","state","currentLog","testsLoaded","props","companiesLoaded","testAddClicked","testDeletedClicked","userTestAdded","currentItem","user","setState","addCurrentItem","auth","onAuthStateChanged","localStorage","getItem","database","ref","uid","on","snapshot","val","tests","hasChild","child","forEach","childSnapshot","push","id","key","console","log","removeItem","prevProps","prevState","testInfo","users","map","editingTest","mapStateToProps","appReducer","mapDispatchToProps","dispatch","companies","userType"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,WAAP;AACA,SAAQC,KAAR,EAAeC,MAAf,EAAuBC,UAAvB,QAAwC,kBAAxC;AACA,OAAOC,WAAP,MAAwB,sCAAxB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,aAAP,MAA0B,yCAA1B;AACA,OAAOC,gBAAP,MAA6B,4CAA7B;AACA,OAAOC,mBAAP,MAAgC,+CAAhC;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,OAAOC,eAAP,MAA4B,oDAA5B;AACA,OAAOC,cAAP,MAA2B,mCAA3B;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,YAAP,MAAyB,iCAAzB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,YAAY,IAAZA,aAAR,EAAsBC,QAAQ,IAARA,SAAtB,EAAgCC,QAAQ,IAARA,SAAhC,QAA+C,uBAA/C;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,SAASC,SAAS,IAATA,UAAT,QAA0B,2BAA1B;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,OAAOC,WAAP,MAAwB,6CAAxB;;IAGMC,G;;;;;;;;;;;;;;;;;UAGFC,K,GAAQ;AACJC,MAAAA,UAAU,EAAE,IADR;AAEJC,MAAAA,WAAW,EAAE,MAAKC,KAAL,CAAWD,WAFpB;AAGJE,MAAAA,eAAe,EAAE,MAAKD,KAAL,CAAWC,eAHxB;AAIJC,MAAAA,cAAc,EAAE,KAJZ;AAKJC,MAAAA,kBAAkB,EAAE,KALhB;AAMJC,MAAAA,aAAa,EAAE,KANX;AAOJC,MAAAA,WAAW,EAAE,EAPT;AAQJC,MAAAA,IAAI,EAAE;AARF,K;;UA8ERJ,c,GAAiB,YAAM;AACnB,YAAKK,QAAL,CAAc;AAACL,QAAAA,cAAc,EAAE,CAAC,MAAKL,KAAL,CAAWK;AAA7B,OAAd;AACH,K;;UAEDC,kB,GAAqB,YAAM;AACvB,YAAKI,QAAL,CAAc;AAACJ,QAAAA,kBAAkB,EAAE,CAAC,MAAKN,KAAL,CAAWM;AAAjC,OAAd;AACH,K;;UACDC,a,GAAgB,YAAM;AAClB,YAAKG,QAAL,CAAc;AAACH,QAAAA,aAAa,EAAE,CAAC,MAAKP,KAAL,CAAWO;AAA5B,OAAd;AACH,K;;UACFI,c,GAAiB,UAACH,WAAD,EAAiB;AACjC,YAAKE,QAAL,CAAc;AAACF,QAAAA,WAAW,EAAEA;AAAd,OAAd;AACA,K;;;;;;;wCA/EoB;AAAA;;AAEhBjB,MAAAA,QAAQ,CAACqB,IAAT,GAAgBC,kBAAhB,CAAmC,UAACZ,UAAD,EAAgB;AAC/C,YAAIA,UAAJ,EAAgB;AACZ,UAAA,MAAI,CAACS,QAAL,CAAc;AAACT,YAAAA,UAAU,EAAVA;AAAD,WAAd;;AAEA,cAAGa,YAAY,CAACC,OAAb,CAAqB,SAArB,MAAoC,SAAvC,EAAkD;AAC9C,YAAA,MAAI,CAACZ,KAAL,CAAWR,SAAX,CAAqB,SAArB;;AAEAJ,YAAAA,QAAQ,CAACyB,QAAT,GAAoBC,GAApB,qBAAqChB,UAAU,CAACiB,GAAhD,GAAuDC,EAAvD,CAA0D,OAA1D,EAAkE,UAACC,QAAD,EAAY;AAE1E,kBAAIA,QAAQ,CAACC,GAAT,EAAJ,EAAoB;AACf,gBAAA,MAAI,CAACX,QAAL,CAAc;AAACT,kBAAAA,UAAU,EAAVA,UAAD;AAAaQ,kBAAAA,IAAI,oBAAMW,QAAQ,CAACC,GAAT,EAAN;AAAjB,iBAAd;AACJ;AAIJ,aARD;AASH;;AACD,cAAGP,YAAY,CAACC,OAAb,CAAqB,SAArB,MAAoC,MAAvC,EAA+C;AAC3C,YAAA,MAAI,CAACZ,KAAL,CAAWR,SAAX,CAAqB,MAArB;;AACAJ,YAAAA,QAAQ,CAACyB,QAAT,GAAoBC,GAApB,gBAAgChB,UAAU,CAACiB,GAA3C,GAAkDC,EAAlD,CAAqD,OAArD,EAA6D,UAACC,QAAD,EAAa;AACtE,kBAAIX,IAAI,GAAG,EAAX;AACA,kBAAIa,KAAK,GAAG,EAAZ;;AACA,kBAAIF,QAAQ,CAACG,QAAT,CAAkB,OAAlB,CAAJ,EAAgC;AAC5BH,gBAAAA,QAAQ,CAACI,KAAT,CAAe,OAAf,EAAwBC,OAAxB,CAAgC,UAAAC,aAAa,EAAI;AAC7CJ,kBAAAA,KAAK,CAACK,IAAN;AACIC,oBAAAA,EAAE,EAAEF,aAAa,CAACG;AADtB,qBAEOH,aAAa,CAACL,GAAd,EAFP;AAIH,iBALD;AAMH,eAPD,MAOO;AACHC,gBAAAA,KAAK,GAAG,EAAR;AACH;;AACDb,cAAAA,IAAI;AACAmB,gBAAAA,EAAE,EAAER,QAAQ,CAACS;AADb,iBAEGT,QAAQ,CAACC,GAAT,EAFH;AAGCC,gBAAAA,KAAK,EAALA;AAHD,gBAAJ;;AAKA,kBAAGF,QAAQ,CAACC,GAAT,EAAH,EAAkB;AACd,gBAAA,MAAI,CAACX,QAAL,CAAc;AAACT,kBAAAA,UAAU,EAAVA,UAAD;AAAaQ,kBAAAA,IAAI,EAAEA;AAAnB,iBAAd;AACH;AACJ,aArBD;AAsBH;;AACDqB,UAAAA,OAAO,CAACC,GAAR;AACH,SA1CD,MA0CO;AACHD,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAjB,UAAAA,YAAY,CAACkB,UAAb,CAAwB,SAAxB;;AACA,UAAA,MAAI,CAACtB,QAAL,CAAc;AAACT,YAAAA,UAAU,EAAE,IAAb;AAAmBQ,YAAAA,IAAI,EAAE;AAAzB,WAAd;AACH;AACJ,OAhDD;AAiDA,WAAKN,KAAL,CAAWf,YAAX;AACA,WAAKe,KAAL,CAAWd,QAAX;AACA,WAAKc,KAAL,CAAWb,QAAX;AACH;;;uCAEkB2C,S,EAAWC,S,EAAW;AACrC,UAAI,KAAK/B,KAAL,CAAWD,WAAX,KAA2B,IAA3B,IAAmC,KAAKC,KAAL,CAAWD,WAAX,KAA2B+B,SAAS,CAAC/B,WAA5E,EAAyF;AAErF,aAAKQ,QAAL,CAAc;AAACR,UAAAA,WAAW,EAAE,KAAKC,KAAL,CAAWD;AAAzB,SAAd;AACH;;AACD,UAAI,KAAKC,KAAL,CAAWC,eAAX,KAA+B,IAA/B,IAAuC,KAAKD,KAAL,CAAWC,eAAX,KAA+B6B,SAAS,CAAC7B,eAApF,EAAqG;AAEjG,aAAKM,QAAL,CAAc;AAACN,UAAAA,eAAe,EAAE,KAAKD,KAAL,CAAWC;AAA7B,SAAd;AACH;AACJ;;;6BAgBQ;AAAA;;AACL,UAAI+B,QAAQ,GAAG,EAAf;;AACA,UAAI,KAAKnC,KAAL,CAAWQ,WAAf,EAA4B;AACxB2B,QAAAA,QAAQ,GAAG,KAAKnC,KAAL,CAAWQ,WAAtB;AAGH;;AACDsB,MAAAA,OAAO,CAACC,GAAR,CAAYI,QAAZ;AACA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEK,KAAKnC,KAAL,CAAWK,cAAX,IAA6B,oBAAC,UAAD;AAAY,QAAA,cAAc,EAAE,KAAKA,cAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFlC,EAGK,KAAKL,KAAL,CAAWM,kBAAX,IAAiC,oBAAC,WAAD;AAAa,QAAA,kBAAkB,EAAE,KAAKA,kBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHtC,EAIK,KAAKN,KAAL,CAAWO,aAAX,IACG,oBAAC,cAAD;AAAiB,QAAA,MAAM,EAAE,KAAzB;AAAiC,QAAA,aAAa,EAAE,KAAKA,aAArD;AAAoE,QAAA,IAAI,EAAE,KAAKP,KAAL,CAAWS,IAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CALR,EAUI,oBAAC,MAAD;AAAQ,QAAA,UAAU,EAAE,KAAKT,KAAL,CAAWC,UAA/B;AAA2C,QAAA,IAAI,EAAE,KAAKD,KAAL,CAAWS,IAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAE,GAAnB;AAAwB,QAAA,SAAS,EAAE;AAAA,iBAC/B,oBAAC,QAAD;AACI,YAAA,cAAc,EAAE,MAAI,CAACJ,cADzB;AAEI,YAAA,aAAa,EAAE,MAAI,CAACE,aAFxB;AAGI,YAAA,IAAI,EAAE,MAAI,CAACP,KAAL,CAAWS,IAHrB;AAII,YAAA,cAAc,EAAE,MAAI,CAACE,cAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAD+B;AAAA,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EASI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,SAAZ;AAAsB,QAAA,SAAS,EAAE;AAAA,iBAC7B,oBAAC,QAAD;AACI,YAAA,cAAc,EAAE,MAAI,CAACA,cADzB;AAEI,YAAA,cAAc,EAAE,MAAI,CAACN,cAFzB;AAGI,YAAA,aAAa,EAAE,MAAI,CAACE,aAHxB;AAII,YAAA,IAAI,EAAE,MAAI,CAACP,KAAL,CAAWS,IAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAD6B;AAAA,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATJ,EAgBI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,uBAAZ;AAAoC,QAAA,SAAS,EAAEhC,mBAA/C;AAAoE,QAAA,cAAc,EAAE,KAAKuB,KAAL,CAAWC,UAA/F;AAA2G,QAAA,IAAI,EAAE,KAAKD,KAAL,CAAWS,IAA5H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhBJ,EAiBI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,oBAAZ;AAAiC,QAAA,SAAS,EAAEjC,gBAA5C;AAA8D,QAAA,cAAc,EAAE,KAAKwB,KAAL,CAAWC,UAAzF;AAAqG,QAAA,IAAI,EAAE,KAAKD,KAAL,CAAWS,IAAtH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAjBJ,EAkBI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,WAAZ;AAAwB,QAAA,SAAS,EAAEnC,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAlBJ,EAmBI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,oBAAZ;AAAiC,QAAA,SAAS,EAAEE,gBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnBJ,EAoBI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,uBAAZ;AAAoC,QAAA,SAAS,EAAEC,mBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QApBJ,EAqBI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,SAAZ;AAAsB,QAAA,SAAS,EAAEM,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QArBJ,EAsBI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,aAAZ;AAA0B,QAAA,SAAS,EAAE;AAAA,iBAAM,oBAAC,YAAD;AAAc,YAAA,cAAc,EAAE,MAAI,CAAC4B,cAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAN;AAAA,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAtBJ,EAuBI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,0BAAZ;AACI,QAAA,SAAS,EAAG;AAAA,iBAAM,oBAAC,eAAD;AAAkB,YAAA,IAAI,EAAEwB,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAN;AAAA,SADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAvBJ,EA0BI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,uBAAZ;AAAoC,QAAA,SAAS,EAAE;AAAA,iBAC3C,oBAAC,WAAD;AACI,YAAA,IAAI,EAAE,MAAI,CAACnC,KAAL,CAAWS,IADrB;AAEI,YAAA,QAAQ,EAAE0B,QAFd;AAGI,YAAA,cAAc,EAAE,MAAI,CAAC9B,cAHzB;AAII,YAAA,aAAa,EAAE,MAAI,CAACE,aAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAD2C;AAAA,SAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA1BJ,EAiCI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKJ,KAAL,CAAWiC,KAAX,CAAiBC,GAAjB,CAAqB,UAAA5B,IAAI,EAAI;AAC5B,eAAO,oBAAC,KAAD;AAAO,UAAA,IAAI,6BAAsBA,IAAI,CAACmB,EAA3B,CAAX;AAA4C,UAAA,SAAS,EAAEhD,cAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAFA,CADL,CAjCJ,EAuCI,oBAAC,KAAD;AACI,QAAA,IAAI,EAAC,iBADT;AAEI,QAAA,SAAS,EAAE;AAAA,iBAAM,oBAAC,aAAD;AAAe,YAAA,cAAc,EAAE,MAAI,CAACoB,KAAL,CAAWC,UAA1C;AACe,YAAA,IAAI,EAAE,MAAI,CAACD,KAAL,CAAWS,IADhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAN;AAAA,SAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAvCJ,EA6CKK,YAAY,CAACC,OAAb,CAAqB,SAArB,MAAoC,MAApC,GACK,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,mBAAZ;AAAgC,QAAA,SAAS,EAAE;AAAA,iBACvC,oBAAC,SAAD;AAAW,YAAA,IAAI,EAAE,MAAI,CAACf,KAAL,CAAWS,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADuC;AAAA,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAGC,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,cAAZ;AAA2B,QAAA,SAAS,EAAE;AAAA,iBAAM,oBAAC,IAAD;AAAM,YAAA,cAAc,EAAE,MAAI,CAACT,KAAL,CAAWC,UAAjC;AAA6C,YAAA,IAAI,EAAE,MAAI,CAACD,KAAL,CAAWS,IAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAN;AAAA,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHD,CADL,GAQQ,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,oBAAZ;AAAiC,QAAA,SAAS,EAAE;AAAA,iBAAM,oBAAC,WAAD;AAAa,YAAA,IAAI,EAAE,MAAI,CAACT,KAAL,CAAWS,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAN;AAAA,SAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH,EAEG,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,qBAAZ;AAAkC,QAAA,SAAS,EAAE;AAAA,iBACzC,oBAAC,UAAD;AAAY,YAAA,WAAW,EAAE,MAAI,CAACN,KAAL,CAAWmC,WAApC;AAAiD,YAAA,IAAI,EAAE,MAAI,CAACtC,KAAL,CAAWS,IAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADyC;AAAA,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFH,EAKG,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,iBAAZ;AAA8B,QAAA,SAAS,EAAE;AAAA,iBACzC,oBAAC,OAAD;AACI,YAAA,cAAc,EAAE,MAAI,CAACT,KAAL,CAAWC,UAD/B;AAEI,YAAA,IAAI,EAAE,MAAI,CAACD,KAAL,CAAWS,IAFrB;AAGI,YAAA,kBAAkB,EAAE,MAAI,CAACH,kBAH7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADyC;AAAA,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALH,CArDb,EAkEI,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAErB,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAlEJ,CADJ,CAVJ,CADJ;AAoFH;;;;EA3LajB,S;;AA8LlB,SAASuE,eAAT,CAAyBvC,KAAzB,EAAgC;AAC5B,SAAO;AACHE,IAAAA,WAAW,EAAEF,KAAK,CAACwC,UAAN,CAAiBtC,WAD3B;AAEHE,IAAAA,eAAe,EAAEJ,KAAK,CAACwC,UAAN,CAAiBpC,eAF/B;AAGHkC,IAAAA,WAAW,EAAEtC,KAAK,CAACwC,UAAN,CAAiBF,WAH3B;AAIHF,IAAAA,KAAK,EAAEpC,KAAK,CAACwC,UAAN,CAAiBJ;AAJrB,GAAP;AAMH;;AAED,IAAMK,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AACnC,SAAO;AACHtD,IAAAA,YAAY,EAAE,sBAAAuD,SAAS;AAAA,aAAID,QAAQ,CAACtD,aAAY,CAACuD,SAAD,CAAb,CAAZ;AAAA,KADpB;AAEHtD,IAAAA,QAAQ,EAAE,kBAAAiC,KAAK;AAAA,aAAIoB,QAAQ,CAACrD,SAAQ,CAACiC,KAAD,CAAT,CAAZ;AAAA,KAFZ;AAGHhC,IAAAA,QAAQ,EAAE,kBAAA8C,KAAK;AAAA,aAAIM,QAAQ,CAACpD,SAAQ,CAAC8C,KAAD,CAAT,CAAZ;AAAA,KAHZ;AAIHzC,IAAAA,SAAS,EAAE,mBAAAiD,QAAQ;AAAA,aAAIF,QAAQ,CAAC/C,UAAS,CAACiD,QAAD,CAAV,CAAZ;AAAA;AAJhB,GAAP;AAOH,CARD;;AAUA,eAAezE,UAAU,CAACgB,OAAO,CAACoD,eAAD,EAAkBE,kBAAlB,CAAP,CAA6C1C,GAA7C,CAAD,CAAzB","sourcesContent":["import React, {Component} from 'react';\r\nimport './App.css';\r\nimport {Route, Switch, withRouter} from \"react-router-dom\";\r\nimport TestCreator from './components/TestCreator/TestCreator';\r\nimport TestEditor from './components/TestCreator/TestEditor';\r\nimport AboutUs from './components/AboutUs/AboutUs';\r\nimport Authorization from \"./components/Autorization/Authorization\";\r\nimport AutorizationUser from \"./components/Autorization/AutorizationUser\";\r\nimport AutorizationCompany from \"./components/Autorization/AutorizationCompany\";\r\nimport Company from \"./containers/Pages/Company\";\r\nimport CompaniesInUser from \"./containers/Pages/CompanyInfoPage/CompaniesInUser\";\r\nimport UsersInCompany from \"./containers/Pages/UsersInCompany\";\r\nimport AllTests from \"./containers/Pages/AllTests\";\r\nimport AllCompanies from \"./containers/Pages/AllCompanies\";\r\nimport AllUsers from \"./containers/Pages/AllUsers\";\r\nimport User from \"./containers/Pages/User\";\r\nimport NoMatch from \"./components/NoMatch\";\r\nimport HomePage from \"./components/HomePage/HomePage\";\r\nimport {connect} from 'react-redux';\r\nimport {getCompanies, getTests, getUsers} from './store/thunks/thunks';\r\nimport * as firebase from \"firebase\";\r\nimport Layout from \"./Hoc/Layout\";\r\nimport PopUpLogin from './components/PopUps/PopUpLogin';\r\nimport PopUpDelete from './components/PopUps/PopUpDelete';\r\nimport { userLogin } from './store/actions/appAction';\r\nimport PopUpTestAdded from './components/PopUps/PopUpTestAdded';\r\nimport StartTest from './containers/Pages/StartTest';\r\nimport OneTestInfo from './containers/Pages/TestInfoPage/OneTestInfo';\r\n\r\n\r\nclass App extends Component {\r\n\r\n\r\n    state = {\r\n        currentLog: null,\r\n        testsLoaded: this.props.testsLoaded,\r\n        companiesLoaded: this.props.companiesLoaded,\r\n        testAddClicked: false,\r\n        testDeletedClicked: false,\r\n        userTestAdded: false,\r\n        currentItem: '',\r\n        user: null\r\n    };\r\n\r\n    componentDidMount() {\r\n\r\n        firebase.auth().onAuthStateChanged((currentLog) => {\r\n            if (currentLog) {\r\n                this.setState({currentLog});\r\n\r\n                if(localStorage.getItem(\"current\") === \"company\") {\r\n                    this.props.userLogin('company');\r\n                    \r\n                    firebase.database().ref(`companies/${currentLog.uid}`).on('value',(snapshot)=>{\r\n\r\n                        if (snapshot.val()) {\r\n                             this.setState({currentLog, user: {...snapshot.val()} })\r\n                        }\r\n                       \r\n                       \r\n\r\n                    })\r\n                }\r\n                if(localStorage.getItem(\"current\") === \"user\") {\r\n                    this.props.userLogin('user');\r\n                    firebase.database().ref(`user/${currentLog.uid}`).on('value',(snapshot)=> {\r\n                        let user = {};\r\n                        let tests = [];\r\n                        if (snapshot.hasChild('tests')) {\r\n                            snapshot.child('tests').forEach(childSnapshot => {\r\n                                tests.push({\r\n                                    id: childSnapshot.key,\r\n                                    ...childSnapshot.val()\r\n                                })\r\n                            })\r\n                        } else {\r\n                            tests = [];\r\n                        }\r\n                        user = {\r\n                            id: snapshot.key,\r\n                            ...snapshot.val(),\r\n                             tests\r\n                        }\r\n                        if(snapshot.val()){\r\n                            this.setState({currentLog, user: user});\r\n                        }\r\n                    })\r\n                }\r\n                console.log(`log in `);\r\n            } else {\r\n                console.log('log out');\r\n                localStorage.removeItem(\"current\")\r\n                this.setState({currentLog: null, user: null})\r\n            }\r\n        });\r\n        this.props.getCompanies();\r\n        this.props.getTests();\r\n        this.props.getUsers();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props.testsLoaded === true && this.props.testsLoaded !== prevProps.testsLoaded) {\r\n\r\n            this.setState({testsLoaded: this.props.testsLoaded})\r\n        }\r\n        if (this.props.companiesLoaded === true && this.props.companiesLoaded !== prevProps.companiesLoaded) {\r\n\r\n            this.setState({companiesLoaded: this.props.companiesLoaded})\r\n        }\r\n    }\r\n\r\n    testAddClicked = () => {\r\n        this.setState({testAddClicked: !this.state.testAddClicked});\r\n    };\r\n\r\n    testDeletedClicked = () => {\r\n        this.setState({testDeletedClicked: !this.state.testDeletedClicked});\r\n    }\r\n    userTestAdded = () => {\r\n        this.setState({userTestAdded: !this.state.userTestAdded});\r\n    }\r\n   addCurrentItem = (currentItem) => {\r\n    this.setState({currentItem: currentItem});\r\n   }\r\n\r\n    render() {\r\n        let testInfo = '';\r\n        if (this.state.currentItem) {\r\n            testInfo = this.state.currentItem;\r\n            \r\n            \r\n        }\r\n        console.log(testInfo);\r\n        return (\r\n            <div>\r\n\r\n                {this.state.testAddClicked && <PopUpLogin testAddClicked={this.testAddClicked}/>} \r\n                {this.state.testDeletedClicked && <PopUpDelete testDeletedClicked={this.testDeletedClicked}/>} \r\n                {this.state.userTestAdded && \r\n                    <PopUpTestAdded  exists={false}  userTestAdded={this.userTestAdded} user={this.state.user}>\r\n                        added to tests in your propfile\r\n                    </PopUpTestAdded>\r\n                }\r\n                \r\n                <Layout currentLog={this.state.currentLog} user={this.state.user}>\r\n                    <Switch className=\"App\">\r\n                        <Route exact path={'/'} component={() => \r\n                            <HomePage \r\n                                testAddClicked={this.testAddClicked}\r\n                                userTestAdded={this.userTestAdded}\r\n                                user={this.state.user}\r\n                                addCurrentItem={this.addCurrentItem}\r\n\r\n                            />}/>\r\n                        <Route path=\"/tests/\" component={() => \r\n                            <AllTests \r\n                                addCurrentItem={this.addCurrentItem}\r\n                                testAddClicked={this.testAddClicked}\r\n                                userTestAdded={this.userTestAdded}\r\n                                user={this.state.user}\r\n                            />}/>\r\n                        <Route path=\"/autorization-company\" component={AutorizationCompany} currentCompany={this.state.currentLog} user={this.state.user} />\r\n                        <Route path=\"/autorization-user\" component={AutorizationUser} currentCompany={this.state.currentLog} user={this.state.user}/>\r\n                        <Route path=\"/aboutUs/\" component={AboutUs}/>\r\n                        <Route path='/registration/user' component={AutorizationUser}/>\r\n                        <Route path='/registration/company' component={AutorizationCompany}/>\r\n                        <Route path=\"/users/\" component={AllUsers}/>\r\n                        <Route path=\"/companies/\" component={() => <AllCompanies addCurrentItem={this.addCurrentItem} />}/>\r\n                        <Route path=\"/company-info-page/:comp\" \r\n                            component={ () => <CompaniesInUser  item={testInfo}/>} />\r\n                        \r\n                        <Route path=\"/test-info-page/:test\" component={() => \r\n                            <OneTestInfo  \r\n                                user={this.state.user} \r\n                                testInfo={testInfo} \r\n                                testAddClicked={this.testAddClicked}\r\n                                userTestAdded={this.userTestAdded}\r\n                            />}/>\r\n                        <Switch>\r\n                            {this.props.users.map(user => {\r\n                              return <Route path={`/user-info-page/:${user.id}`} component={UsersInCompany}/>  \r\n                            })}\r\n                        </Switch>\r\n                        \r\n                        <Route\r\n                            path='/authorization/'\r\n                            component={() => <Authorization currentCompany={this.state.currentLog}\r\n                                                            user={this.state.user}/>}\r\n                        />\r\n                        \r\n                        {localStorage.getItem(\"current\") === \"user\" \r\n                            ? <Switch>\r\n                                <Route path=\"/:user/start-test\" component={() => \r\n                                    <StartTest user={this.state.user}/>}/>\r\n                               <Route path=\"/:user/:text\" component={() => <User currentCompany={this.state.currentLog} user={this.state.user} />}/> \r\n                                \r\n                               </Switch>\r\n                            \r\n                            :    <Switch>\r\n                                    <Route path=\"/:company/add-test\" component={() => <TestCreator user={this.state.user} />}/>\r\n                                    <Route path=\"/:company/edit-test\" component={() => \r\n                                        <TestEditor editingTest={this.props.editingTest} user={this.state.user} />}\r\n                                    />\r\n                                    <Route path=\"/:company/:text\" component={() =>  \r\n                                    <Company \r\n                                        currentCompany={this.state.currentLog} \r\n                                        user={this.state.user} \r\n                                        testDeletedClicked={this.testDeletedClicked} />}/>\r\n                                </Switch>\r\n                        }\r\n\r\n                        <Route component={NoMatch}/>\r\n\r\n                    </Switch>\r\n                </Layout>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        testsLoaded: state.appReducer.testsLoaded,\r\n        companiesLoaded: state.appReducer.companiesLoaded,\r\n        editingTest: state.appReducer.editingTest,\r\n        users: state.appReducer.users,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getCompanies: companies => dispatch(getCompanies(companies)),\r\n        getTests: tests => dispatch(getTests(tests)),\r\n        getUsers: users => dispatch(getUsers(users)),\r\n        userLogin: userType => dispatch(userLogin(userType))\r\n\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\r\n"]},"metadata":{},"sourceType":"module"}