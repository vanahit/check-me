{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\src\\\\containers\\\\TestPassPanel\\\\TestPasser.js\";\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n\\tmargin-bottom: 16px;\\n\\tpadding: 32px 16px;\\n\\tbackground-color: rgba(20, 18, 24, 0.8);\\n\\twidth: 100%;\\n\\tmin-height: 100px;\\n\\tbox-sizing: border-box;\\n\\t\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n\\tpadding-left: 144px;\\n\\tfont-size: 24px;\\n\\tcolor: rgba(16, 5, 41, 1);\\n\\theight: 44px;\\n\\twidth: 100%;\\n\\ttext-align: center;\\n\\tline-height: 44px;\\n\\tbox-sizing: border-box;\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n\\tpadding: 16px 32px;\\n\\tword-wrap: break-word;\\n\\ttext-align: center;\\n\\tbackground-color: #4F9DA6;\\n\\tborder-radius: 4px;\\n\\twidth:  \", \";\\n\\tmin-height: 60px;\\n\\tbox-sizing: border-box;\\n\\t\\t   \\n\\t@media screen and (max-width: 1190px) {\\n\\t\\tmargin: 5px;\\n\\t\\tmin-width: 100%;\\n\\t}\\n\\t:hover {\\n\\t\\tbackground-color: #3A7C84;\\n\\t}\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n\\twidth:  \", \";\\n\\tborder-radius: 4px;\\n\\tbox-sizing: border-box;\\n\\t\\t   \\n\\t@media screen and (max-width: 1190px) {\\n\\t\\tmargin: 5px;\\n\\t\\tmin-width: 100%;\\n\\t}\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n\\tdisplay: flex;\\n\\tflex-direction: \", \";\\n\\tflex-wrap: wrap;\\n\\tmargin: 16px 0;\\n\\tjustify-content: space-between;\\n\\talign-items: center;\\n\\twidth: \", \";\\n\\theight: \", \";\\n\\tbox-sizing: border-box;\\n\\n\\t@media screen and (max-width: 1190px) {\\n\\t\\tflex-direction: column;\\n\\t\\tmin-width: 100%;\\n\\t}\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n\\tmargin: auto;\\n\\tmax-width: 1200px;\\n\\tfont-size: 24px;\\n\\tcolor: white;\\n\\toverflow: none;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport styled, { css } from 'styled-components';\nimport { connect } from 'react-redux';\nimport Timer from './Timer';\nvar Main = styled.div(_templateObject());\nvar FlexRow = styled.div(_templateObject2(), function (props) {\n  return props.dir || 'row';\n}, function (props) {\n  return props.width || '100%';\n}, function (props) {\n  return props.height || '100%';\n});\nvar FlexChild = styled.div(_templateObject3(), function (props) {\n  return props.width || '25%';\n});\nvar FlexChildAnswer = styled.div(_templateObject4(), function (props) {\n  return props.width || '25%';\n});\nvar QuestionNumber = styled.div(_templateObject5());\nvar AnswerTitle = styled.div(_templateObject6());\n\nvar TestPasser =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TestPasser, _Component);\n\n  function TestPasser(props) {\n    var _this;\n\n    _classCallCheck(this, TestPasser);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TestPasser).call(this, props));\n\n    _this.changeCurrentQuesion = function (id) {\n      _this.setState({\n        currentQuesion: _this.state.testData.questions[id]\n      });\n    };\n\n    _this.sortRandomAnswers = function () {\n      function sortRandom(a, b) {\n        return Math.random() - 0.5;\n      }\n\n      if (_this.state.currentQuesion.answers) {\n        var answers = _this.state.currentQuesion.answers;\n        return answers.sort(sortRandom);\n      }\n    };\n\n    _this.choosedAnswer = function (e) {\n      if (+e.target.id === _this.state.currentQuesion.isRight) {\n        _this.props.totalScore(_this.state.currentQuesion.score);\n\n        if (_this.id < _this.state.currentQuesion.answers.length) {\n          _this.id++;\n\n          _this.changeCurrentQuesion(_this.id);\n        } else {\n          _this.props.testEnded();\n\n          _this.questionsEnded = true;\n        }\n      }\n    };\n\n    _this.state = {\n      testData: {},\n      currentQuesion: 0,\n      testLoaded: false\n    };\n    _this.id = 0;\n    _this.questionsEnded = false;\n    return _this;\n  }\n\n  _createClass(TestPasser, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.test.questions !== this.props.test.questions) {\n        this.setState({\n          currentQuesion: this.props.test.questions[0],\n          testData: this.props.test\n        });\n      }\n\n      console.log(this.state.testData);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var questions = [];\n      var answers = [];\n\n      if (this.state.testData) {\n        questions = this.props.test.questions;\n        answers = this.sortRandomAnswers();\n      }\n\n      return React.createElement(Main, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, this.state.testData, \" ?\", React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(FlexRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(FlexChild, {\n        width: 'calc(100% - 144px)',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(QuestionNumber, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"Question \", this.id + 1, \"/\", questions.length)), React.createElement(FlexChild, {\n        width: '144px',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(Timer, {\n        time: this.state.testData.testDuration,\n        testEnded: this.props.testEnded,\n        questionsEnded: this.questionsEnded,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }))), React.createElement(FlexRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(FlexChild, {\n        width: '100%',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(AnswerTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, questions.length && this.state.currentQuesion.questionTitle))), answers.map(function (answer, index) {\n        return React.createElement(FlexRow, {\n          key: \"answer\".concat(index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        }, React.createElement(FlexChildAnswer, {\n          width: '100%',\n          id: answer.id,\n          onClick: _this2.choosedAnswer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164\n          },\n          __self: this\n        }, answer.title));\n      })), \": '' }\");\n    }\n  }]);\n\n  return TestPasser;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    test: state.testPasser.testDetails\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {};\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TestPasser);","map":{"version":3,"sources":["C:\\Users\\Gohar\\Desktop\\testing-project\\testing-project\\src\\containers\\TestPassPanel\\TestPasser.js"],"names":["React","Component","styled","css","connect","Timer","Main","div","FlexRow","props","dir","width","height","FlexChild","FlexChildAnswer","QuestionNumber","AnswerTitle","TestPasser","changeCurrentQuesion","id","setState","currentQuesion","state","testData","questions","sortRandomAnswers","sortRandom","a","b","Math","random","answers","sort","choosedAnswer","e","target","isRight","totalScore","score","length","testEnded","questionsEnded","testLoaded","prevProps","test","console","log","testDuration","questionTitle","map","answer","index","title","mapStateToProps","testPasser","testDetails","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport styled, {css} from 'styled-components'\r\nimport { connect } from 'react-redux';\r\nimport Timer from './Timer';\r\n\r\n\r\n\r\nconst Main = styled.div`\r\n\tmargin: auto;\r\n\tmax-width: 1200px;\r\n\tfont-size: 24px;\r\n\tcolor: white;\r\n\toverflow: none;\r\n`;\r\nconst FlexRow = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: ${props => props.dir || 'row'};\r\n\tflex-wrap: wrap;\r\n\tmargin: 16px 0;\r\n\tjustify-content: space-between;\r\n\talign-items: center;\r\n\twidth: ${props => props.width || '100%'};\r\n\theight: ${props => props.height || '100%'};\r\n\tbox-sizing: border-box;\r\n\r\n\t@media screen and (max-width: 1190px) {\r\n\t\tflex-direction: column;\r\n\t\tmin-width: 100%;\r\n\t}\r\n`;\r\nconst FlexChild = styled.div`\r\n\twidth:  ${props => props.width || '25%'};\r\n\tborder-radius: 4px;\r\n\tbox-sizing: border-box;\r\n\t\t   \r\n\t@media screen and (max-width: 1190px) {\r\n\t\tmargin: 5px;\r\n\t\tmin-width: 100%;\r\n\t}\r\n`;\r\nconst FlexChildAnswer = styled.div`\r\n\tpadding: 16px 32px;\r\n\tword-wrap: break-word;\r\n\ttext-align: center;\r\n\tbackground-color: #4F9DA6;\r\n\tborder-radius: 4px;\r\n\twidth:  ${props => props.width || '25%'};\r\n\tmin-height: 60px;\r\n\tbox-sizing: border-box;\r\n\t\t   \r\n\t@media screen and (max-width: 1190px) {\r\n\t\tmargin: 5px;\r\n\t\tmin-width: 100%;\r\n\t}\r\n\t:hover {\r\n\t\tbackground-color: #3A7C84;\r\n\t}\r\n`;\r\nconst QuestionNumber = styled.div`\r\n\tpadding-left: 144px;\r\n\tfont-size: 24px;\r\n\tcolor: rgba(16, 5, 41, 1);\r\n\theight: 44px;\r\n\twidth: 100%;\r\n\ttext-align: center;\r\n\tline-height: 44px;\r\n\tbox-sizing: border-box;\r\n`;\r\nconst AnswerTitle = styled.div`\r\n\tmargin-bottom: 16px;\r\n\tpadding: 32px 16px;\r\n\tbackground-color: rgba(20, 18, 24, 0.8);\r\n\twidth: 100%;\r\n\tmin-height: 100px;\r\n\tbox-sizing: border-box;\r\n\t\r\n`;\r\n\r\nclass TestPasser extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\ttestData: {},\r\n\t\t\tcurrentQuesion: 0,\r\n\t\t\ttestLoaded: false,\r\n        }\r\n        this.id = 0;\r\n        this.questionsEnded = false;\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.test.questions !== this.props.test.questions) {\r\n            this.setState({\r\n                currentQuesion: this.props.test.questions[0],\r\n                testData: this.props.test,\r\n            })\r\n        }\r\n        console.log(this.state.testData);\r\n    }\r\n\r\n    changeCurrentQuesion = (id) => {\r\n        this.setState({currentQuesion: this.state.testData.questions[id]});\r\n    }\r\n\r\n    sortRandomAnswers = () => {\r\n        function sortRandom (a, b) {\r\n            return Math.random() - 0.5;\r\n        }\r\n        if (this.state.currentQuesion.answers) {\r\n            let answers = this.state.currentQuesion.answers;\r\n            return  answers.sort(sortRandom);\r\n        }\r\n        \r\n    }\r\n\r\n    choosedAnswer = (e) => {\r\n        if (+e.target.id === this.state.currentQuesion.isRight) {\r\n            this.props.totalScore(this.state.currentQuesion.score);\r\n\r\n            if (this.id < this.state.currentQuesion.answers.length) {\r\n                this.id ++;\r\n                this.changeCurrentQuesion(this.id);\r\n            } else {\r\n                this.props.testEnded();\r\n                this.questionsEnded = true;\r\n            }\r\n        }\r\n    }\r\n  \trender() {\r\n\r\n        let questions = [];\r\n        let answers = [];\r\n\r\n\t\tif (this.state.testData) {\r\n            questions = this.props.test.questions;\r\n            answers = this.sortRandomAnswers();\r\n        } \r\n       \treturn (\r\n\t\t\t<Main>\r\n\t\t\t\t{this.state.testData} ?\r\n\t\t\t\t <div>\r\n\t\t\t\t\t<FlexRow>\r\n\t\t\t\t\t\t<FlexChild width={'calc(100% - 144px)'}>\r\n\t\t\t\t\t\t\t<QuestionNumber>Question {this.id + 1}/{questions.length}</QuestionNumber>\r\n\t\t\t\t\t\t</FlexChild>\r\n\t\t\t\t\t\t<FlexChild width={'144px'}>\r\n\t\t\t\t\t\t\t<Timer \r\n\t\t\t\t\t\t\t\ttime={this.state.testData.testDuration}\r\n                                testEnded={this.props.testEnded}\r\n                                questionsEnded={this.questionsEnded}\r\n\t\t\t\t\t\t\t/> \r\n\t\t\t\t\t\t</FlexChild>\r\n\t\t\t\t\t</FlexRow>\r\n\t\t\t\t\t<FlexRow >\r\n\t\t\t\t\t\t<FlexChild width={'100%'}>\r\n                            <AnswerTitle>\r\n                                {questions.length && this.state.currentQuesion.questionTitle}\r\n                            </AnswerTitle>\r\n\t\t\t\t\t\t</FlexChild>\r\n\t\t\t\t\t</FlexRow>\r\n\t\t\t\t\t{   \r\n                        answers.map((answer, index) => (\r\n\r\n                            <FlexRow key={`answer${index}`}>\r\n                                <FlexChildAnswer  \r\n                                    width={'100%'}\r\n                                    id={answer.id}\r\n                                    onClick={this.choosedAnswer}\r\n                                >\r\n                                    {answer.title}\r\n                                </FlexChildAnswer>\r\n                            </FlexRow>\r\n\t\t\t\t\t    ))}\r\n\t\t\t\t</div>\r\n\t\t\t\t: ''\r\n\t\t\t\t}\r\n\t\t\t</Main>\r\n\t\t\t\r\n\t\t);\r\n\t}\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n\treturn {\r\n        test: state.testPasser.testDetails,\r\n\t}\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n\treturn {\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TestPasser)\r\n\r\n"]},"metadata":{},"sourceType":"module"}