{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _taggedTemplateLiteral from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\src\\\\components\\\\Autorization\\\\registration\\\\CompanyRegistration.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    font-size: 34px;\\n    color: white;\\n    font-weight: bold;\\n    text-align: center;\\n    margin-bottom: 60px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport * as firebase from \"firebase\";\nimport styled from 'styled-components';\nvar LoginDiv = styled.div(_templateObject());\n\nvar CompanyRegistration =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CompanyRegistration, _Component);\n\n  function CompanyRegistration(props) {\n    var _this;\n\n    _classCallCheck(this, CompanyRegistration);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CompanyRegistration).call(this, props));\n    _this.state = {\n      name: '',\n      email: '',\n      password: '',\n      confirmedPassword: '',\n      validErrors: {\n        name: true,\n        email: true,\n        password: true,\n        confirmedPassword: true\n      },\n      progress: 0,\n      progressColor: \"red\",\n      progressColorConfirm: \"white\",\n      errorMessage: \"\",\n      unmounted: false\n    };\n    _this.changeField = _this.changeField.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(CompanyRegistration, [{\n    key: \"changeField\",\n    value: function changeField(e, field) {\n      this.setState(_defineProperty({}, field, e.target.value));\n\n      if (field === \"password\") {\n        this.checkPassword(e.target.value);\n        this.checkConfirmedPassword(e.target.value, this.state.confirmedPassword);\n      }\n\n      if (field === \"confirmedPassword\") {\n        this.checkConfirmedPassword(this.state.password, e.target.value);\n      }\n    }\n  }, {\n    key: \"checkPassword\",\n    value: function checkPassword(password) {\n      var strength = 0;\n\n      if (password.match(/[a-zA-Z0-9][a-zA-Z0-9]+/)) {\n        strength += 1;\n      }\n\n      if (password.match(/[~<>?]+/)) {\n        strength += 1;\n      }\n\n      if (password.match(/[!@$%^&*()]+/)) {\n        strength += 1;\n      }\n\n      if (password.match(/[A-Z]/g)) {\n        strength += 1;\n      }\n\n      if (password.match(/[0-9]/g)) {\n        strength += 1;\n      }\n\n      switch (strength) {\n        case 0:\n          this.setState({\n            progress: 0,\n            progressColor: \"red\"\n          });\n          break;\n\n        case 1:\n          this.setState({\n            progress: 20,\n            progressColor: \"red\"\n          });\n          break;\n\n        case 2:\n          this.setState({\n            progress: 40,\n            progressColor: \"red\"\n          });\n          break;\n\n        case 3:\n          this.setState({\n            progress: 60,\n            progressColor: \"orange\"\n          });\n          break;\n\n        case 4:\n          this.setState({\n            progress: 80,\n            progressColor: \"orange\"\n          });\n          break;\n\n        default:\n          this.setState({\n            progress: 100,\n            progressColor: \"green\"\n          });\n      }\n    }\n  }, {\n    key: \"checkConfirmedPassword\",\n    value: function checkConfirmedPassword(password, confirmedPassword) {\n      if (password.substr(0, confirmedPassword.length) === confirmedPassword && confirmedPassword.length === password.length && confirmedPassword.length !== 0) {\n        this.setState({\n          progressColorConfirm: \"green\"\n        });\n      } else if (confirmedPassword.length === 0) {\n        this.setState({\n          progressColorConfirm: \"white\"\n        });\n      } else if (password.substr(0, confirmedPassword.length) === confirmedPassword && confirmedPassword.length !== password.length) {\n        this.setState({\n          progressColorConfirm: \"orange\"\n        });\n      } else {\n        this.setState({\n          progressColorConfirm: \"red\"\n        });\n      }\n    }\n  }, {\n    key: \"signUpCompany\",\n    value: function signUpCompany() {\n      var _this2 = this;\n\n      this.setState({\n        unmounted: false\n      });\n\n      if (this.state.password === this.state.confirmedPassword && this.state.password && this.state.name && this.state.email) {\n        var company = _objectSpread({}, this.state);\n\n        firebase.auth().createUserWithEmailAndPassword(company.email, company.password).then(function (res) {\n          company.description = '';\n          company.image = '';\n          company.test = {};\n          company.id = res.uid;\n          company.type = 'company';\n          localStorage.setItem(\"current\", \"company\");\n          firebase.database().ref(\"companies/\".concat(res.uid)).set(company);\n\n          if (!_this2.state.unmounted) {\n            _this2.setState({\n              errorMessage: \"\"\n            });\n\n            firebase.auth().currentUser.sendEmailVerification();\n          }\n        }).catch(function (e) {\n          _this2.setState({\n            errorMessage: e.message\n          });\n\n          console.log(e.message);\n        });\n      } else {\n        var obj = {\n          name: this.state.name,\n          email: this.state.email,\n          password: this.state.password,\n          confirmedPassword: this.state.confirmedPassword\n        };\n        var objErrors = this.state.validErrors;\n\n        for (var key in obj) {\n          if (obj[key] === \"\") {\n            objErrors[key] = false;\n          }\n        }\n\n        console.log('not equal');\n      }\n\n      this.setState(_objectSpread({}, this.state));\n    }\n  }, {\n    key: \"ComponentWillUnmount\",\n    value: function ComponentWillUnmount() {\n      this.setState({\n        unmounted: true\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      e.preventDefault();\n      this.signUpCompany();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          name = _this$state.name,\n          email = _this$state.email,\n          password = _this$state.password,\n          confirmedPassword = _this$state.confirmedPassword,\n          validErrors = _this$state.validErrors,\n          progress = _this$state.progress,\n          progressColor = _this$state.progressColor,\n          progressColorConfirm = _this$state.progressColorConfirm,\n          errorMessage = _this$state.errorMessage;\n      return React.createElement(\"form\", {\n        onSubmit: this.handleSubmit.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"registration company-registration\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Logwrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(LoginDiv, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"Register\"), errorMessage !== \"\" && React.createElement(\"div\", {\n        className: \"errorMessage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, errorMessage), validErrors.name === false && name === \"\" ? React.createElement(\"input\", {\n        className: \"info-field eror\",\n        placeholder: \"Write Your Name *\",\n        type: \"text\",\n        value: name,\n        onChange: function onChange(e) {\n          return _this3.changeField(e, 'name');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }) : React.createElement(\"input\", {\n        className: \"info-field\",\n        placeholder: \"Name *\",\n        type: \"text\",\n        value: name,\n        onChange: function onChange(e) {\n          return _this3.changeField(e, 'name');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }), validErrors.email === false && email === \"\" ? React.createElement(\"input\", {\n        className: \"info-field eror\",\n        placeholder: \"Write Your Email *\",\n        type: \"text\",\n        value: email,\n        onChange: function onChange(e) {\n          return _this3.changeField(e, 'email');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }) : React.createElement(\"input\", {\n        className: \"info-field\",\n        placeholder: \"Email *\",\n        type: \"text\",\n        value: email,\n        onChange: function onChange(e) {\n          return _this3.changeField(e, 'email');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }), validErrors.password === false && password === \"\" ? React.createElement(\"input\", {\n        className: \"info-field password eror\",\n        placeholder: \"Write Your Password *\",\n        type: \"password\",\n        value: password,\n        onChange: function onChange(e) {\n          return _this3.changeField(e, 'password');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }) : React.createElement(\"input\", {\n        className: \"info-field password\",\n        placeholder: \"Password *\",\n        type: \"password\",\n        value: password,\n        onChange: function onChange(e) {\n          return _this3.changeField(e, 'password');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }), validErrors.password === false && password === \"\" ? React.createElement(\"progress\", {\n        max: \"100\",\n        value: progress,\n        className: \"progress \".concat(progressColor, \" eror\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }) : React.createElement(\"progress\", {\n        max: \"100\",\n        value: progress,\n        className: \"progress \".concat(progressColor),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }), validErrors.confirmedPassword === false && confirmedPassword === \"\" ? React.createElement(\"input\", {\n        className: \"info-field password eror\",\n        placeholder: \"Write Your Confirme Password *\",\n        type: \"password\",\n        value: confirmedPassword,\n        onChange: function onChange(e) {\n          return _this3.changeField(e, 'confirmedPassword');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }) : React.createElement(\"input\", {\n        className: \"info-field password\",\n        placeholder: \"Confirm Password *\",\n        type: \"password\",\n        value: confirmedPassword,\n        onChange: function onChange(e) {\n          return _this3.changeField(e, 'confirmedPassword');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }), validErrors.password === false && password === \"\" ? React.createElement(\"progress\", {\n        max: \"100\",\n        value: \"100\",\n        className: \"progressConfirm \".concat(progressColorConfirm, \" eror\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }) : React.createElement(\"progress\", {\n        max: \"100\",\n        value: \"100\",\n        className: \"progressConfirm \".concat(progressColorConfirm),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, \"By creating an account,you agree to DigiLearn \", React.createElement(\"span\", {\n        style: {\n          color: '#FFAD5A'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, \"Privacy Policy\"), \" and \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        style: {\n          color: '#FFAD5A',\n          marginBottom: '15px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, \"Terms of use\"), \".\"), React.createElement(\"input\", {\n        className: \"submit\",\n        type: \"submit\",\n        value: \"CREATE ACCOUNT\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return CompanyRegistration;\n}(Component);\n\nexport default CompanyRegistration;","map":{"version":3,"sources":["C:\\Users\\Gohar\\Desktop\\testing-project\\testing-project\\src\\components\\Autorization\\registration\\CompanyRegistration.js"],"names":["React","Component","firebase","styled","LoginDiv","div","CompanyRegistration","props","state","name","email","password","confirmedPassword","validErrors","progress","progressColor","progressColorConfirm","errorMessage","unmounted","changeField","bind","e","field","setState","target","value","checkPassword","checkConfirmedPassword","strength","match","substr","length","company","auth","createUserWithEmailAndPassword","then","res","description","image","test","id","uid","type","localStorage","setItem","database","ref","set","currentUser","sendEmailVerification","catch","message","console","log","obj","objErrors","key","preventDefault","signUpCompany","handleSubmit","color","marginBottom"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport * as firebase from \"firebase\";\r\nimport styled from 'styled-components';\r\n\r\nconst LoginDiv = styled.div`\r\n    font-size: 34px;\r\n    color: white;\r\n    font-weight: bold;\r\n    text-align: center;\r\n    margin-bottom: 60px;\r\n`;\r\n\r\nclass CompanyRegistration extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            email: '',\r\n            password: '',\r\n            confirmedPassword: '',\r\n            validErrors: {name: true, email: true, password: true, confirmedPassword: true},\r\n            progress: 0,\r\n            progressColor: \"red\",\r\n            progressColorConfirm: \"white\",\r\n            errorMessage: \"\",\r\n            unmounted: false,\r\n        }\r\n        this.changeField = this.changeField.bind(this);\r\n    }\r\n\r\n\r\n\r\n    changeField(e, field) {\r\n        this.setState({\r\n            [field]: e.target.value,\r\n        })\r\n        if(field === \"password\"){\r\n            this.checkPassword(e.target.value)\r\n            this.checkConfirmedPassword(e.target.value, this.state.confirmedPassword)\r\n        }\r\n        if(field === \"confirmedPassword\"){\r\n            this.checkConfirmedPassword(this.state.password, e.target.value)\r\n        }\r\n    }\r\n\r\n     checkPassword (password) {\r\n        let strength = 0;\r\n        if( password.match(/[a-zA-Z0-9][a-zA-Z0-9]+/) ) {\r\n            strength += 1\r\n        }\r\n        if( password.match(/[~<>?]+/) ) {\r\n            strength += 1\r\n        }\r\n        if( password.match(/[!@$%^&*()]+/) ) {\r\n            strength += 1\r\n        }\r\n        if( password.match(/[A-Z]/g) ) {\r\n            strength += 1\r\n        }\r\n        if( password.match(/[0-9]/g) ) {\r\n            strength += 1\r\n        }\r\n\r\n        switch(strength){\r\n            case 0:\r\n                this.setState({ progress: 0, progressColor: \"red\" });\r\n                break\r\n            case 1:\r\n                this.setState({ progress: 20, progressColor: \"red\" });\r\n                break\r\n            case 2:\r\n                this.setState({ progress: 40, progressColor: \"red\" });\r\n                break\r\n            case 3:\r\n                this.setState({ progress: 60, progressColor: \"orange\" });\r\n                break\r\n            case 4:\r\n                this.setState({ progress: 80, progressColor: \"orange\" });\r\n                break\r\n            default:\r\n                this.setState({ progress: 100, progressColor: \"green\" });\r\n          }\r\n    }\r\n\r\n\r\n\r\n    checkConfirmedPassword (password, confirmedPassword) {\r\n        if(password.substr(0,confirmedPassword.length) === confirmedPassword && confirmedPassword.length === password.length && confirmedPassword.length !== 0){\r\n            this.setState({progressColorConfirm: \"green\"})\r\n        } else if(confirmedPassword.length === 0) {\r\n            this.setState({progressColorConfirm: \"white\"})\r\n        } else if(password.substr(0,confirmedPassword.length) === confirmedPassword && confirmedPassword.length !== password.length){\r\n            this.setState({progressColorConfirm: \"orange\"})\r\n        } else {\r\n            this.setState({progressColorConfirm: \"red\"})\r\n        }\r\n    }\r\n\r\n    signUpCompany() {\r\n        this.setState({unmounted: false});\r\n        if (this.state.password === this.state.confirmedPassword && this.state.password  && this.state.name && this.state.email) {\r\n\r\n            const company = {...this.state};\r\n          \r\n            firebase.auth()\r\n                .createUserWithEmailAndPassword(company.email, company.password)\r\n                .then(res => {\r\n                    company.description = '';\r\n                    company.image = '';\r\n                    company.test = {};\r\n                    company.id = res.uid;\r\n                    company.type='company';\r\n                    localStorage.setItem(\"current\", \"company\");\r\n                    firebase.database().ref(`companies/${res.uid}`).set(company);\r\n                    if (!this.state.unmounted) {\r\n                        this.setState({errorMessage: \"\"})\r\n                        firebase.auth().currentUser.sendEmailVerification();\r\n                    }\r\n                })\r\n                .catch(e => {\r\n                   \r\n                    this.setState({errorMessage: e.message})\r\n                    console.log(e.message)\r\n                    \r\n                })\r\n\r\n\r\n        } else {\r\n             const obj = {\r\n                name: this.state.name,\r\n                email: this.state.email,\r\n                password: this.state.password,\r\n                confirmedPassword: this.state.confirmedPassword,\r\n            }\r\n            const objErrors = this.state.validErrors;\r\n            for(let key in obj){\r\n                if(obj[key] === \"\"){\r\n                    objErrors[key] = false\r\n                }\r\n            }\r\n            console.log('not equal');\r\n        }\r\n        this.setState({\r\n            ...this.state\r\n        });\r\n    }\r\n\r\n    ComponentWillUnmount () {\r\n        this.setState({unmounted: true});\r\n    }\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        this.signUpCompany();\r\n    }\r\n\r\n\r\n    render() {\r\n        const {name, email, password, confirmedPassword, validErrors, progress, progressColor, progressColorConfirm, errorMessage} = this.state;\r\n\r\n        return (\r\n            <form onSubmit={this.handleSubmit.bind(this)}>\r\n                <div className='registration company-registration'>\r\n                    <div className='Logwrapper'>\r\n                        <LoginDiv>Register</LoginDiv>\r\n                        {errorMessage !== \"\" && <div className=\"errorMessage\">{errorMessage}</div>}\r\n                        {validErrors.name === false && name===\"\" ? \r\n                            <input\r\n                                className='info-field eror'\r\n                                placeholder='Write Your Name *'\r\n                                type=\"text\"\r\n                                value={name}\r\n                                onChange={(e) => this.changeField(e, 'name')}\r\n                            /> : \r\n                            <input\r\n                                className='info-field'\r\n                                placeholder='Name *'\r\n                                type=\"text\"\r\n                                value={name}\r\n                                onChange={(e) => this.changeField(e, 'name')}\r\n                            /> }\r\n                        {validErrors.email === false && email===\"\" ? \r\n                            <input\r\n                                className='info-field eror'\r\n                                placeholder='Write Your Email *'\r\n                                type=\"text\"\r\n                                value={email}\r\n                                onChange={(e) => this.changeField(e, 'email')}\r\n                            /> : \r\n                            <input\r\n                                className='info-field'\r\n                                placeholder='Email *'\r\n                                type=\"text\"\r\n                                value={email}\r\n                                onChange={(e) => this.changeField(e, 'email')}\r\n                            /> }\r\n                        {validErrors.password === false && password===\"\" ? \r\n                            <input\r\n                                className='info-field password eror'\r\n                                placeholder='Write Your Password *'\r\n                                type=\"password\"\r\n                                value={password}\r\n                                onChange={(e) => this.changeField(e, 'password')}\r\n                            /> : \r\n                            <input\r\n                                className='info-field password'\r\n                                placeholder='Password *'\r\n                                type=\"password\"\r\n                                value={password}\r\n                                onChange={(e) => this.changeField(e, 'password')}\r\n                            /> }\r\n                        {validErrors.password === false && password===\"\" ?\r\n                             <progress max=\"100\" value={progress} className={`progress ${progressColor} eror`}></progress>:\r\n                              <progress max=\"100\" value={progress} className={`progress ${progressColor}`}></progress>}\r\n                        {validErrors.confirmedPassword === false && confirmedPassword === \"\" ? \r\n                            <input\r\n                                className='info-field password eror'\r\n                                placeholder='Write Your Confirme Password *'\r\n                                type=\"password\"\r\n                                value={confirmedPassword}\r\n                                onChange={(e) => this.changeField(e, 'confirmedPassword')}\r\n                            /> : \r\n                            <input\r\n                                className='info-field password'\r\n                                placeholder='Confirm Password *'\r\n                                type=\"password\"\r\n                                value={confirmedPassword}\r\n                                onChange={(e) => this.changeField(e, 'confirmedPassword')}\r\n                            /> }\r\n                        {validErrors.password === false && password===\"\" ?\r\n                             <progress max=\"100\" value=\"100\" className={`progressConfirm ${progressColorConfirm} eror`}></progress>:\r\n                              <progress max=\"100\" value=\"100\" className={`progressConfirm ${progressColorConfirm}`}></progress>}\r\n\r\n                        <p>By creating an account,you agree to\r\n                            DigiLearn <span style={{color: '#FFAD5A'}}>Privacy Policy</span> and <br/><span\r\n                                style={{color: '#FFAD5A', marginBottom: '15px'}}>Terms of use</span>.</p>\r\n                            <input className=\"submit\" type=\"submit\" value=\"CREATE ACCOUNT\" />\r\n                    </div>\r\n                </div>\r\n            </form>\r\n           \r\n        );\r\n    }\r\n}\r\n\r\nexport default CompanyRegistration;\r\n"]},"metadata":{},"sourceType":"module"}