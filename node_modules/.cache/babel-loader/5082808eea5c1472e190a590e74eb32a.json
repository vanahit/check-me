{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { getCompaniesStarted, getCompaniesSuccess, getCompaniesFailure, getTestsStarted, getTestsFailure, getTestsSuccess, getUsersStarted, getUsersFailure, getUsersSuccess } from '../actions/appAction';\nimport { firebase } from '../../firebase/firebase';\nexport var getTests = function getTests() {\n  return function (dispatch) {\n    dispatch(getTestsStarted());\n    firebase.database().ref('tests').on('value', function (snapshot) {\n      var tests = [];\n      snapshot.forEach(function (childSnapshot) {\n        tests.push(_objectSpread({\n          id: childSnapshot.key\n        }, childSnapshot.val()));\n        return tests;\n      });\n    }).then(function (tests) {\n      return dispatch(getTestsSuccess(tests));\n    }).catch(function (err) {\n      return dispatch(getTestsFailure(err.message));\n    });\n  };\n};\nexport var getCompanies = function getCompanies() {\n  return function (dispatch) {\n    dispatch(getCompaniesStarted());\n    fetch('https://test-project-4ab6b.firebaseio.com/companies.json').then(function (response) {\n      return response.json();\n    }).then(function (response) {\n      var companies = Object.values(response);\n      dispatch(getCompaniesSuccess(companies));\n    }).catch(function (err) {\n      dispatch(getCompaniesFailure(err.message));\n    });\n  };\n};\nexport var getUsers = function getUsers() {\n  return function (dispatch) {\n    dispatch(getUsersStarted());\n    fetch('https://test-project-4ab6b.firebaseio.com/user.json').then(function (response) {\n      return response.json();\n    }).then(function (response) {\n      var users = Object.values(response);\n      dispatch(getUsersSuccess(users));\n    }).catch(function (err) {\n      dispatch(getUsersFailure(err.message));\n    });\n  };\n};","map":{"version":3,"sources":["C:\\Users\\Gohar\\Desktop\\testing-project\\testing-project\\src\\store\\thunks\\thunks.js"],"names":["getCompaniesStarted","getCompaniesSuccess","getCompaniesFailure","getTestsStarted","getTestsFailure","getTestsSuccess","getUsersStarted","getUsersFailure","getUsersSuccess","firebase","getTests","dispatch","database","ref","on","snapshot","tests","forEach","childSnapshot","push","id","key","val","then","catch","err","message","getCompanies","fetch","response","json","companies","Object","values","getUsers","users"],"mappings":";AAAA,SAAQA,mBAAR,EACQC,mBADR,EAEQC,mBAFR,EAGQC,eAHR,EAIQC,eAJR,EAKQC,eALR,EAMQC,eANR,EAOQC,eAPR,EAQQC,eARR,QASW,sBATX;AAUA,SAAQC,QAAR,QAAuB,yBAAvB;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAC1B,SAAO,UAAAC,QAAQ,EAAI;AACfA,IAAAA,QAAQ,CAACR,eAAe,EAAhB,CAAR;AAEAM,IAAAA,QAAQ,CAACG,QAAT,GAAoBC,GAApB,CAAwB,OAAxB,EAAiCC,EAAjC,CAAoC,OAApC,EAA6C,UAACC,QAAD,EAAc;AAC3D,UAAIC,KAAK,GAAG,EAAZ;AACCD,MAAAA,QAAQ,CAACE,OAAT,CAAiB,UAAAC,aAAa,EAAI;AAC9BF,QAAAA,KAAK,CAACG,IAAN;AACIC,UAAAA,EAAE,EAAEF,aAAa,CAACG;AADtB,WAEOH,aAAa,CAACI,GAAd,EAFP;AAIG,eAAON,KAAP;AACH,OANJ;AAQA,KAVD,EAUGO,IAVH,CAUS,UAAAP,KAAK;AAAA,aAAIL,QAAQ,CAACN,eAAe,CAACW,KAAD,CAAhB,CAAZ;AAAA,KAVd,EAWGQ,KAXH,CAWS,UAAAC,GAAG;AAAA,aAAId,QAAQ,CAACP,eAAe,CAACqB,GAAG,CAACC,OAAL,CAAhB,CAAZ;AAAA,KAXZ;AAYH,GAfD;AAgBH,CAjBM;AAmBP,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAC9B,SAAO,UAAAhB,QAAQ,EAAI;AACfA,IAAAA,QAAQ,CAACX,mBAAmB,EAApB,CAAR;AAEF4B,IAAAA,KAAK,CAAC,0DAAD,CAAL,CACGL,IADH,CACQ,UAAAM,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KADhB,EAEGP,IAFH,CAEQ,UAAAM,QAAQ,EAAI;AACd,UAAIE,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAcJ,QAAd,CAAhB;AACAlB,MAAAA,QAAQ,CAACV,mBAAmB,CAAC8B,SAAD,CAApB,CAAR;AACH,KALH,EAMGP,KANH,CAMS,UAAAC,GAAG,EAAI;AACNd,MAAAA,QAAQ,CAACT,mBAAmB,CAACuB,GAAG,CAACC,OAAL,CAApB,CAAR;AACP,KARH;AASD,GAZD;AAaD,CAdI;AAgBP,OAAO,IAAMQ,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAC1B,SAAO,UAAAvB,QAAQ,EAAI;AACfA,IAAAA,QAAQ,CAACL,eAAe,EAAhB,CAAR;AACAsB,IAAAA,KAAK,CAAC,qDAAD,CAAL,CACCL,IADD,CACM,UAAAM,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KADd,EAECP,IAFD,CAEM,UAAAM,QAAQ,EAAI;AACd,UAAIM,KAAK,GAAGH,MAAM,CAACC,MAAP,CAAcJ,QAAd,CAAZ;AACAlB,MAAAA,QAAQ,CAACH,eAAe,CAAC2B,KAAD,CAAhB,CAAR;AACH,KALD,EAMCX,KAND,CAMO,UAAAC,GAAG,EAAI;AACZd,MAAAA,QAAQ,CAACJ,eAAe,CAACkB,GAAG,CAACC,OAAL,CAAhB,CAAR;AACD,KARD;AASH,GAXD;AAYD,CAbI","sourcesContent":["import {getCompaniesStarted, \r\n        getCompaniesSuccess, \r\n        getCompaniesFailure,\r\n        getTestsStarted, \r\n        getTestsFailure, \r\n        getTestsSuccess,\r\n        getUsersStarted,\r\n        getUsersFailure,\r\n        getUsersSuccess,\r\n    } from '../actions/appAction';\r\nimport {firebase} from '../../firebase/firebase';\r\n\r\nexport const getTests = () => {\r\n    return dispatch => {\r\n        dispatch(getTestsStarted());\r\n        \r\n        firebase.database().ref('tests').on('value', (snapshot) => {\r\n\t       let tests = [];\r\n\t        snapshot.forEach(childSnapshot => {\r\n\t            tests.push({\r\n\t                id: childSnapshot.key,\r\n\t                ...childSnapshot.val()\r\n                }) \r\n                return tests;\r\n            });\r\n           \r\n        }).then (tests => dispatch(getTestsSuccess(tests)))\r\n          .catch(err => dispatch(getTestsFailure(err.message)));\r\n    }\r\n};\r\n\r\nexport const getCompanies = () => {\r\n    return dispatch => {\r\n        dispatch(getCompaniesStarted());\r\n  \r\n      fetch('https://test-project-4ab6b.firebaseio.com/companies.json')\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            let companies = Object.values(response);\r\n            dispatch(getCompaniesSuccess(companies));\r\n        })\r\n        .catch(err => {\r\n                dispatch(getCompaniesFailure(err.message));\r\n        });\r\n    };\r\n  };\r\n\r\nexport const getUsers = () => {\r\n    return dispatch => {\r\n        dispatch(getUsersStarted());\r\n        fetch('https://test-project-4ab6b.firebaseio.com/user.json')\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            let users = Object.values(response);\r\n            dispatch(getUsersSuccess(users));\r\n        })\r\n        .catch(err => {\r\n          dispatch(getUsersFailure(err.message));\r\n        });\r\n    };\r\n  };\r\n"]},"metadata":{},"sourceType":"module"}