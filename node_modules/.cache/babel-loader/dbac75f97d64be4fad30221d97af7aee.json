{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\src\\\\containers\\\\Pages\\\\CompanyTests.js\";\nimport React, { Component } from 'react';\nimport { firebase } from '../../firebase/firebase';\nimport Searching from './Searching';\nimport Pagination from './Pagination';\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport _editingTest from '../../store/actions/appAction';\n\nvar CompanyTests =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CompanyTests, _Component);\n\n  function CompanyTests(props) {\n    var _this;\n\n    _classCallCheck(this, CompanyTests);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CompanyTests).call(this, props));\n    _this.state = {\n      data: _this.props.tests,\n      search: \"\",\n      type: \"\",\n      currentPage: 1,\n      dataPerPage: 4,\n      loadMore: 0,\n      sortType: \"testTitle\",\n      orderAscanding: true\n    };\n    return _this;\n  } // componentDidMount() {\n  // \tfirebase.database().ref('tests').on('value',(snapshot)=>{\n  //     const tests = [];\n  //     snapshot.forEach(childSnapshot => {\n  //         tests.push({\n  //             id: childSnapshot.key,\n  //             ...childSnapshot.val()\n  //         })\n  //     });\n  //     this.setState({data: tests})\n  //     console.log(tests)\n  // });\n  // }\n\n\n  _createClass(CompanyTests, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (this.props.testsLoaded !== prevProps.testsLoaded) {\n        this.setState({\n          data: this.props.tests\n        });\n        console.log(this.state.data);\n      }\n    }\n  }, {\n    key: \"searching\",\n    value: function searching(e, searchProp) {\n      var _this$setState;\n\n      this.setState((_this$setState = {}, _defineProperty(_this$setState, searchProp, e.target.value), _defineProperty(_this$setState, \"currentPage\", 1), _this$setState));\n    }\n  }, {\n    key: \"sorting\",\n    value: function sorting(sortType) {\n      this.setState({\n        orderAscanding: this.state.sortType !== sortType ? true : !this.state.orderAscanding,\n        sortType: sortType\n      });\n    }\n  }, {\n    key: \"pageClick\",\n    value: function pageClick(e) {\n      this.setState({\n        currentPage: Number(e.target.id),\n        loadMore: 0\n      });\n    }\n  }, {\n    key: \"loadMore\",\n    value: function loadMore(e) {\n      this.setState({\n        loadMore: this.state.loadMore + 1\n      });\n    }\n  }, {\n    key: \"prev\",\n    value: function prev() {\n      this.setState({\n        currentPage: this.state.currentPage + this.state.loadMore - 1,\n        loadMore: 0\n      });\n    }\n  }, {\n    key: \"next\",\n    value: function next() {\n      this.setState({\n        currentPage: this.state.currentPage + this.state.loadMore + 1,\n        loadMore: 0\n      });\n    }\n  }, {\n    key: \"deadline\",\n    value: function deadline(day) {\n      return \"\".concat(new Date(day).getFullYear(), \".\").concat(new Date(day).getMonth(), \".\").concat(new Date(day).getDate());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var tests = [];\n\n      if (this.state.data) {\n        tests = this.state.data.filter(function (test) {\n          return test.companyId === _this2.props.user.id;\n        });\n        console.log(tests);\n      }\n\n      var selectSearchData = ['JavaScript', 'Java', \"PHP\", 'C#', 'MySQL', 'Python', 'Ruby', 'Swift', 'React', 'Redux'];\n      var _this$state = this.state,\n          data = _this$state.data,\n          search = _this$state.search,\n          type = _this$state.type,\n          currentPage = _this$state.currentPage,\n          dataPerPage = _this$state.dataPerPage,\n          loadMore = _this$state.loadMore,\n          sortType = _this$state.sortType,\n          orderAscanding = _this$state.orderAscanding;\n      var filterData = tests.filter(function (item) {\n        return item.testTitle.toLowerCase().substr(0, search.length) === search.toLowerCase();\n      });\n\n      if (type !== \"\") {\n        filterData = filterData.filter(function (item) {\n          return item.testType === type;\n        });\n      }\n\n      filterData.sort(function (a, b) {\n        var nameA;\n        var nameB;\n\n        if (sortType !== \"testDeadline\") {\n          nameA = a[sortType].toUpperCase();\n          nameB = b[sortType].toUpperCase();\n        } else {\n          nameA = new Date(a.testDeadline);\n          nameB = new Date(b.testDeadline);\n        }\n\n        if (orderAscanding) {\n          if (nameA < nameB) {\n            return -1;\n          }\n\n          if (nameA > nameB) {\n            return 1;\n          }\n        } else {\n          if (nameA < nameB) {\n            return 1;\n          }\n\n          if (nameA > nameB) {\n            return -1;\n          }\n        }\n\n        return 0;\n      });\n      var indexOfLastData = currentPage * dataPerPage;\n      var indexOfFirstData = indexOfLastData - dataPerPage;\n      var currentData = filterData.slice(indexOfFirstData, indexOfLastData + loadMore * dataPerPage);\n      var pages = [];\n\n      for (var i = 1; i <= Math.ceil(filterData.length / dataPerPage); i++) {\n        pages.push(i);\n      }\n\n      return React.createElement(\"div\", {\n        className: \"container-table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(Searching, Object.assign({}, this.state, {\n        searching: this.searching.bind(this),\n        currentDataLength: currentData.length,\n        selectSearchData: selectSearchData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      })), React.createElement(\"table\", {\n        className: \"dataTable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        onClick: this.sorting.bind(this, \"testTitle\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, sortType === \"testTitle\" && orderAscanding && React.createElement(\"span\", {\n        className: \"sortArrowBottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }), sortType === \"testTitle\" && !orderAscanding && React.createElement(\"span\", {\n        className: \"sortArrowTop\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }), \"Title\"), React.createElement(\"th\", {\n        onClick: this.sorting.bind(this, \"testDeadline\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, sortType === \"testDeadline\" && orderAscanding && React.createElement(\"span\", {\n        className: \"sortArrowBottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }), sortType === \"testDeadline\" && !orderAscanding && React.createElement(\"span\", {\n        className: \"sortArrowTop\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }), \"Deadline\"), React.createElement(\"th\", {\n        onClick: this.sorting.bind(this, \"testType\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, sortType === \"testType\" && orderAscanding && React.createElement(\"span\", {\n        className: \"sortArrowBottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }), sortType === \"testType\" && !orderAscanding && React.createElement(\"span\", {\n        className: \"sortArrowTop\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }), \"Type\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"Edit\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, \"Delete\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"Passes\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, this.state.data ? currentData.map(function (item) {\n        return React.createElement(\"tr\", {\n          key: item.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          },\n          __self: this\n        }, item.testTitle), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189\n          },\n          __self: this\n        }, _this2.deadline(item.testDeadline)), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192\n          },\n          __self: this\n        }, item.testType), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193\n          },\n          __self: this\n        }, React.createElement(NavLink, {\n          to: \":company/edit-test\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"edit\",\n          onClick: function onClick() {\n            return _this2.props.editingTest(item);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          },\n          __self: this\n        }, \"Edit\"))), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197\n          },\n          __self: this\n        }, \"Delete\")), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"passer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199\n          },\n          __self: this\n        }, item.passers)));\n      }) : \"LOADER\")), React.createElement(Pagination, {\n        load_More: loadMore,\n        loadMore: this.loadMore.bind(this),\n        currentPage: currentPage,\n        prev: this.prev.bind(this),\n        pageClick: this.pageClick.bind(this),\n        next: this.next.bind(this),\n        pages: pages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return CompanyTests;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    tests: state.appReducer.tests,\n    testsLoaded: state.appReducer.testsLoaded\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    editingTest: function editingTest(test) {\n      return dispatch(_editingTest(test));\n    }\n  };\n}\n\nexport default connect(mapStateToProps, null)(CompanyTests);","map":{"version":3,"sources":["C:\\Users\\Gohar\\Desktop\\testing-project\\testing-project\\src\\containers\\Pages\\CompanyTests.js"],"names":["React","Component","firebase","Searching","Pagination","NavLink","connect","editingTest","CompanyTests","props","state","data","tests","search","type","currentPage","dataPerPage","loadMore","sortType","orderAscanding","prevProps","prevState","testsLoaded","setState","console","log","e","searchProp","target","value","Number","id","day","Date","getFullYear","getMonth","getDate","filter","test","companyId","user","selectSearchData","filterData","item","testTitle","toLowerCase","substr","length","testType","sort","a","b","nameA","nameB","toUpperCase","testDeadline","indexOfLastData","indexOfFirstData","currentData","slice","pages","i","Math","ceil","push","searching","bind","sorting","map","deadline","passers","prev","pageClick","next","mapStateToProps","appReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {firebase} from '../../firebase/firebase';\r\nimport Searching from './Searching';\r\nimport Pagination from './Pagination';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport editingTest from '../../store/actions/appAction';\r\n\r\nclass CompanyTests extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tdata: this.props.tests,\r\n\t\t\tsearch: \"\",\r\n\t\t\ttype:\"\",\r\n\t\t\tcurrentPage: 1,\r\n\t\t\tdataPerPage: 4,\r\n\t\t\tloadMore: 0,\r\n\t\t\tsortType: \"testTitle\",\r\n\t\t\torderAscanding: true\r\n\t\t}\r\n\t}\r\n\r\n\t// componentDidMount() {\r\n\t// \tfirebase.database().ref('tests').on('value',(snapshot)=>{\r\n    //     const tests = [];\r\n    //     snapshot.forEach(childSnapshot => {\r\n    //         tests.push({\r\n    //             id: childSnapshot.key,\r\n    //             ...childSnapshot.val()\r\n    //         })\r\n    //     });\r\n    //     this.setState({data: tests})\r\n    //     console.log(tests)\r\n    // });\r\n\t// }\r\n\tcomponentDidUpdate(prevProps, prevState) {\r\n        if (this.props.testsLoaded !== prevProps.testsLoaded) {\r\n\t\t\tthis.setState({data: this.props.tests});\r\n\t\t\tconsole.log(this.state.data)\r\n        }\r\n\t}\r\n\r\n\tsearching (e, searchProp) {\r\n\t\tthis.setState({ \r\n\t\t\t[searchProp]: e.target.value,\r\n\t\t\tcurrentPage: 1 \r\n\t\t})\r\n\t}\r\n\r\n\tsorting(sortType){\r\n\t\tthis.setState({\r\n\t\t\torderAscanding: this.state.sortType !== sortType ? true : !this.state.orderAscanding,\r\n\t\t\tsortType,\r\n\t\t})\r\n\t}\r\n\r\n\tpageClick (e) {\r\n\t\tthis.setState({ \r\n\t\t\tcurrentPage: Number(e.target.id),\r\n\t\t\tloadMore: 0 \r\n\t\t})\r\n\t}\r\n\r\n\tloadMore (e) {\r\n\t\tthis.setState({ loadMore: this.state.loadMore+1 })\r\n\t}\r\n\r\n\tprev () { \r\n\t\tthis.setState({ \r\n\t\t\tcurrentPage: this.state.currentPage + this.state.loadMore - 1,\r\n\t\t\tloadMore: 0  \r\n\t\t}) \r\n\t}\r\n\r\n\tnext () { \r\n\t\tthis.setState({ \r\n\t\t\tcurrentPage: this.state.currentPage + this.state.loadMore + 1,\r\n\t\t\tloadMore: 0  \r\n\t\t}) \r\n\t}\r\n\r\n\tdeadline (day) {\r\n\t    return `${new Date(day).getFullYear()}.${new Date(day).getMonth()}.${new Date(day).getDate()}`\r\n\t}\r\n\r\n\trender(){\r\n\t\tlet tests = [];\r\n\t\tif (this.state.data) {\r\n\t\t\ttests = this.state.data.filter(test => {\r\n\t\t\t\treturn test.companyId === this.props.user.id;\r\n\t\t\t})\r\n\t\t\tconsole.log(tests);\r\n\t\t}\r\n\t\tconst selectSearchData = ['JavaScript', 'Java', \"PHP\", 'C#', 'MySQL', 'Python', 'Ruby', 'Swift', 'React', 'Redux'];\r\n\t\tconst { data, search, type, currentPage, dataPerPage, loadMore, sortType, orderAscanding } = this.state;\r\n\t\tlet filterData = tests.filter( item => {\r\n\t\t\treturn item.testTitle.toLowerCase().substr(0,search.length) === search.toLowerCase()\r\n\t\t} )\r\n\r\n\t\tif(type !== \"\"){\r\n\t\t\tfilterData = filterData.filter( item => item.testType === type)\r\n\t\t}\r\n\r\n\t\tfilterData.sort((a, b) => {\r\n\t\t\tlet nameA;\r\n\t\t\tlet nameB\r\n\t\t\tif(sortType !== \"testDeadline\"){\r\n\t\t\t\tnameA = a[sortType].toUpperCase(); \r\n\t\t\t  nameB = b[sortType].toUpperCase();\r\n\t\t\t} else {\r\n\t\t\t\tnameA = new Date(a.testDeadline)\r\n\t\t\t\tnameB = new Date(b.testDeadline)\r\n\t\t\t}\r\n\t\t\tif(orderAscanding){\r\n\t\t \t\tif (nameA < nameB) {\r\n\t\t\t    return -1;\r\n\t\t\t  }\r\n\t\t\t  if (nameA > nameB) {\r\n\t\t\t    return 1;\r\n\t\t\t  }\r\n\t\t  } else {\r\n\t\t  \tif (nameA < nameB) {\r\n\t\t\t    return 1;\r\n\t\t\t  }\r\n\t\t\t  if (nameA > nameB) {\r\n\t\t\t    return -1;\r\n\t\t\t  }\r\n\t\t  }\r\n\t  \treturn 0;\r\n\t\t})\r\n\r\n\t\tconst indexOfLastData = currentPage * dataPerPage;\r\n\t    const indexOfFirstData = indexOfLastData - dataPerPage;\r\n\t    const currentData = filterData.slice(indexOfFirstData, indexOfLastData+loadMore*dataPerPage);\r\n\r\n\t    const pages = [];\r\n\t    for (let i = 1; i <= Math.ceil(filterData.length / dataPerPage); i++) {\r\n\t      pages.push(i);\r\n\t    }\r\n\r\n\t    \r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"container-table\">\r\n\t\t\t\t<Searching \r\n\t\t\t\t\t{...this.state}\r\n\t\t\t\t\tsearching={this.searching.bind(this)}\r\n\t\t\t\t\tcurrentDataLength={currentData.length}\r\n\t\t\t\t\tselectSearchData={selectSearchData}\r\n\t\t\t\t/>\r\n\t\t\t\t<table className=\"dataTable\">\r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<th onClick={this.sorting.bind(this, \"testTitle\")}>\r\n\t\t\t\t\t\t\t\t{sortType === \"testTitle\" && orderAscanding && \r\n\t\t\t\t\t\t\t\t\t<span className=\"sortArrowBottom\"></span>}\r\n\t\t\t\t\t\t\t\t{sortType === \"testTitle\" && !orderAscanding && \r\n\t\t\t\t\t\t\t\t\t<span className=\"sortArrowTop\"></span>}\r\n\t\t\t\t\t\t\t\tTitle\r\n\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t<th onClick={this.sorting.bind(this, \"testDeadline\")}>\r\n\t\t\t\t\t\t\t\t{sortType === \"testDeadline\" && orderAscanding && \r\n\t\t\t\t\t\t\t\t\t<span className=\"sortArrowBottom\"></span>}\r\n\t\t\t\t\t\t\t\t{sortType === \"testDeadline\" && !orderAscanding && \r\n\t\t\t\t\t\t\t\t\t<span className=\"sortArrowTop\"></span>}\r\n\t\t\t\t\t\t\t\tDeadline\r\n\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t<th onClick={this.sorting.bind(this, \"testType\")}>\r\n\t\t\t\t\t\t\t\t{sortType === \"testType\" && orderAscanding && \r\n\t\t\t\t\t\t\t\t\t<span className=\"sortArrowBottom\"></span>}\r\n\t\t\t\t\t\t\t\t{sortType === \"testType\" && !orderAscanding && \r\n\t\t\t\t\t\t\t\t\t<span className=\"sortArrowTop\"></span>}\r\n\t\t\t\t\t\t\t\tType\r\n\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t<th>Edit</th>\r\n\t\t\t\t\t\t\t<th>Delete</th>\r\n\t\t\t\t\t\t\t<th>Passes</th>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.state.data?\r\n\t\t\t\t\t\tcurrentData.map( item => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<tr key={item.id} >\r\n\t\t\t\t\t\t\t\t\t<td>{item.testTitle}</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t{this.deadline(item.testDeadline)}\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t<td>{item.testType}</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<NavLink to=':company/edit-test'><span className=\"edit\" onClick={() => this.props.editingTest(item)}>Edit</span></NavLink>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t<td >\r\n\t\t\t\t\t\t\t\t\t\t<span>Delete</span>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t<td><span className=\"passer\">{item.passers}</span></td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t} )\r\n\t\t\t\t\t\t: \"LOADER\"\r\n\t\t\t\t\t} \r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\r\n\t\t\t\t</table>\r\n\t\t\t\t<Pagination \r\n\t\t\t\t\t\tload_More={loadMore}\r\n\t\t\t\t\t\tloadMore={this.loadMore.bind(this)}\r\n\t\t\t\t\t\tcurrentPage={currentPage}\r\n\t\t\t\t\t\tprev={this.prev.bind(this)}\r\n\t\t\t\t\t\tpageClick={this.pageClick.bind(this)}\r\n\t\t\t\t\t\tnext={this.next.bind(this)}\r\n\t\t\t\t\t\tpages={pages}\r\n\t\t\t\t\t/>\t\t\t\t\t\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n\treturn {\r\n\t\ttests: state.appReducer.tests,\r\n\t\ttestsLoaded: state.appReducer.testsLoaded,\r\n\t}\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n\treturn {\r\n\t\teditingTest: test => dispatch(editingTest(test)),\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(CompanyTests)"]},"metadata":{},"sourceType":"module"}