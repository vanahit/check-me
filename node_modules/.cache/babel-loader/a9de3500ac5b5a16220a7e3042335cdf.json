{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\src\\\\components\\\\TestCreator\\\\AnswerCreator\\\\OneAnswer.js\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    font-size: 22px;\\n    color: rgba(185, 4, 46, 0.5);\\n    border-bottom: 1px solid rgba(185, 4, 46, 1);\\n    ::-webkit-input-placeholder {color: rgba(185, 4, 46, 0.5)}\\n    ::-moz-placeholder          {color: rgba(185, 4, 46, 0.5)}/* Firefox 19+ */\\n    :-moz-placeholder           {color: rgba(185, 4, 46, 0.5)}/* Firefox 18- */\\n    :-ms-input-placeholder      {color: rgba(185, 4, 46, 0.5)}\\n  \"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  width: calc(100% - 96px);\\n  height: 60px;\\n  padding: 16px 16px;\\n  margin-bottom: 15px;\\n  color: #4F9DA6;\\n  font-size: 24px;\\n  overflow: hidden;\\n  overflow-wrap: break-word;\\n  border: 1px solid #4F9DA6;\\n  box-sizing: border-box; \\n  transition: font-size 0.5s ease-in-out;\\n\\n    @media screen and (max-width: 580px) {\\n\\t\\tfont-size: 12px;\\n  }\\n  ::-webkit-input-placeholder {color: rgba(79, 157, 166, 0.5)}\\n\\t::-moz-placeholder          {color:rgba(79, 157, 166, 0.5)}/* Firefox 19+ */\\n\\t:-moz-placeholder           {color:rgba(79, 157, 166, 0.5)}/* Firefox 18- */\\n  :-ms-input-placeholder      {color:rgba(79, 157, 166, 0.5)}\\n\\n  \", \"\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport { connect } from 'react-redux';\nimport { answerValid as _answerValid, answerNotValid as _answerNotValid } from '../../../store/actions/testCreator';\nvar AnswerInput = styled.textarea(_templateObject(), function (props) {\n  return props.invalid && css(_templateObject2());\n});\n\nvar OneAnswer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(OneAnswer, _React$Component);\n\n  function OneAnswer(props) {\n    var _this;\n\n    _classCallCheck(this, OneAnswer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(OneAnswer).call(this, props));\n\n    _this.handleChange = function (e) {\n      _this.setState({\n        title: e.target.value\n      });\n\n      _this.isAnswerValid();\n    };\n\n    _this.isAnswerValid = function () {\n      if (_this.props.value && _this.props.submitted) {\n        _this.props.answerValid();\n      } else {\n        _this.props.answerNotValid();\n      }\n    };\n\n    _this.state = {\n      title: _this.props.value\n    };\n    return _this;\n  }\n\n  _createClass(OneAnswer, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (this.props.submitted !== prevProps.submitted || this.props.value !== prevState.value && this.props.submitted) {\n        this.isAnswerValid();\n        this.props.getAnswersValues(this.props.id, this.state.title);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(AnswerInput, {\n        type: \"text\",\n        value: this.state.title,\n        placeholder: \"Answer \".concat(this.props.count),\n        onChange: this.handleChange,\n        invalid: this.props.isFilled(this.props.value),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return OneAnswer;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  return {\n    submitted: state.testCreator.submitted\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    answerValid: function answerValid() {\n      return dispatch(_answerValid());\n    },\n    answerNotValid: function answerNotValid() {\n      return dispatch(_answerNotValid());\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OneAnswer);","map":{"version":3,"sources":["C:\\Users\\Gohar\\Desktop\\testing-project\\testing-project\\src\\components\\TestCreator\\AnswerCreator\\OneAnswer.js"],"names":["React","styled","css","connect","answerValid","answerNotValid","AnswerInput","textarea","props","invalid","OneAnswer","handleChange","e","setState","title","target","value","isAnswerValid","submitted","state","prevProps","prevState","getAnswersValues","id","count","isFilled","Component","mapStateToProps","testCreator","mapDispatchToProps","dispatch"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,IAAgBC,GAAhB,QAA0B,mBAA1B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,WAAW,IAAXA,YAAT,EAAsBC,cAAc,IAAdA,eAAtB,QAA4C,oCAA5C;AAEA,IAAMC,WAAW,GAAGL,MAAM,CAACM,QAAV,oBAqBb,UAAAC,KAAK;AAAA,SAAIA,KAAK,CAACC,OAAN,IAAiBP,GAAjB,oBAAJ;AAAA,CArBQ,CAAjB;;IAgCMQ,S;;;;;AACJ,qBAAYF,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,mFAAMA,KAAN;;AADiB,UAIjBG,YAJiB,GAIF,UAACC,CAAD,EAAO;AACpB,YAAKC,QAAL,CAAc;AAACC,QAAAA,KAAK,EAAEF,CAAC,CAACG,MAAF,CAASC;AAAjB,OAAd;;AACA,YAAKC,aAAL;AACH,KAPkB;;AAAA,UASnBA,aATmB,GASH,YAAM;AACpB,UAAI,MAAKT,KAAL,CAAWQ,KAAX,IAAoB,MAAKR,KAAL,CAAWU,SAAnC,EAA8C;AAC5C,cAAKV,KAAL,CAAWJ,WAAX;AACD,OAFD,MAEO;AACL,cAAKI,KAAL,CAAWH,cAAX;AACD;AACF,KAfkB;;AAEjB,UAAKc,KAAL,GAAa;AAACL,MAAAA,KAAK,EAAE,MAAKN,KAAL,CAAWQ;AAAnB,KAAb;AAFiB;AAGlB;;;;uCAckBI,S,EAAWC,S,EAAW;AACvC,UAAI,KAAKb,KAAL,CAAWU,SAAX,KAAyBE,SAAS,CAACF,SAAnC,IACE,KAAKV,KAAL,CAAWQ,KAAX,KAAqBK,SAAS,CAACL,KAA/B,IAAwC,KAAKR,KAAL,CAAWU,SADzD,EACqE;AACnE,aAAKD,aAAL;AACA,aAAKT,KAAL,CAAWc,gBAAX,CAA4B,KAAKd,KAAL,CAAWe,EAAvC,EAA4C,KAAKJ,KAAL,CAAWL,KAAvD;AACD;AACF;;;6BAEQ;AACP,aACE,oBAAC,WAAD;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,KAAK,EAAE,KAAKK,KAAL,CAAWL,KAFpB;AAGE,QAAA,WAAW,mBAAY,KAAKN,KAAL,CAAWgB,KAAvB,CAHb;AAIE,QAAA,QAAQ,EAAE,KAAKb,YAJjB;AAKE,QAAA,OAAO,EAAI,KAAKH,KAAL,CAAWiB,QAAX,CAAoB,KAAKjB,KAAL,CAAWQ,KAA/B,CALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AASA;;;;EApCoBhB,KAAK,CAAC0B,S;;AAuC9B,SAASC,eAAT,CAAyBR,KAAzB,EAAgC;AAC9B,SAAO;AACPD,IAAAA,SAAS,EAAEC,KAAK,CAACS,WAAN,CAAkBV;AADtB,GAAP;AAGD;;AAED,SAASW,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACL1B,IAAAA,WAAW,EAAE;AAAA,aAAM0B,QAAQ,CAAC1B,YAAW,EAAZ,CAAd;AAAA,KADR;AAELC,IAAAA,cAAc,EAAE;AAAA,aAAMyB,QAAQ,CAACzB,eAAc,EAAf,CAAd;AAAA;AAFX,GAAP;AAKD;;AAED,eAAeF,OAAO,CAACwB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CnB,SAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport styled, {css} from 'styled-components'\r\nimport {connect} from 'react-redux';\r\nimport { answerValid, answerNotValid } from '../../../store/actions/testCreator';\r\n\r\nconst AnswerInput = styled.textarea`\r\n  width: calc(100% - 96px);\r\n  height: 60px;\r\n  padding: 16px 16px;\r\n  margin-bottom: 15px;\r\n  color: #4F9DA6;\r\n  font-size: 24px;\r\n  overflow: hidden;\r\n  overflow-wrap: break-word;\r\n  border: 1px solid #4F9DA6;\r\n  box-sizing: border-box; \r\n  transition: font-size 0.5s ease-in-out;\r\n\r\n    @media screen and (max-width: 580px) {\r\n\t\tfont-size: 12px;\r\n  }\r\n  ::-webkit-input-placeholder {color: rgba(79, 157, 166, 0.5)}\r\n\t::-moz-placeholder          {color:rgba(79, 157, 166, 0.5)}/* Firefox 19+ */\r\n\t:-moz-placeholder           {color:rgba(79, 157, 166, 0.5)}/* Firefox 18- */\r\n  :-ms-input-placeholder      {color:rgba(79, 157, 166, 0.5)}\r\n\r\n  ${props => props.invalid && css`\r\n    font-size: 22px;\r\n    color: rgba(185, 4, 46, 0.5);\r\n    border-bottom: 1px solid rgba(185, 4, 46, 1);\r\n    ::-webkit-input-placeholder {color: rgba(185, 4, 46, 0.5)}\r\n    ::-moz-placeholder          {color: rgba(185, 4, 46, 0.5)}/* Firefox 19+ */\r\n    :-moz-placeholder           {color: rgba(185, 4, 46, 0.5)}/* Firefox 18- */\r\n    :-ms-input-placeholder      {color: rgba(185, 4, 46, 0.5)}\r\n  `}\r\n`;\r\n\r\nclass OneAnswer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {title: this.props.value};\r\n  }\r\n    handleChange = (e) => {\r\n      this.setState({title: e.target.value});\r\n      this.isAnswerValid();\r\n  }\r\n\r\n  isAnswerValid = () => {\r\n    if (this.props.value && this.props.submitted) {\r\n      this.props.answerValid();\r\n    } else {\r\n      this.props.answerNotValid();\r\n    }\r\n  }\r\n  \r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.submitted !== prevProps.submitted \r\n      || (this.props.value !== prevState.value && this.props.submitted)) {\r\n      this.isAnswerValid();\r\n      this.props.getAnswersValues(this.props.id,  this.state.title);\r\n    }\r\n  }\r\n\r\n \trender() {\r\n    return ( \r\n      <AnswerInput \r\n        type=\"text\"\r\n        value={this.state.title}\r\n        placeholder={`Answer ${this.props.count}`} \r\n        onChange={this.handleChange} \r\n        invalid = {this.props.isFilled(this.props.value)}\r\n      />\r\n    );\r\n   }\r\n  }\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n\t submitted: state.testCreator.submitted,\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    answerValid: () => dispatch(answerValid()),\r\n    answerNotValid: () => dispatch(answerNotValid()),\r\n \r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OneAnswer)"]},"metadata":{},"sourceType":"module"}