{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\src\\\\containers\\\\QuizCreator\\\\QuestionCreater\\\\OneAnswerCreater.js\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    font-size: 22px;\\n    color: rgba(185, 4, 46, 0.5);\\n    border-bottom: 1px solid rgba(185, 4, 46, 1);\\n    ::-webkit-input-placeholder {color: rgba(185, 4, 46, 0.5)}\\n    ::-moz-placeholder          {color: rgba(185, 4, 46, 0.5)}/* Firefox 19+ */\\n    :-moz-placeholder           {color: rgba(185, 4, 46, 0.5)}/* Firefox 18- */\\n    :-ms-input-placeholder      {color: rgba(185, 4, 46, 0.5)}\\n  \"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  margin-bottom: 30px;\\n  width: calc(100% - 96px);\\n  height: 60px;\\n  padding-left: 16px;\\n  color: #4F9DA6;\\n  font-size: 24px;\\n  overflow: hidden; \\n  border: 1px solid #4F9DA6;\\n  box-sizing: border-box; \\n  transition: font-size 0.5s ease-in-out;\\n    @media screen and (max-width: 580px) {\\n\\t\\tfont-size: 12px;\\n  }\\n  ::-webkit-input-placeholder {color: rgba(79, 157, 166, 0.5)}\\n\\t::-moz-placeholder          {color:rgba(79, 157, 166, 0.5)}/* Firefox 19+ */\\n\\t:-moz-placeholder           {color:rgba(79, 157, 166, 0.5)}/* Firefox 18- */\\n  :-ms-input-placeholder      {color:rgba(79, 157, 166, 0.5)}\\n\\n  \", \"\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport { connect } from 'react-redux';\nvar AnswerInput = styled.input(_templateObject(), function (props) {\n  return props.invalid && css(_templateObject2());\n});\n\nvar OneAnswerCreater =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(OneAnswerCreater, _React$Component);\n\n  function OneAnswerCreater(props) {\n    var _this;\n\n    _classCallCheck(this, OneAnswerCreater);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(OneAnswerCreater).call(this, props));\n\n    _this.inputChangeHandler = function (e) {\n      _this.isAnswerValid();\n    };\n\n    _this.isAnswerValid = function () {\n      if (_this.props.submitted && _this.state.title) {\n        _this.props.isAnswerValid(true);\n      } else {\n        _this.props.isAnswerValid(false);\n      }\n    };\n\n    _this.clearWordFromSpaces = function (word) {\n      return word && word.replace(/^[ ]+/g, '').replace(/\\s*$/, '');\n    };\n\n    _this.checkInputValidation = function () {\n      return _this.props.submitted && !_this.state.questionTitle ? \"Fill Answer \".concat(_this.props.count) : \"Answer \".concat(_this.props.count);\n    };\n\n    _this.isFilled = function () {\n      return _this.props.submitted && !_this.state.title ? true : false;\n    };\n\n    _this.state = {\n      title: ''\n    };\n    return _this;\n  }\n\n  _createClass(OneAnswerCreater, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.isRight !== this.props.isRight) {\n        this.props.getInputValue(this.state.title, this.props.id, this.props.isRight);\n      }\n\n      if (prevProps.submitted !== this.props.submitted) {\n        this.isAnswerValid();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(AnswerInput, {\n        type: \"text\",\n        placeholder: this.checkInputValidation(),\n        invalid: this.isFilled(),\n        id: this.props.id,\n        value: this.state.title,\n        onChange: this.inputChangeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return OneAnswerCreater;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  return {\n    submitted: state.test.submitted\n  };\n}\n\nexport default connect(mapStateToProps, null)(OneAnswerCreater);","map":{"version":3,"sources":["C:\\Users\\Gohar\\Desktop\\testing-project\\testing-project\\src\\containers\\QuizCreator\\QuestionCreater\\OneAnswerCreater.js"],"names":["React","styled","css","connect","AnswerInput","input","props","invalid","OneAnswerCreater","inputChangeHandler","e","isAnswerValid","submitted","state","title","clearWordFromSpaces","word","replace","checkInputValidation","questionTitle","count","isFilled","prevProps","isRight","getInputValue","id","Component","mapStateToProps","test"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,IAAgBC,GAAhB,QAA0B,mBAA1B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,IAAMC,WAAW,GAAGH,MAAM,CAACI,KAAV,oBAmBb,UAAAC,KAAK;AAAA,SAAIA,KAAK,CAACC,OAAN,IAAiBL,GAAjB,oBAAJ;AAAA,CAnBQ,CAAjB;;IA8BMM,gB;;;;;AACJ,4BAAYF,KAAZ,EAAkB;AAAA;;AAAA;;AACf,0FAAMA,KAAN;;AADe,UAKlBG,kBALkB,GAKG,UAACC,CAAD,EAAO;AAC1B,YAAKC,aAAL;AACD,KAPiB;;AAAA,UASlBA,aATkB,GASH,YAAM;AACnB,UAAI,MAAKL,KAAL,CAAWM,SAAX,IAAwB,MAAKC,KAAL,CAAWC,KAAvC,EAA8C;AAC5C,cAAKR,KAAL,CAAWK,aAAX,CAAyB,IAAzB;AACD,OAFD,MAEO;AACL,cAAKL,KAAL,CAAWK,aAAX,CAAyB,KAAzB;AACD;AACF,KAfiB;;AAAA,UAiBlBI,mBAjBkB,GAiBI,UAACC,IAAD,EAAU;AAC9B,aAAQA,IAAI,IAAIA,IAAI,CAACC,OAAL,CAAa,QAAb,EAAuB,EAAvB,EAA2BA,OAA3B,CAAmC,MAAnC,EAA2C,EAA3C,CAAhB;AACD,KAnBiB;;AAAA,UAqBlBC,oBArBkB,GAqBK,YAAM;AAC3B,aAAQ,MAAKZ,KAAL,CAAWM,SAAX,IAAwB,CAAC,MAAKC,KAAL,CAAWM,aAArC,yBACS,MAAKb,KAAL,CAAWc,KADpB,qBAEI,MAAKd,KAAL,CAAWc,KAFf,CAAP;AAGD,KAzBiB;;AAAA,UA2BnBC,QA3BmB,GA2BR,YAAM;AAChB,aAAO,MAAKf,KAAL,CAAWM,SAAX,IAAwB,CAAC,MAAKC,KAAL,CAAWC,KAApC,GAA4C,IAA5C,GAAmD,KAA1D;AACC,KA7BiB;;AAEf,UAAKD,KAAL,GAAa;AAACC,MAAAA,KAAK,EAAE;AAAR,KAAb;AAFe;AAGjB;;;;uCA4BkBQ,S,EAAW;AAC5B,UAAIA,SAAS,CAACC,OAAV,KAAsB,KAAKjB,KAAL,CAAWiB,OAArC,EAA8C;AAC5C,aAAKjB,KAAL,CAAWkB,aAAX,CAAyB,KAAKX,KAAL,CAAWC,KAApC,EAA2C,KAAKR,KAAL,CAAWmB,EAAtD,EAA0D,KAAKnB,KAAL,CAAWiB,OAArE;AACD;;AACD,UAAID,SAAS,CAACV,SAAV,KAAwB,KAAKN,KAAL,CAAWM,SAAvC,EAAkD;AAChD,aAAKD,aAAL;AACD;AACF;;;6BAEQ;AACP,aACE,oBAAC,WAAD;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAE,KAAKO,oBAAL,EAFf;AAGE,QAAA,OAAO,EAAI,KAAKG,QAAL,EAHb;AAIE,QAAA,EAAE,EAAE,KAAKf,KAAL,CAAWmB,EAJjB;AAKE,QAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWC,KALpB;AAME,QAAA,QAAQ,EAAE,KAAKL,kBANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAUA;;;;EApD2BT,KAAK,CAAC0B,S;;AAuDrC,SAASC,eAAT,CAAyBd,KAAzB,EAAgC;AAC9B,SAAO;AACPD,IAAAA,SAAS,EAAEC,KAAK,CAACe,IAAN,CAAWhB;AADf,GAAP;AAGD;;AAED,eAAeT,OAAO,CAACwB,eAAD,EAAkB,IAAlB,CAAP,CAA+BnB,gBAA/B,CAAf","sourcesContent":["import React from 'react';\r\nimport styled, {css} from 'styled-components'\r\nimport {connect} from 'react-redux';\r\n\r\nconst AnswerInput = styled.input`\r\n  margin-bottom: 30px;\r\n  width: calc(100% - 96px);\r\n  height: 60px;\r\n  padding-left: 16px;\r\n  color: #4F9DA6;\r\n  font-size: 24px;\r\n  overflow: hidden; \r\n  border: 1px solid #4F9DA6;\r\n  box-sizing: border-box; \r\n  transition: font-size 0.5s ease-in-out;\r\n    @media screen and (max-width: 580px) {\r\n\t\tfont-size: 12px;\r\n  }\r\n  ::-webkit-input-placeholder {color: rgba(79, 157, 166, 0.5)}\r\n\t::-moz-placeholder          {color:rgba(79, 157, 166, 0.5)}/* Firefox 19+ */\r\n\t:-moz-placeholder           {color:rgba(79, 157, 166, 0.5)}/* Firefox 18- */\r\n  :-ms-input-placeholder      {color:rgba(79, 157, 166, 0.5)}\r\n\r\n  ${props => props.invalid && css`\r\n    font-size: 22px;\r\n    color: rgba(185, 4, 46, 0.5);\r\n    border-bottom: 1px solid rgba(185, 4, 46, 1);\r\n    ::-webkit-input-placeholder {color: rgba(185, 4, 46, 0.5)}\r\n    ::-moz-placeholder          {color: rgba(185, 4, 46, 0.5)}/* Firefox 19+ */\r\n    :-moz-placeholder           {color: rgba(185, 4, 46, 0.5)}/* Firefox 18- */\r\n    :-ms-input-placeholder      {color: rgba(185, 4, 46, 0.5)}\r\n  `}\r\n`;\r\n\r\nclass OneAnswerCreater extends React.Component {\r\n  constructor(props){\r\n     super(props);\r\n     this.state = {title: ''}\r\n  }\r\n\r\n  inputChangeHandler = (e) => {\r\n    this.isAnswerValid();\r\n  }\r\n\r\n  isAnswerValid =() => {\r\n    if (this.props.submitted && this.state.title) {\r\n      this.props.isAnswerValid(true)\r\n    } else {\r\n      this.props.isAnswerValid(false);\r\n    }\r\n  }\r\n  \r\n  clearWordFromSpaces = (word) => {\r\n    return  word && word.replace(/^[ ]+/g, '').replace(/\\s*$/, '');\r\n  }\r\n\r\n  checkInputValidation = () => {\r\n   \treturn (this.props.submitted && !this.state.questionTitle) \r\n\t\t\t? `Fill Answer ${this.props.count}` \r\n\t\t\t: `Answer ${this.props.count}`;\r\n  }\r\n  \r\n\tisFilled = () => {\r\n\t\treturn this.props.submitted && !this.state.title ? true : false;\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.isRight !== this.props.isRight) {\r\n      this.props.getInputValue(this.state.title, this.props.id, this.props.isRight);\r\n    } \r\n    if (prevProps.submitted !== this.props.submitted) {\r\n      this.isAnswerValid();\r\n    }\r\n  }\r\n\r\n \trender() {\r\n    return ( \r\n      <AnswerInput \r\n        type=\"text\"\r\n        placeholder={this.checkInputValidation()}\r\n        invalid = {this.isFilled()}\r\n        id={this.props.id} \r\n        value={this.state.title} \r\n        onChange={this.inputChangeHandler} \r\n       />\r\n    );\r\n   }\r\n  }\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n\t submitted: state.test.submitted,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(OneAnswerCreater)"]},"metadata":{},"sourceType":"module"}