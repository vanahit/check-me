{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { Route, Switch, withRouter } from \"react-router-dom\";\nimport TestCreator from './components/TestCreator/TestCreator';\nimport TestEditor from './components/TestCreator/TestEditor';\nimport AboutUs from './components/AboutUs/AboutUs';\nimport Authorization from \"./components/Autorization/Authorization\";\nimport AutorizationUser from \"./components/Autorization/AutorizationUser\";\nimport AutorizationCompany from \"./components/Autorization/AutorizationCompany\";\nimport Company from \"./containers/Pages/Company\";\nimport CompaniesInUser from \"./containers/Pages/CompanyInfoPage/CompaniesInUser\";\nimport UsersInCompany from \"./containers/Pages/UserInfoPage/UsersInCompany\";\nimport AllTests from \"./containers/Pages/AllTests\";\nimport AllCompanies from \"./containers/Pages/AllCompanies\";\nimport AllUsers from \"./containers/Pages/AllUsers\";\nimport User from \"./containers/Pages/User\";\nimport NoMatch from \"./components/NoMatch\";\nimport HomePage from \"./components/HomePage/HomePage\";\nimport { connect } from 'react-redux';\nimport { getCompanies as _getCompanies, getTests as _getTests, getUsers as _getUsers } from './store/thunks/thunks';\nimport * as firebase from \"firebase\";\nimport Layout from \"./Hoc/Layout\";\nimport PopUpLogin from './components/PopUps/PopUpLogin';\nimport PopUpDelete from './components/PopUps/PopUpDelete';\nimport PopUpTestAdded from './components/PopUps/PopUpTestAdded';\nimport StartTest from './containers/Pages/StartTest';\nimport OneTestInfo from './containers/Pages/TestInfoPage/OneTestInfo';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      currentLog: null,\n      testsLoaded: _this.props.testsLoaded,\n      companiesLoaded: _this.props.companiesLoaded,\n      testAddClicked: false,\n      testDeletedClicked: false,\n      userTestAdded: false,\n      user: null\n    };\n\n    _this.testAddClicked = function () {\n      _this.setState({\n        testAddClicked: !_this.state.testAddClicked\n      });\n    };\n\n    _this.testDeletedClicked = function () {\n      _this.setState({\n        testDeletedClicked: !_this.state.testDeletedClicked\n      });\n    };\n\n    _this.userTestAdded = function () {\n      _this.setState({\n        userTestAdded: !_this.state.userTestAdded\n      });\n    };\n\n    _this.addCurrentItem = function (currentItem) {\n      _this.setState({\n        currentItem: currentItem\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      firebase.auth().onAuthStateChanged(function (currentLog) {\n        if (currentLog) {\n          _this2.setState({\n            currentLog: currentLog\n          });\n\n          if (localStorage.getItem(\"current\") === \"company\") {\n            firebase.database().ref(\"companies/\".concat(currentLog.uid)).on('value', function (snapshot) {\n              if (snapshot.val()) {\n                _this2.setState({\n                  currentLog: currentLog,\n                  user: _objectSpread({}, snapshot.val())\n                });\n              }\n            });\n          }\n\n          if (localStorage.getItem(\"current\") === \"user\") {\n            firebase.database().ref(\"user/\".concat(currentLog.uid)).on('value', function (snapshot) {\n              var user = {};\n              var tests = [];\n\n              if (snapshot.hasChild('tests')) {\n                snapshot.child('tests').forEach(function (childSnapshot) {\n                  tests.push(_objectSpread({\n                    id: childSnapshot.key\n                  }, childSnapshot.val()));\n                });\n              } else {\n                tests = [];\n              }\n\n              user = _objectSpread({\n                id: snapshot.key\n              }, snapshot.val(), {\n                tests: tests\n              });\n\n              if (snapshot.val()) {\n                _this2.setState({\n                  currentLog: currentLog,\n                  user: user\n                });\n              }\n            });\n          }\n        } else {\n          localStorage.removeItem(\"current\");\n\n          _this2.setState({\n            currentLog: null,\n            user: null\n          });\n        }\n      });\n      this.props.getCompanies();\n      this.props.getTests();\n      this.props.getUsers();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, this.state.testAddClicked && React.createElement(PopUpLogin, {\n        testAddClicked: this.testAddClicked,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }), this.state.testDeletedClicked && React.createElement(PopUpDelete, {\n        testDeletedClicked: this.testDeletedClicked,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }), this.state.userTestAdded && React.createElement(PopUpTestAdded, {\n        exists: false,\n        userTestAdded: this.userTestAdded,\n        user: this.state.user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"added to tests in your propfile\"), React.createElement(Layout, {\n        currentLog: this.state.currentLog,\n        user: this.state.user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: '/',\n        component: function component() {\n          return React.createElement(HomePage, {\n            testAddClicked: _this3.testAddClicked,\n            userTestAdded: _this3.userTestAdded,\n            user: _this3.state.user,\n            addCurrentItem: _this3.addCurrentItem,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 121\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/tests/\",\n        component: function component() {\n          return React.createElement(AllTests, {\n            testAddClicked: _this3.testAddClicked,\n            userTestAdded: _this3.userTestAdded,\n            user: _this3.state.user,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 129\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }), this.props.companies && this.props.companies.map(function (item) {\n        return React.createElement(Route, {\n          key: item.id,\n          path: \"/company-info-page/\".concat(item.name),\n          component: function component() {\n            return React.createElement(CompaniesInUser, {\n              item: item,\n              testAddClicked: _this3.testAddClicked,\n              userTestAdded: _this3.userTestAdded,\n              user: _this3.state.user,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 140\n              },\n              __self: this\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        });\n      }), this.props.users && this.props.users.map(function (item) {\n        return React.createElement(Route, {\n          key: item.id,\n          path: \"/user-info-page/\".concat(item.firstName).concat(item.lastName),\n          component: function component() {\n            return React.createElement(UsersInCompany, {\n              item: item,\n              userId: _this3.state.user ? _this3.state.user.id : 1,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 154\n              },\n              __self: this\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        });\n      }), this.props.tests && this.props.tests.map(function (item) {\n        return React.createElement(Route, {\n          key: item.id,\n          path: \"/test-info-page/\".concat(item.id),\n          component: function component() {\n            return React.createElement(OneTestInfo, {\n              user: _this3.state.user,\n              item: item,\n              testAddClicked: _this3.testAddClicked,\n              userTestAdded: _this3.userTestAdded,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 162\n              },\n              __self: this\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        });\n      }), this.props.tests.passers && this.props.tests.passers.map(function (item) {\n        return React.createElement(Route, {\n          key: item.id,\n          path: \"/\".concat(item.name, \"/test\").concat(item.id),\n          component: function component() {\n            var _React$createElement;\n\n            return React.createElement(AllUsers, (_React$createElement = {\n              user: _this3.state.user\n            }, _defineProperty(_React$createElement, \"user\", item), _defineProperty(_React$createElement, \"__source\", {\n              fileName: _jsxFileName,\n              lineNumber: 176\n            }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement));\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        });\n      }), React.createElement(Route, {\n        path: \"/autorization-company\",\n        component: AutorizationCompany,\n        currentCompany: this.state.currentLog,\n        user: this.state.user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/autorization-user\",\n        component: AutorizationUser,\n        currentCompany: this.state.currentLog,\n        user: this.state.user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/aboutUs/\",\n        component: AboutUs,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/registration/user\",\n        component: AutorizationUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/registration/company\",\n        component: AutorizationCompany,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/users/\",\n        component: AllUsers,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/companies/\",\n        component: function component() {\n          return React.createElement(AllCompanies, {\n            addCurrentItem: _this3.addCurrentItem,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 189\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/authorization/\",\n        component: function component() {\n          return React.createElement(Authorization, {\n            currentCompany: _this3.state.currentLog,\n            user: _this3.state.user,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 192\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }), localStorage.getItem(\"current\") === \"user\" ? React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/:user/start-test\",\n        component: function component() {\n          return React.createElement(StartTest, {\n            user: _this3.state.user,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 199\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/:user/profile\",\n        component: function component() {\n          return React.createElement(User, {\n            currentCompany: _this3.state.currentLog,\n            user: _this3.state.user,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 200\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/:user/tests\",\n        component: function component() {\n          return React.createElement(User, {\n            currentCompany: _this3.state.currentLog,\n            user: _this3.state.user,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 201\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      })) : React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/:company/add-test\",\n        component: function component() {\n          return React.createElement(TestCreator, {\n            user: _this3.state.user,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 205\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/:company/edit-test\",\n        component: function component() {\n          return React.createElement(TestEditor, {\n            editingTest: _this3.props.editingTest,\n            user: _this3.state.user,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 207\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/:company/profile\",\n        component: function component() {\n          return React.createElement(Company, {\n            currentCompany: _this3.state.currentLog,\n            user: _this3.state.user,\n            testDeletedClicked: _this3.testDeletedClicked,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 210\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/:company/tests\",\n        component: function component() {\n          return React.createElement(Company, {\n            currentCompany: _this3.state.currentLog,\n            user: _this3.state.user,\n            testDeletedClicked: _this3.testDeletedClicked,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 215\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/:company/invited-users\",\n        component: function component() {\n          return React.createElement(Company, {\n            currentCompany: _this3.state.currentLog,\n            user: _this3.state.user,\n            testDeletedClicked: _this3.testDeletedClicked,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 220\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      })), React.createElement(Route, {\n        component: NoMatch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    testsLoaded: state.appReducer.testsLoaded,\n    companiesLoaded: state.appReducer.companiesLoaded,\n    editingTest: state.appReducer.editingTest,\n    users: state.appReducer.users,\n    companies: state.appReducer.companies,\n    tests: state.appReducer.tests\n  };\n}\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getCompanies: function getCompanies(companies) {\n      return dispatch(_getCompanies(companies));\n    },\n    getTests: function getTests(tests) {\n      return dispatch(_getTests(tests));\n    },\n    getUsers: function getUsers(users) {\n      return dispatch(_getUsers(users));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));","map":{"version":3,"sources":["C:\\Users\\Gohar\\Desktop\\testing-project\\testing-project\\src\\App.js"],"names":["React","Component","Route","Switch","withRouter","TestCreator","TestEditor","AboutUs","Authorization","AutorizationUser","AutorizationCompany","Company","CompaniesInUser","UsersInCompany","AllTests","AllCompanies","AllUsers","User","NoMatch","HomePage","connect","getCompanies","getTests","getUsers","firebase","Layout","PopUpLogin","PopUpDelete","PopUpTestAdded","StartTest","OneTestInfo","App","state","currentLog","testsLoaded","props","companiesLoaded","testAddClicked","testDeletedClicked","userTestAdded","user","setState","addCurrentItem","currentItem","auth","onAuthStateChanged","localStorage","getItem","database","ref","uid","on","snapshot","val","tests","hasChild","child","forEach","childSnapshot","push","id","key","removeItem","companies","map","item","name","users","firstName","lastName","passers","editingTest","mapStateToProps","appReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { Route, Switch, withRouter } from \"react-router-dom\";\r\nimport TestCreator from './components/TestCreator/TestCreator';\r\nimport TestEditor from './components/TestCreator/TestEditor';\r\nimport AboutUs from './components/AboutUs/AboutUs';\r\nimport Authorization from \"./components/Autorization/Authorization\";\r\nimport AutorizationUser from \"./components/Autorization/AutorizationUser\";\r\nimport AutorizationCompany from \"./components/Autorization/AutorizationCompany\";\r\nimport Company from \"./containers/Pages/Company\";\r\nimport CompaniesInUser from \"./containers/Pages/CompanyInfoPage/CompaniesInUser\";\r\nimport UsersInCompany from \"./containers/Pages/UserInfoPage/UsersInCompany\";\r\nimport AllTests from \"./containers/Pages/AllTests\";\r\nimport AllCompanies from \"./containers/Pages/AllCompanies\";\r\nimport AllUsers from \"./containers/Pages/AllUsers\";\r\nimport User from \"./containers/Pages/User\";\r\nimport NoMatch from \"./components/NoMatch\";\r\nimport HomePage from \"./components/HomePage/HomePage\";\r\nimport { connect } from 'react-redux';\r\nimport { getCompanies, getTests, getUsers } from './store/thunks/thunks';\r\nimport * as firebase from \"firebase\";\r\nimport Layout from \"./Hoc/Layout\";\r\nimport PopUpLogin from './components/PopUps/PopUpLogin';\r\nimport PopUpDelete from './components/PopUps/PopUpDelete';\r\nimport PopUpTestAdded from './components/PopUps/PopUpTestAdded';\r\nimport StartTest from './containers/Pages/StartTest';\r\nimport OneTestInfo from './containers/Pages/TestInfoPage/OneTestInfo';\r\n\r\n\r\nclass App extends Component {\r\n\r\n\r\n    state = {\r\n        currentLog: null,\r\n        testsLoaded: this.props.testsLoaded,\r\n        companiesLoaded: this.props.companiesLoaded,\r\n        testAddClicked: false,\r\n        testDeletedClicked: false,\r\n        userTestAdded: false,\r\n        user: null\r\n    };\r\n\r\n    componentDidMount() {\r\n\r\n        firebase.auth().onAuthStateChanged((currentLog) => {\r\n            if (currentLog) {\r\n                this.setState({ currentLog });\r\n\r\n                if (localStorage.getItem(\"current\") === \"company\") {\r\n                       firebase.database().ref(`companies/${currentLog.uid}`).on('value', (snapshot) => {\r\n\r\n                        if (snapshot.val()) {\r\n                            this.setState({ currentLog, user: { ...snapshot.val() } })\r\n                        }\r\n                    })\r\n                }\r\n                if (localStorage.getItem(\"current\") === \"user\") {\r\n                    firebase.database().ref(`user/${currentLog.uid}`).on('value', (snapshot) => {\r\n                        let user = {};\r\n                        let tests = [];\r\n                        if (snapshot.hasChild('tests')) {\r\n                            snapshot.child('tests').forEach(childSnapshot => {\r\n                                tests.push({\r\n                                    id: childSnapshot.key,\r\n                                    ...childSnapshot.val()\r\n                                })\r\n                            })\r\n                        } else {\r\n                            tests = [];\r\n                        }\r\n                        user = {\r\n                            id: snapshot.key,\r\n                            ...snapshot.val(),\r\n                            tests\r\n                        }\r\n                        if (snapshot.val()) {\r\n                            this.setState({ currentLog, user: user });\r\n                        }\r\n                    })\r\n                }\r\n              \r\n            } else {\r\n                localStorage.removeItem(\"current\")\r\n                this.setState({ currentLog: null, user: null })\r\n            }\r\n        });\r\n        this.props.getCompanies();\r\n        this.props.getTests();\r\n        this.props.getUsers();\r\n    }\r\n\r\n    testAddClicked = () => {\r\n        this.setState({ testAddClicked: !this.state.testAddClicked });\r\n    };\r\n\r\n    testDeletedClicked = () => {\r\n        this.setState({ testDeletedClicked: !this.state.testDeletedClicked });\r\n    }\r\n    userTestAdded = () => {\r\n        this.setState({ userTestAdded: !this.state.userTestAdded });\r\n    }\r\n    addCurrentItem = (currentItem) => {\r\n        this.setState({ currentItem: currentItem });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n                {this.state.testAddClicked && <PopUpLogin testAddClicked={this.testAddClicked} />}\r\n                {this.state.testDeletedClicked && <PopUpDelete testDeletedClicked={this.testDeletedClicked} />}\r\n                {this.state.userTestAdded &&\r\n                    <PopUpTestAdded exists={false} userTestAdded={this.userTestAdded} user={this.state.user}>\r\n                        added to tests in your propfile\r\n                    </PopUpTestAdded>\r\n                }\r\n\r\n                <Layout currentLog={this.state.currentLog} user={this.state.user}>\r\n                    <Switch className=\"App\">\r\n                        <Route exact path={'/'} component={() =>\r\n                            <HomePage\r\n                                testAddClicked={this.testAddClicked}\r\n                                userTestAdded={this.userTestAdded}\r\n                                user={this.state.user}\r\n                                addCurrentItem={this.addCurrentItem}\r\n\r\n                            />} />\r\n                        <Route path=\"/tests/\" component={() =>\r\n                            <AllTests\r\n                                testAddClicked={this.testAddClicked}\r\n                                userTestAdded={this.userTestAdded}\r\n                                user={this.state.user}\r\n                            />} />\r\n                        {this.props.companies && this.props.companies.map(item => {\r\n                            return (\r\n                                <Route\r\n                                    key={item.id}\r\n                                    path={`/company-info-page/${item.name}`}\r\n                                    component={() => \r\n                                    <CompaniesInUser \r\n                                        item={item}\r\n                                        testAddClicked={this.testAddClicked}\r\n                                        userTestAdded={this.userTestAdded}\r\n                                        user={this.state.user}\r\n                                     />} \r\n                                />\r\n                            )\r\n                        })}\r\n                          {this.props.users && this.props.users.map(item => {\r\n                            return (\r\n                                <Route \r\n                                    key={item.id}\r\n                                    path={`/user-info-page/${item.firstName}${item.lastName}`}\r\n                                    component={() => <UsersInCompany item={item} userId={this.state.user ? this.state.user.id : 1}/>} />\r\n                            )\r\n                        })}\r\n                         {this.props.tests && this.props.tests.map(item => {\r\n                            return (\r\n                                <Route \r\n                                key={item.id}\r\n                                    path={`/test-info-page/${item.id}`} component={() =>\r\n                                    <OneTestInfo\r\n                                        user={this.state.user}\r\n                                        item={item}\r\n                                        testAddClicked={this.testAddClicked}\r\n                                        userTestAdded={this.userTestAdded}\r\n                                    />} />\r\n                            )\r\n                        })}\r\n\r\n                        {this.props.tests.passers && this.props.tests.passers.map(item => {\r\n                            return (\r\n                                <Route \r\n                                    key={item.id}\r\n                                    path={`/${item.name}/test${item.id}`} component={() =>\r\n                                    <AllUsers\r\n                                        user={this.state.user}\r\n                                        user={item}\r\n                                    />} />\r\n                            )\r\n                        })}\r\n\r\n                        <Route path=\"/autorization-company\" component={AutorizationCompany} currentCompany={this.state.currentLog} user={this.state.user} />\r\n                        <Route path=\"/autorization-user\" component={AutorizationUser} currentCompany={this.state.currentLog} user={this.state.user} />\r\n                        <Route path=\"/aboutUs/\" component={AboutUs} />\r\n                        <Route path='/registration/user' component={AutorizationUser} />\r\n                        <Route path='/registration/company' component={AutorizationCompany} />\r\n                        <Route path=\"/users/\" component={AllUsers} />\r\n                        <Route path=\"/companies/\" component={() => <AllCompanies addCurrentItem={this.addCurrentItem} />} />\r\n                        <Route\r\n                            path='/authorization/'\r\n                            component={() => <Authorization currentCompany={this.state.currentLog}\r\n                                user={this.state.user} />}\r\n                        />\r\n\r\n                        {localStorage.getItem(\"current\") === \"user\"\r\n                            ? <Switch>\r\n                                <Route path=\"/:user/start-test\" component={() =>\r\n                                    <StartTest user={this.state.user} />} />\r\n                                <Route path=\"/:user/profile\" component={() => <User currentCompany={this.state.currentLog} user={this.state.user} />} />\r\n                                <Route path=\"/:user/tests\" component={() => <User currentCompany={this.state.currentLog} user={this.state.user} />} /> \r\n                            </Switch>\r\n\r\n                            : <Switch>\r\n                                <Route path=\"/:company/add-test\" component={() => <TestCreator user={this.state.user} />} />\r\n                                <Route path=\"/:company/edit-test\" component={() =>\r\n                                    <TestEditor editingTest={this.props.editingTest} user={this.state.user} />}\r\n                                />\r\n                                <Route path=\"/:company/profile\" component={() =>\r\n                                    <Company\r\n                                        currentCompany={this.state.currentLog}\r\n                                        user={this.state.user}\r\n                                        testDeletedClicked={this.testDeletedClicked} />} />\r\n                                <Route path=\"/:company/tests\" component={() =>\r\n                                    <Company\r\n                                        currentCompany={this.state.currentLog}\r\n                                        user={this.state.user}\r\n                                        testDeletedClicked={this.testDeletedClicked} />} />\r\n                                <Route path=\"/:company/invited-users\" component={() =>\r\n                                    <Company\r\n                                        currentCompany={this.state.currentLog}\r\n                                        user={this.state.user}\r\n                                        testDeletedClicked={this.testDeletedClicked} />} />\r\n                            </Switch>\r\n                        }\r\n\r\n                        <Route component={NoMatch} />\r\n\r\n                    </Switch>\r\n                </Layout>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        testsLoaded: state.appReducer.testsLoaded,\r\n        companiesLoaded: state.appReducer.companiesLoaded,\r\n        editingTest: state.appReducer.editingTest,\r\n        users: state.appReducer.users,\r\n        companies: state.appReducer.companies,\r\n        tests: state.appReducer.tests,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getCompanies: companies => dispatch(getCompanies(companies)),\r\n        getTests: tests => dispatch(getTests(tests)),\r\n        getUsers: users => dispatch(getUsers(users)),\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\r\n"]},"metadata":{},"sourceType":"module"}