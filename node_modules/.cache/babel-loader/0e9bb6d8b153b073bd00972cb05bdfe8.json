{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\src\\\\containers\\\\Pages\\\\UserTests.js\";\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n    border: 0;\\n    background-color: rgba(255, 89, 89, 1);\\n    color: white;\\n    : hover {\\n        cursor: pointer;\\n    }\\n    \"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n\\tdisplay: inline-block;\\n\\ttext-decoration: none;\\n\\tpaddin-bottom: 5px;\\n\\tborder-bottom: 1px solid black;\\n\\tcolor: black;\\n\\t:hover {\\n\\t\\tcursor: pointer;\\n\\t}\\n\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n\\tmargin: auto;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n\\tpadding-top: 200px;\\n\\tfont-size: 28px;\\n\\tcolor: #141218;\\n\\tbox-sizing: border-box;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport Searching from './Searching';\nimport Pagination from './Pagination';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { NavLink } from \"react-router-dom\";\nimport { addTest as _addTest } from '../../store/actions/testPasser';\nimport { firebase } from '../../firebase/firebase';\nimport Loader from '../../components/Loader';\nvar NoTests = styled.div(_templateObject());\nvar LoaderDiv = styled.div(_templateObject2());\nvar TestsLink = styled(NavLink)(_templateObject3());\nvar Button = styled.button(_templateObject4());\n\nvar UserTests =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UserTests, _Component);\n\n  function UserTests(props) {\n    var _this;\n\n    _classCallCheck(this, UserTests);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UserTests).call(this, props));\n\n    _this.deadline = function (date) {\n      var today = new Date(date);\n      var dd = today.getDate();\n      var mm = today.getMonth() + 1;\n      var yyyy = today.getFullYear();\n\n      if (dd < 10) {\n        dd = '0' + dd;\n      }\n\n      if (mm < 10) {\n        mm = '0' + mm;\n      }\n\n      return today = dd + '/' + mm + '/' + yyyy;\n    };\n\n    _this.state = {\n      tests: _this.props.user.tests,\n      search: \"\",\n      type: \"\",\n      currentPage: 1,\n      dataPerPage: 4,\n      loadMore: 0,\n      sortType: \"testTitle\",\n      orderAscanding: true\n    };\n    return _this;\n  }\n\n  _createClass(UserTests, [{\n    key: \"searching\",\n    value: function searching(e, searchProp) {\n      var _this$setState;\n\n      this.setState((_this$setState = {}, _defineProperty(_this$setState, searchProp, e.target.value), _defineProperty(_this$setState, \"currentPage\", 1), _this$setState));\n    }\n  }, {\n    key: \"sorting\",\n    value: function sorting(sortType) {\n      this.setState({\n        orderAscanding: this.state.sortType !== sortType ? true : !this.state.orderAscanding,\n        sortType: sortType\n      });\n    }\n  }, {\n    key: \"pageClick\",\n    value: function pageClick(e) {\n      this.setState({\n        currentPage: Number(e.target.id),\n        loadMore: 0\n      });\n    }\n  }, {\n    key: \"loadMore\",\n    value: function loadMore(e) {\n      this.setState({\n        loadMore: this.state.loadMore + 1\n      });\n    }\n  }, {\n    key: \"prev\",\n    value: function prev() {\n      this.setState({\n        currentPage: this.state.currentPage + this.state.loadMore - 1,\n        loadMore: 0\n      });\n    }\n  }, {\n    key: \"next\",\n    value: function next() {\n      this.setState({\n        currentPage: this.state.currentPage + this.state.loadMore + 1,\n        loadMore: 0\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {}\n  }, {\n    key: \"deleteTest\",\n    value: function deleteTest(testId) {\n      var db = firebase.database();\n      var deletedTest = db.ref(\"user/\".concat(this.props.user.id, \"/tests/\").concat(testId));\n      firebase.database().ref(\"tests/\".concat(testId)).child(\"added\").set(false);\n      deletedTest.remove();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var tests = [];\n\n      if (this.state.tests) {\n        tests = this.state.tests.filter(function (test) {\n          return test.userScore < 0;\n        });\n      }\n\n      var selectSearchData = ['HTML', 'CSS', 'JavaScript', 'Java', 'Python', 'C#', 'Ruby', 'Swift', 'React', 'Redux', 'C++', 'PHP', 'MySQL'];\n      var _this$state = this.state,\n          search = _this$state.search,\n          type = _this$state.type,\n          currentPage = _this$state.currentPage,\n          dataPerPage = _this$state.dataPerPage,\n          loadMore = _this$state.loadMore,\n          sortType = _this$state.sortType,\n          orderAscanding = _this$state.orderAscanding;\n      var filterData = tests.filter(function (item) {\n        return item.testTitle.toLowerCase().substr(0, search.length) === search.toLowerCase();\n      });\n\n      if (type !== \"\") {\n        filterData = filterData.filter(function (item) {\n          return item.testType === type;\n        });\n      }\n\n      filterData.sort(function (a, b) {\n        var nameA;\n        var nameB;\n\n        if (sortType !== \"testDeadline\") {\n          nameA = a[sortType].toUpperCase();\n          nameB = b[sortType].toUpperCase();\n        } else {\n          nameA = new Date(a.testDeadline);\n          nameB = new Date(b.testDeadline);\n        }\n\n        if (orderAscanding) {\n          if (nameA < nameB) {\n            return -1;\n          }\n\n          if (nameA > nameB) {\n            return 1;\n          }\n        } else {\n          if (nameA < nameB) {\n            return 1;\n          }\n\n          if (nameA > nameB) {\n            return -1;\n          }\n        }\n\n        return 0;\n      });\n      var indexOfLastData = currentPage * dataPerPage;\n      var indexOfFirstData = indexOfLastData - dataPerPage;\n      var currentData = filterData.slice(indexOfFirstData, indexOfLastData + loadMore * dataPerPage);\n      var pages = [];\n\n      for (var i = 1; i <= Math.ceil(filterData.length / dataPerPage); i++) {\n        pages.push(i);\n      }\n\n      return currentData.length ? React.createElement(\"div\", {\n        className: \"container-table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(Searching, Object.assign({}, this.state, {\n        data: tests,\n        searching: this.searching.bind(this),\n        currentDataLength: currentData.length,\n        selectSearchData: selectSearchData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      })), React.createElement(\"table\", {\n        className: \"dataTable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        onClick: this.sorting.bind(this, \"testTitle\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, sortType === \"testTitle\" && orderAscanding && React.createElement(\"span\", {\n        className: \"sortArrowBottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }), sortType === \"testTitle\" && !orderAscanding && React.createElement(\"span\", {\n        className: \"sortArrowTop\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }), \"Title\"), React.createElement(\"th\", {\n        onClick: this.sorting.bind(this, \"testType\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, sortType === \"testType\" && orderAscanding && React.createElement(\"span\", {\n        className: \"sortArrowBottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }), sortType === \"testType\" && !orderAscanding && React.createElement(\"span\", {\n        className: \"sortArrowTop\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }), \"Type\"), React.createElement(\"th\", {\n        onClick: this.sorting.bind(this, \"company\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, sortType === \"company\" && orderAscanding && React.createElement(\"span\", {\n        className: \"sortArrowBottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }), sortType === \"company\" && !orderAscanding && React.createElement(\"span\", {\n        className: \"sortArrowTop\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }), \"Company\"), React.createElement(\"th\", {\n        onClick: this.sorting.bind(this, \"testDeadline\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, sortType === \"testDeadline\" && orderAscanding && React.createElement(\"span\", {\n        className: \"sortArrowBottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }), sortType === \"testDeadline\" && !orderAscanding && React.createElement(\"span\", {\n        className: \"sortArrowTop\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }), \"Deadline\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, \"Delete\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, \"Enrole Tests\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, this.state.tests ? currentData.map(function (item) {\n        return React.createElement(\"tr\", {\n          key: item.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231\n          },\n          __self: this\n        }, item.testTitle), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232\n          },\n          __self: this\n        }, item.testType), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233\n          },\n          __self: this\n        }, item.company), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234\n          },\n          __self: this\n        }, _this2.deadline(item.testDeadline)), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 237\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          onClick: function onClick() {\n            return _this2.deleteTest(item.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 238\n          },\n          __self: this\n        }, \"Delete\")), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240\n          },\n          __self: this\n        }, React.createElement(NavLink, {\n          to: \"/\".concat(_this2.props.user.firstName).concat(_this2.props.user.lastName, \"/start-test\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241\n          },\n          __self: this\n        }, React.createElement(NavLink, {\n          to: \"/test-info-page/\".concat(item.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 242\n          },\n          __self: this\n        }, React.createElement(Button, {\n          onClick: function onClick() {\n            return _this2.props.addTest(item);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 242\n          },\n          __self: this\n        }, \"Start\")))));\n      }) : React.createElement(LoaderDiv, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, \" \", React.createElement(Loader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }), \" \"))), React.createElement(Pagination, {\n        load_More: loadMore,\n        loadMore: this.loadMore.bind(this),\n        currentPage: currentPage,\n        prev: this.prev.bind(this),\n        pageClick: this.pageClick.bind(this),\n        next: this.next.bind(this),\n        pages: pages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      })) : React.createElement(NoTests, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, \" There is no tests yet \", ' ', React.createElement(TestsLink, {\n        to: \"/tests\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, \"  add test \"));\n    }\n  }]);\n\n  return UserTests;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    tests: state.appReducer.tests,\n    testsLoaded: state.appReducer.testsLoaded\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addTest: function addTest(test) {\n      return dispatch(_addTest(test));\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserTests);","map":{"version":3,"sources":["C:\\Users\\Gohar\\Desktop\\testing-project\\testing-project\\src\\containers\\Pages\\UserTests.js"],"names":["React","Component","Searching","Pagination","connect","styled","NavLink","addTest","firebase","Loader","NoTests","div","LoaderDiv","TestsLink","Button","button","UserTests","props","deadline","date","today","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","state","tests","user","search","type","currentPage","dataPerPage","loadMore","sortType","orderAscanding","e","searchProp","setState","target","value","Number","id","prevProps","prevState","testId","db","database","deletedTest","ref","child","set","remove","filter","test","userScore","selectSearchData","filterData","item","testTitle","toLowerCase","substr","length","testType","sort","a","b","nameA","nameB","toUpperCase","testDeadline","indexOfLastData","indexOfFirstData","currentData","slice","pages","i","Math","ceil","push","searching","bind","sorting","map","company","deleteTest","firstName","lastName","prev","pageClick","next","mapStateToProps","appReducer","testsLoaded","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Searching from './Searching';\r\nimport Pagination from './Pagination';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { addTest } from '../../store/actions/testPasser';\r\nimport { firebase } from '../../firebase/firebase';\r\nimport Loader from '../../components/Loader';\r\n\r\nconst NoTests = styled.div`\r\n\tpadding-top: 200px;\r\n\tfont-size: 28px;\r\n\tcolor: #141218;\r\n\tbox-sizing: border-box;\r\n`;\r\n\r\nconst LoaderDiv = styled.div`\r\n\tmargin: auto;\r\n`;\r\n\r\nconst TestsLink = styled(NavLink)`\r\n\tdisplay: inline-block;\r\n\ttext-decoration: none;\r\n\tpaddin-bottom: 5px;\r\n\tborder-bottom: 1px solid black;\r\n\tcolor: black;\r\n\t:hover {\r\n\t\tcursor: pointer;\r\n\t}\r\n\r\n`;\r\n\r\nconst Button = styled.button`\r\n    border: 0;\r\n    background-color: rgba(255, 89, 89, 1);\r\n    color: white;\r\n    : hover {\r\n        cursor: pointer;\r\n    }\r\n    `;\r\n\r\nclass UserTests extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            tests: this.props.user.tests,\r\n            search: \"\",\r\n            type: \"\",\r\n            currentPage: 1,\r\n            dataPerPage: 4,\r\n            loadMore: 0,\r\n            sortType: \"testTitle\",\r\n            orderAscanding: true\r\n        }\r\n    }\r\n    searching(e, searchProp) {\r\n        this.setState({\r\n            [searchProp]: e.target.value,\r\n            currentPage: 1\r\n        })\r\n    }\r\n\r\n    sorting(sortType) {\r\n        this.setState({\r\n            orderAscanding: this.state.sortType !== sortType ? true : !this.state.orderAscanding,\r\n            sortType,\r\n        })\r\n    }\r\n\r\n    pageClick(e) {\r\n        this.setState({\r\n            currentPage: Number(e.target.id),\r\n            loadMore: 0\r\n        })\r\n    }\r\n\r\n    loadMore(e) {\r\n        this.setState({ loadMore: this.state.loadMore + 1 })\r\n    }\r\n\r\n    prev() {\r\n        this.setState({\r\n            currentPage: this.state.currentPage + this.state.loadMore - 1,\r\n            loadMore: 0\r\n        })\r\n    }\r\n\r\n    next() {\r\n        this.setState({\r\n            currentPage: this.state.currentPage + this.state.loadMore + 1,\r\n            loadMore: 0\r\n        })\r\n    }\r\n\r\n    deadline = (date) => {\r\n        let today = new Date(date);\r\n        let dd = today.getDate();\r\n        let mm = today.getMonth() + 1;\r\n        let yyyy = today.getFullYear();\r\n\r\n        if (dd < 10) {\r\n            dd = '0' + dd\r\n        }\r\n\r\n        if (mm < 10) {\r\n            mm = '0' + mm\r\n        }\r\n        return today = dd + '/' + mm + '/' + yyyy;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n\r\n    }\r\n\r\n    deleteTest(testId) {\r\n        let db = firebase.database();\r\n        let deletedTest = db.ref(`user/${this.props.user.id}/tests/${testId}`);\r\n        firebase.database().ref(`tests/${testId}`).child(`added`).set(false);\r\n        deletedTest.remove();\r\n\r\n    }\r\n\r\n    render() {\r\n        let tests = [];\r\n        if (this.state.tests) {\r\n            tests = this.state.tests.filter(test => {\r\n                return test.userScore < 0\r\n            });\r\n        }\r\n\r\n\r\n        const selectSearchData = ['HTML', 'CSS', 'JavaScript', 'Java', 'Python', 'C#', 'Ruby', 'Swift', 'React', 'Redux', 'C++', 'PHP', 'MySQL'];\r\n        const { search, type, currentPage, dataPerPage, loadMore, sortType, orderAscanding } = this.state;\r\n        let filterData = tests.filter(item => {\r\n            return item.testTitle.toLowerCase().substr(0, search.length) === search.toLowerCase()\r\n        })\r\n\r\n        if (type !== \"\") {\r\n            filterData = filterData.filter(item => item.testType === type)\r\n        }\r\n\r\n        filterData.sort((a, b) => {\r\n            let nameA;\r\n            let nameB\r\n            if (sortType !== \"testDeadline\") {\r\n                nameA = a[sortType].toUpperCase();\r\n                nameB = b[sortType].toUpperCase();\r\n            } else {\r\n                nameA = new Date(a.testDeadline)\r\n                nameB = new Date(b.testDeadline)\r\n            }\r\n            if (orderAscanding) {\r\n                if (nameA < nameB) {\r\n                    return -1;\r\n                }\r\n                if (nameA > nameB) {\r\n                    return 1;\r\n                }\r\n            } else {\r\n                if (nameA < nameB) {\r\n                    return 1;\r\n                }\r\n                if (nameA > nameB) {\r\n                    return -1;\r\n                }\r\n            }\r\n            return 0;\r\n        })\r\n\r\n        const indexOfLastData = currentPage * dataPerPage;\r\n        const indexOfFirstData = indexOfLastData - dataPerPage;\r\n        const currentData = filterData.slice(indexOfFirstData, indexOfLastData + loadMore * dataPerPage);\r\n\r\n        const pages = [];\r\n        for (let i = 1; i <= Math.ceil(filterData.length / dataPerPage); i++) {\r\n            pages.push(i);\r\n        }\r\n\r\n        return (\r\n            currentData.length ?\r\n                <div className=\"container-table\">\r\n                    <Searching\r\n                        {...this.state}\r\n                        data={tests}\r\n                        searching={this.searching.bind(this)}\r\n                        currentDataLength={currentData.length}\r\n                        selectSearchData={selectSearchData}\r\n                    />\r\n                    <table className=\"dataTable\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th onClick={this.sorting.bind(this, \"testTitle\")}>\r\n                                    {sortType === \"testTitle\" && orderAscanding &&\r\n                                        <span className=\"sortArrowBottom\"></span>}\r\n                                    {sortType === \"testTitle\" && !orderAscanding &&\r\n                                        <span className=\"sortArrowTop\"></span>}\r\n                                    Title\r\n                        </th>\r\n                                <th onClick={this.sorting.bind(this, \"testType\")}>\r\n                                    {sortType === \"testType\" && orderAscanding &&\r\n                                        <span className=\"sortArrowBottom\"></span>}\r\n                                    {sortType === \"testType\" && !orderAscanding &&\r\n                                        <span className=\"sortArrowTop\"></span>}\r\n                                    Type\r\n                        </th>\r\n                                <th onClick={this.sorting.bind(this, \"company\")}>\r\n                                    {sortType === \"company\" && orderAscanding &&\r\n                                        <span className=\"sortArrowBottom\"></span>}\r\n                                    {sortType === \"company\" && !orderAscanding &&\r\n                                        <span className=\"sortArrowTop\"></span>}\r\n                                    Company\r\n                        </th>\r\n                                <th onClick={this.sorting.bind(this, \"testDeadline\")}>\r\n                                    {sortType === \"testDeadline\" && orderAscanding &&\r\n                                        <span className=\"sortArrowBottom\"></span>}\r\n                                    {sortType === \"testDeadline\" && !orderAscanding &&\r\n                                        <span className=\"sortArrowTop\"></span>}\r\n                                    Deadline\r\n                        </th>\r\n                                <th>Delete</th>\r\n                                <th>Enrole Tests</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.state.tests ?\r\n                                currentData.map(item => {\r\n                                    return (\r\n                                        <tr key={item.id}>\r\n                                            <td>{item.testTitle}</td>\r\n                                            <td>{item.testType}</td>\r\n                                            <td>{item.company}</td>\r\n                                            <td>\r\n                                                {this.deadline(item.testDeadline)}\r\n                                            </td>\r\n                                            <td>\r\n                                                <span onClick={() => this.deleteTest(item.id)}>Delete</span>\r\n                                            </td>\r\n                                            <td>\r\n                                                <NavLink to={`/${this.props.user.firstName}${this.props.user.lastName}/start-test`}>\r\n                                                    <NavLink to={`/test-info-page/${item.id}`} ><Button onClick={() => this.props.addTest(item)}>Start</Button></NavLink>\r\n                                                </NavLink>\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                })\r\n                                : <LoaderDiv> <Loader /> </LoaderDiv>\r\n                            }\r\n                        </tbody>\r\n\r\n                    </table>\r\n                    <Pagination\r\n                        load_More={loadMore}\r\n                        loadMore={this.loadMore.bind(this)}\r\n                        currentPage={currentPage}\r\n                        prev={this.prev.bind(this)}\r\n                        pageClick={this.pageClick.bind(this)}\r\n                        next={this.next.bind(this)}\r\n                        pages={pages}\r\n                    />\r\n                </div>\r\n                : <NoTests> There is no tests yet {' '}\r\n                    <TestsLink to={`/tests`} >  add test </TestsLink>\r\n                </NoTests>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        tests: state.appReducer.tests,\r\n        testsLoaded: state.appReducer.testsLoaded,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        addTest: test => dispatch(addTest(test)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserTests)\r\n"]},"metadata":{},"sourceType":"module"}