{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\src\\\\containers\\\\QuizCreator\\\\QuestionCreater\\\\QuestionCreater.js\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  padding: 2px;\\n  background: transparent;\\n  border-radius: 3px;\\n  border: 1px solid \", \";\\n  background-color: \", \";\\n  width: \", \";\\n  height:\", \";\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    margin-top: 10px;\\n    display: flex;\\n    align-items: center;\\n    justify-content: space-between;\\n    width: \", \";\\n    flex-direction: \", \";\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport OneAnswerCreater from './OneAnswerCreater';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport { createAnswers as _createAnswers } from '../../../store/actions/createAnswer';\nvar FlexContainer = styled.div(_templateObject(), function (props) {\n  return props.width + 'px' || '';\n}, function (props) {\n  return props.dir || 'row';\n});\nvar Button = styled.button(_templateObject2(), function (props) {\n  return props.color || 'grey';\n}, function (props) {\n  return props.color || 'white';\n}, function (props) {\n  return props.width + 'px' || '';\n}, function (props) {\n  return props.height + 'px' || '';\n});\n\nvar QuestionCreater =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(QuestionCreater, _React$Component);\n\n  function QuestionCreater(props) {\n    var _this;\n\n    _classCallCheck(this, QuestionCreater);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(QuestionCreater).call(this, props));\n\n    _this.rightAnswerChangeHandler = function (e) {\n      _this.setState({\n        isRight: +e.target.value\n      });\n    };\n\n    _this.generateArray = function () {\n      _this.ans = [];\n\n      for (var i = 1; i <= _this.state.answersInputCount; i++) {\n        _this.ans.push({\n          id: i,\n          title: '',\n          isRight: i === _this.state.isRight ? true : false\n        });\n      }\n    };\n\n    _this.answersListCreater = function () {\n      _this.generateArray();\n\n      return _this.props.answers.map(function (input, index) {\n        return React.createElement(FlexContainer, {\n          key: index + 1,\n          width: 600,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"radio\",\n          value: index + 1,\n          name: \"rightAnswer\",\n          onChange: _this.rightAnswerChangeHandler,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }), React.createElement(OneAnswerCreater, {\n          id: index + 1,\n          isRight: index + 1 === _this.state.isRight ? true : false,\n          getInputValue: _this.getInputValue,\n          answers: _this.ans,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }), React.createElement(Button, {\n          width: 50,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, \" X \"));\n      });\n    };\n\n    _this.inputsCountChangeHandler = function (e) {\n      return new Promise(function (resolve, reject) {\n        _this.setState({\n          answersInputCount: +e.target.value\n        });\n\n        resolve(_this.state.answersInputCount);\n      }).then(function (number) {\n        _this.generateArray();\n\n        _this.answersListCreater();\n\n        _this.props.createAnswers(_this.ans);\n      });\n    };\n\n    _this.state = {\n      isRight: 0,\n      answersInputCount: 2\n    };\n    return _this;\n  }\n\n  _createClass(QuestionCreater, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.generateArray();\n      this.answersListCreater();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(FlexContainer, {\n        width: 600,\n        dir: 'column',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(FlexContainer, {\n        width: 200,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Count of answers\"), ' ', React.createElement(Button, {\n        width: 20,\n        height: 20,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"+\"), ' ', this.state.answersInputCount, ' ', React.createElement(Button, {\n        width: 20,\n        height: 20,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"-\")), this.answersListCreater()));\n    }\n  }]);\n\n  return QuestionCreater;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  return {\n    answers: state.quiz.answers\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    createAnswers: function createAnswers(answers) {\n      return dispatch(_createAnswers(answers));\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuestionCreater);","map":{"version":3,"sources":["C:\\Users\\Gohar\\Desktop\\testing-project\\testing-project\\src\\containers\\QuizCreator\\QuestionCreater\\QuestionCreater.js"],"names":["React","OneAnswerCreater","styled","connect","createAnswers","FlexContainer","div","props","width","dir","Button","button","color","height","QuestionCreater","rightAnswerChangeHandler","e","setState","isRight","target","value","generateArray","ans","i","state","answersInputCount","push","id","title","answersListCreater","answers","map","input","index","getInputValue","inputsCountChangeHandler","Promise","resolve","reject","then","number","Component","mapStateToProps","quiz","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport OneAnswerCreater from './OneAnswerCreater';\nimport styled from 'styled-components'\nimport {connect} from 'react-redux';\nimport {createAnswers} from '../../../store/actions/createAnswer';\n\n\nconst FlexContainer = styled.div`\n    margin-top: 10px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    width: ${props => props.width + 'px' || ''};\n    flex-direction: ${props => props.dir || 'row'};\n`;\nconst Button = styled.button`\n  padding: 2px;\n  background: transparent;\n  border-radius: 3px;\n  border: 1px solid ${props => props.color  || 'grey'};\n  background-color: ${props => props.color || 'white'};\n  width: ${props => props.width + 'px' || ''};\n  height:${props => props.height+ 'px' || ''};\n`;\n\nclass QuestionCreater extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isRight: 0,\n            answersInputCount: 2,\n        };\n    }\n    rightAnswerChangeHandler = (e) => {\n        this.setState({isRight: +e.target.value});\n    }\n    generateArray = () => {\n        this.ans = [];\n        for (let i = 1; i <= this.state.answersInputCount; i++) {\n            this.ans.push({id: i, title: '', isRight: i === this.state.isRight ? true : false})\n        }\n    }\n    answersListCreater = () => {\n        this.generateArray();\n        return this.props.answers.map((input, index)=> {\n            return (\n                <FlexContainer key={index + 1} width={600} >\n                    <input type='radio' \n                        value={index + 1} \n                        name='rightAnswer' \n                        onChange={this.rightAnswerChangeHandler}\n                    />\n                    <OneAnswerCreater \n                        id={index + 1} \n                        isRight={index + 1 === this.state.isRight ? true : false}\n                        getInputValue={this.getInputValue}\n                        answers={this.ans}\n                    />\n                    <Button width={50}> X </Button>\n                </FlexContainer>\n            )\n        });\n    }\n    componentDidMount() {\n        this.generateArray();\n        this.answersListCreater();\n    }\n    inputsCountChangeHandler = (e) => {\n        return new Promise((resolve, reject) => {\n            this.setState({answersInputCount: +e.target.value});\n                resolve(this.state.answersInputCount)\n            })\n            .then (number => {\n                this.generateArray();\n                this.answersListCreater();\n                this.props.createAnswers(this.ans);\n            })\n    }\n    render() {\n        return (\n            <div>\n                <FlexContainer width={600} dir={'column'}>\n                    <FlexContainer width={200}>\n                        <span>Count of answers</span> \n                        {' '}<Button width={20} height={20}>+</Button>\n                        {' '}{this.state.answersInputCount}\n                        {' '}<Button width={20} height={20}>-</Button>\n                    </FlexContainer>\n                    {this.answersListCreater()}\n                </FlexContainer>\n                \n            </div>\n        );\n\n\n    }\n}\nfunction mapStateToProps(state) {\n  return {answers: state.quiz.answers}\n}\nfunction mapDispatchToProps(dispatch) {\n  return {\n    createAnswers: (answers) => dispatch(createAnswers(answers)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuestionCreater)\n"]},"metadata":{},"sourceType":"module"}