{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\src\\\\containers\\\\Pages\\\\UserProfile.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n\\tmargin: 0 auto;\\n\\twidth: 100px;\\n\\tfill: rgba(16, 5, 41, 1);\\n\\t:hover {\\n\\t\\tfill: #FF5959;\\n\\t}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport PassedTests from './PassedTests';\nimport UserSvg from './UserSvg';\nimport * as firebase from \"firebase\";\nimport { storage } from '../../firebase/firebase';\nimport styled from 'styled-components';\nvar CompanySvgDiv = styled.div(_templateObject());\n\nvar UserProfile =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UserProfile, _Component);\n\n  function UserProfile(props) {\n    var _this;\n\n    _classCallCheck(this, UserProfile);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UserProfile).call(this, props));\n    _this.state = {\n      image: null,\n      url: _this.props.user.image,\n      progress: 0\n    };\n    return _this;\n  }\n\n  _createClass(UserProfile, [{\n    key: \"chooseImg\",\n    value: function chooseImg(e) {\n      if (e.target.files[0]) {\n        var image = e.target.files[0];\n        this.setState({\n          image: image\n        });\n      }\n    }\n  }, {\n    key: \"handleUpload\",\n    value: function handleUpload() {\n      var _this2 = this;\n\n      var image = this.state.image;\n\n      if (image) {\n        var uploadImage = storage.ref(\"images/\".concat(this.props.user.id, \"/\").concat(image.name)).put(image);\n        uploadImage.on('state_changed', function (snapshot) {\n          var progress = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n\n          _this2.setState({\n            progress: progress\n          });\n        }, function (error) {\n          console.log(error);\n        }, function () {\n          storage.ref(\"images/\".concat(_this2.props.user.id)).child(image.name).getDownloadURL().then(function (url) {\n            console.log(url);\n\n            _this2.setState({\n              url: url\n            });\n          });\n        });\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (prevState.url !== this.state.url) {\n        firebase.database().ref(\"user/\".concat(this.props.user.id)).child('image').set(this.state.url);\n        console.log(\"update data\");\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"userContent company-profile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"profile-logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"image-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, this.state.url ? React.createElement(\"img\", {\n        src: this.state.url,\n        alt: \"Upload\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }) : React.createElement(UserSvg, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), this.state.url && React.createElement(\"div\", {\n        className: \"uploadOverlay\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), !this.state.image ? React.createElement(\"button\", {\n        onClick: this.handleUpload.bind(this),\n        className: \"uploadImage\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Upload\") : React.createElement(\"button\", {\n        onClick: this.handleUpload.bind(this),\n        className: \"uploadImage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Upload\")), this.state.progress !== 0 && React.createElement(\"progress\", {\n        value: this.state.progress,\n        className: \"progress red upload-progress\",\n        max: \"100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"file\",\n        name: \"file\",\n        id: \"file\",\n        className: \"upload\",\n        onChange: this.chooseImg.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"infoUser\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"\".concat(this.props.user.firstName, \" \").concat(this.props.user.lastName)), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, this.props.user.description))), React.createElement(\"div\", {\n        className: \"settings\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Edit\"), \" / \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Profie Settings\")), React.createElement(\"div\", {\n        className: \"labelHeader\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Passed Tests\"), React.createElement(PassedTests, {\n        user: this.props.user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return UserProfile;\n}(Component);\n\nexport { UserProfile as default };","map":{"version":3,"sources":["C:\\Users\\Gohar\\Desktop\\testing-project\\testing-project\\src\\containers\\Pages\\UserProfile.js"],"names":["React","Component","PassedTests","UserSvg","firebase","storage","styled","CompanySvgDiv","div","UserProfile","props","state","image","url","user","progress","e","target","files","setState","uploadImage","ref","id","name","put","on","snapshot","Math","round","bytesTransferred","totalBytes","error","console","log","child","getDownloadURL","then","prevProps","prevState","database","set","handleUpload","bind","chooseImg","firstName","lastName","description"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport PassedTests from './PassedTests';\r\nimport UserSvg from './UserSvg';\r\nimport * as firebase from \"firebase\";\r\nimport {storage} from '../../firebase/firebase'\r\nimport styled from 'styled-components';\r\n\r\nconst CompanySvgDiv = styled.div`\r\n\tmargin: 0 auto;\r\n\twidth: 100px;\r\n\tfill: rgba(16, 5, 41, 1);\r\n\t:hover {\r\n\t\tfill: #FF5959;\r\n\t}\r\n`;\r\n\r\nexport default class UserProfile extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props)\r\n\r\n\t\tthis.state = {\r\n            image: null,\r\n            url: this.props.user.image,\r\n            progress: 0\r\n        }\r\n\t}\r\n\r\n\tchooseImg (e) {\r\n        if(e.target.files[0]){\r\n            const image = e.target.files[0];\r\n            this.setState({image})\r\n        }\r\n    }\r\n\r\n    handleUpload () {\r\n\r\n        const { image } = this.state;\r\n        if(image){\r\n        const uploadImage = storage.ref(`images/${this.props.user.id}/${image.name}`).put(image);\r\n\r\n        \r\n            uploadImage.on('state_changed',\r\n            (snapshot) => {\r\n                const progress = Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100);\r\n                this.setState({progress})\r\n            },\r\n            (error) => {\r\n                console.log(error);\r\n            },\r\n            () => {\r\n                storage.ref(`images/${this.props.user.id}`).child(image.name).getDownloadURL().then(url => {\r\n                    console.log(url)\r\n                    this.setState({url})\r\n                })\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    componentDidUpdate (prevProps, prevState) {\r\n        if(prevState.url !== this.state.url){\r\n            firebase.database().ref(`user/${this.props.user.id}`).child('image').set(this.state.url);\r\n            console.log(\"update data\");\r\n        }\r\n    }\r\n\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div className=\"userContent company-profile\">\r\n\t\t\t\t\t<div className='profile-logo' > \r\n                        <div className=\"image-content\">\r\n                            {this.state.url ? <img src={this.state.url} alt=\"Upload\" /> : <UserSvg /> }\r\n                            {this.state.url && <div className='uploadOverlay'></div>}\r\n                            { !this.state.image ? <button onClick={this.handleUpload.bind(this)} className=\"uploadImage\" disabled={true}>Upload</button> : <button onClick={this.handleUpload.bind(this)} className=\"uploadImage\" >Upload</button>}\r\n                        </div>\r\n                        {this.state.progress !== 0 && <progress value={this.state.progress} className=\"progress red upload-progress\" max=\"100\" ></progress>}\r\n                        <input type=\"file\" name=\"file\" id=\"file\" className=\"upload\" onChange={this.chooseImg.bind(this)}  />\r\n                        \r\n                        \r\n                    </div>\r\n\t\t\t\t\t<div className=\"infoUser\">\r\n\t\t\t\t\t\t<h2>{`${this.props.user.firstName} ${this.props.user.lastName}`}</h2>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t{this.props.user.description}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"settings\">\r\n\t\t\t\t\t<span>Edit</span>{` / `}<span>Profie Settings</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"labelHeader\">Passed Tests</div>\r\n\t\t\t\t<PassedTests user={this.props.user} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n}"]},"metadata":{},"sourceType":"module"}