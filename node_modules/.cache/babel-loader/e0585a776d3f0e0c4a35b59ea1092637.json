{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { getCompaniesStarted, getCompaniesSuccess, getCompaniesFailure, getTestsStarted, getTestsFailure, getTestsSuccess, getUsersStarted, getUsersFailure, getUsersSuccess, editingTest } from '../actions/appAction';\nimport { firebase } from '../../firebase/firebase';\nimport { addEditingQuestions } from '../actions/testCreator';\nexport var getTests = function getTests() {\n  return function (dispatch) {\n    dispatch(getTestsStarted());\n    firebase.database().ref('tests').on('value', function (snapshot) {\n      var tests = [];\n      var passers = [];\n      snapshot.forEach(function (childSnapshot) {\n        childSnapshot.child('passers').forEach(function (snapshot1) {\n          passers.push(_objectSpread({\n            id: snapshot1.key\n          }, snapshot1.val()));\n        });\n        tests.push(_objectSpread({\n          id: childSnapshot.key\n        }, childSnapshot.val(), {\n          passers: passers\n        }));\n      });\n      dispatch(getTestsSuccess(tests));\n    });\n  };\n};\nexport var getCompanies = function getCompanies() {\n  return function (dispatch) {\n    dispatch(getCompaniesStarted());\n    firebase.database().ref('companies').on('value', function (snapshot) {\n      var companies = [];\n      snapshot.forEach(function (childSnapshot) {\n        companies.push(_objectSpread({\n          id: childSnapshot.key\n        }, childSnapshot.val()));\n      });\n      dispatch(getCompaniesSuccess(companies));\n    });\n  };\n};\nexport var getUsers = function getUsers() {\n  return function (dispatch) {\n    dispatch(getUsersStarted());\n    firebase.database().ref('user').on('value', function (snapshot) {\n      var users = [];\n      var tests = [];\n      snapshot.forEach(function (childSnapshot) {\n        childSnapshot.child('tests').forEach(function (snapshot1) {\n          tests.push(_objectSpread({\n            id: snapshot1.key\n          }, snapshot1.val()));\n        });\n        users.push(_objectSpread({\n          id: childSnapshot.key\n        }, childSnapshot.val(), {\n          tests: tests\n        }));\n      });\n      dispatch(getUsersSuccess(users));\n    });\n  };\n};","map":{"version":3,"sources":["C:\\Users\\Gohar\\Desktop\\testing-project\\testing-project\\src\\store\\thunks\\thunks.js"],"names":["getCompaniesStarted","getCompaniesSuccess","getCompaniesFailure","getTestsStarted","getTestsFailure","getTestsSuccess","getUsersStarted","getUsersFailure","getUsersSuccess","editingTest","firebase","addEditingQuestions","getTests","dispatch","database","ref","on","snapshot","tests","passers","forEach","childSnapshot","child","snapshot1","push","id","key","val","getCompanies","companies","getUsers","users"],"mappings":"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","sourcesContent":["import {getCompaniesStarted, \r\n        getCompaniesSuccess, \r\n        getCompaniesFailure,\r\n        getTestsStarted, \r\n        getTestsFailure, \r\n        getTestsSuccess,\r\n        getUsersStarted,\r\n        getUsersFailure,\r\n        getUsersSuccess,\r\n        editingTest,\r\n    } from '../actions/appAction';\r\nimport {firebase} from '../../firebase/firebase';\r\nimport { addEditingQuestions } from '../actions/testCreator';\r\n\r\nexport const getTests = () => {\r\n    return dispatch => {\r\n        dispatch(getTestsStarted());\r\n        \r\n        firebase.database().ref('tests').on('value', (snapshot) => {\r\n           let tests = [];\r\n           let passers = [];\r\n\t        snapshot.forEach(childSnapshot => {\r\n                childSnapshot.child('passers').forEach (snapshot1 => {\r\n                    passers.push({ \r\n                        id: snapshot1.key,\r\n                        ...snapshot1.val()\r\n                    })\r\n                })\r\n\t            tests.push({\r\n\t                id: childSnapshot.key,\r\n                    ...childSnapshot.val(),\r\n                    passers\r\n                }) \r\n                \r\n               \r\n            });\r\n            dispatch(getTestsSuccess(tests));\r\n        });\r\n    }  \r\n};\r\n\r\nexport const getCompanies = () => {\r\n    return dispatch => {\r\n        dispatch(getCompaniesStarted());\r\n  \r\n        firebase.database().ref('companies').on('value', (snapshot) => {\r\n            let companies = [];\r\n\r\n            snapshot.forEach(childSnapshot => {\r\n                companies.push({\r\n                     id: childSnapshot.key,\r\n                     ...childSnapshot.val()\r\n                }) \r\n            });\r\n\r\n            dispatch(getCompaniesSuccess(companies));\r\n         });\r\n     }  \r\n };\r\n \r\nexport const getUsers = () => {\r\n    return dispatch => {\r\n        dispatch(getUsersStarted());\r\n\r\n        firebase.database().ref('user').on('value', (snapshot) => {\r\n            let users = [];\r\n            let tests = [];\r\n             snapshot.forEach(childSnapshot => {\r\n                childSnapshot.child('tests').forEach (snapshot1 => {\r\n                    tests.push({ \r\n                        id: snapshot1.key,\r\n                        ...snapshot1.val()\r\n                    })\r\n                })\r\n                users.push({\r\n                    id: childSnapshot.key,\r\n                    ...childSnapshot.val(), \r\n                    tests\r\n               }) \r\n               \r\n            });\r\n            dispatch(getUsersSuccess(users));\r\n         });\r\n     }  \r\n };\r\n\r\n"]},"metadata":{},"sourceType":"module"}