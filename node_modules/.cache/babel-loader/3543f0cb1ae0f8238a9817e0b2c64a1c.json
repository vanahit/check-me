{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\src\\\\containers\\\\HomePage\\\\TestsSlider.js\";\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  display: inline-block;\\n  margin: 15px;\\n  cursor: pointer;\\n  font-size: 14px;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"text-align: center;\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  position: relative;\\n  display: flex;\\n  width: 3200px;\\n  max-width: 333.3%;\\n  padding: 5px;\\n  box-sizing: border-box;\\n  @media screen and (max-width: 500px){\\n    max-width: unset;\\n    width: 1000%;\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 1200px;\\n  max-width: 100%;\\n  margin: 10px auto;\\n  padding-bottom: 60%; \\n  box-sizing: border-box;\\n  position: relative;\\n  overflow: hidden;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport TestRender from '../TestRenderComponents/TestRender';\nimport styled, { css } from 'styled-components';\nvar percent;\nvar styles = {\n  transition: 'all 1s linear'\n};\n\nfunction resp() {\n  if (window.innerWidth <= 500) {\n    percent = 90;\n  } else {\n    percent = 70;\n  }\n}\n\nresp();\n\nwindow.onresize = function () {\n  resp();\n}; // styled carousel\n\n\nvar CarouselContainer = styled.div(_templateObject());\nvar ContainerItem = styled.div(_templateObject2());\nvar ArrowContent = styled.div(_templateObject3());\nvar Arrow = styled.span(_templateObject4());\n\nvar TestSlider =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TestSlider, _Component);\n\n  function TestSlider(props) {\n    var _this;\n\n    _classCallCheck(this, TestSlider);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TestSlider).call(this, props));\n\n    _this.setImage = function () {};\n\n    _this.getTodayDate = function () {\n      var today = new Date();\n      var dd = today.getDate();\n      var mm = today.getMonth() + 1;\n      var yyyy = today.getFullYear();\n\n      if (dd < 10) {\n        dd = '0' + dd;\n      }\n\n      if (mm < 10) {\n        mm = '0' + mm;\n      }\n\n      return today = yyyy + '-' + mm + '-' + dd;\n    };\n\n    _this.compareDates = function (stringDate) {\n      var today = new Date();\n      today = _this.getTodayDate(today);\n      return Date.parse(stringDate) >= Date.parse(today);\n    };\n\n    _this.state = {\n      translate: 0,\n      tests: _this.props.tests\n    };\n    return _this;\n  }\n\n  _createClass(TestSlider, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (this.props.tests === true && this.props.tests !== prevProps.tests.testsLoaded) {\n        this.setState({\n          tests: this.props.tests\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      setInterval(function () {\n        _this2.setState({\n          translate: _this2.state.translate === -percent ? 0 : _this2.state.translate - 10\n        });\n      }, 10000);\n    }\n  }, {\n    key: \"ToLeft\",\n    value: function ToLeft() {\n      this.setState({\n        translate: this.state.translate === 0 ? -percent : this.state.translate + 10\n      });\n    }\n  }, {\n    key: \"ToRight\",\n    value: function ToRight() {\n      this.setState({\n        translate: this.state.translate === -percent ? 0 : this.state.translate - 10\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var tests = [];\n      var fillteredTests = [];\n\n      if (this.state.tests) {\n        tests = Object.values(this.state.tests[0]);\n        fillteredTests = tests.filter(function (item) {\n          if (_this3.compareDates(item.testDeadline)) {\n            return item;\n          }\n        });\n      }\n\n      return React.createElement(React.Fragment, null, React.createElement(ArrowContent, {\n        className: \"arrows\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(Arrow, {\n        onClick: this.ToLeft.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Left\"), React.createElement(Arrow, {\n        onClick: this.ToRight.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Right\")), React.createElement(CarouselContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(ContainerItem, {\n        style: _objectSpread({}, styles, {\n          transform: \"translateX(\".concat(this.state.translate, \"%)\")\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, this.state.tests ? fillteredTests.map(function (item, index) {\n        return React.createElement(TestRender, {\n          test: item,\n          key: item.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        });\n      }) : '')));\n    }\n  }]);\n\n  return TestSlider;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    tests: state.appReducer.tests\n  };\n}\n\nexport default connect(mapStateToProps, null)(TestSlider);","map":{"version":3,"sources":["C:\\Users\\Gohar\\Desktop\\testing-project\\testing-project\\src\\containers\\HomePage\\TestsSlider.js"],"names":["React","Component","connect","TestRender","styled","css","percent","styles","transition","resp","window","innerWidth","onresize","CarouselContainer","div","ContainerItem","ArrowContent","Arrow","span","TestSlider","props","setImage","getTodayDate","today","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","compareDates","stringDate","parse","state","translate","tests","prevProps","prevState","testsLoaded","setState","setInterval","fillteredTests","Object","values","filter","item","testDeadline","ToLeft","bind","ToRight","transform","map","index","id","mapStateToProps","appReducer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport TestRender from '../TestRenderComponents/TestRender';\r\nimport styled, {css} from 'styled-components'\r\n\r\nlet percent;\r\nconst styles = { transition: 'all 1s linear' }\r\n\r\nfunction resp(){\r\n\tif (window.innerWidth <= 500) {\r\n\t\tpercent = 90\r\n\t} else {\r\n\t\tpercent = 70\r\n\t}\r\n}\r\n\r\nresp()\r\n\r\nwindow.onresize=function(){ resp() }\r\n\r\n\r\n// styled carousel\r\n\r\nconst CarouselContainer = styled.div`\r\n  width: 1200px;\r\n  max-width: 100%;\r\n  margin: 10px auto;\r\n  padding-bottom: 60%; \r\n  box-sizing: border-box;\r\n  position: relative;\r\n  overflow: hidden;\r\n`\r\n\r\nconst ContainerItem = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  width: 3200px;\r\n  max-width: 333.3%;\r\n  padding: 5px;\r\n  box-sizing: border-box;\r\n  @media screen and (max-width: 500px){\r\n    max-width: unset;\r\n    width: 1000%;\r\n  }\r\n`\r\nconst ArrowContent = styled.div`text-align: center;`\r\n\r\nconst Arrow = styled.span`\r\n  display: inline-block;\r\n  margin: 15px;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n`\r\n\r\nclass TestSlider extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\ttranslate : 0,\r\n\t\t\ttests: this.props.tests,\r\n\t\t}\r\n    }\r\n    setImage = () => {\r\n\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps, prevState) {\r\n        if (this.props.tests === true && this.props.tests !== prevProps.tests.testsLoaded) {\r\n            this.setState({tests: this.props.tests});\r\n        }\r\n\t}\r\n\t\r\n\tcomponentDidMount () {\r\n\r\n\t\tsetInterval(() => {\r\n\t\t\tthis.setState({ translate : this.state.translate === -percent ? 0 : this.state.translate - 10 })\r\n\t\t}, 10000)\r\n\t}\r\n\r\n\tToLeft () {\r\n\t\tthis.setState({ translate : this.state.translate === 0 ? -percent : this.state.translate + 10 })\r\n\t}\t\r\n\r\n\tToRight () {\r\n\t\tthis.setState({ translate : this.state.translate === -percent ? 0 : this.state.translate - 10 })\r\n\t}\r\n\r\n\tgetTodayDate = () => {\r\n\t\tlet today = new Date();\r\n\t\tlet dd = today.getDate();\r\n\t\tlet mm = today.getMonth() + 1;\r\n\t\tlet yyyy = today.getFullYear();\r\n\r\n\t\tif(dd < 10) {\r\n\t\t\tdd = '0' + dd\r\n\t\t} \r\n\r\n\t\tif (mm < 10) {\r\n\t\t\tmm = '0' + mm\r\n\t\t} \r\n\t\treturn\ttoday = yyyy + '-' + mm + '-' + dd;\r\n\t}\r\n\r\n\tcompareDates = (stringDate) => {\r\n\t\tlet today = new Date();\r\n\t\ttoday = this.getTodayDate(today);\r\n\t\treturn Date.parse(stringDate) >= Date.parse(today);        \r\n\t}\r\n\r\n\trender() {\r\n\t\tlet tests = [];\r\n\t\tlet fillteredTests = [];\r\n\t\tif (this.state.tests) {\r\n\t\t\ttests = Object.values(this.state.tests[0]);\r\n\t\t\tfillteredTests = tests.filter(item => {\r\n\t\t\t\tif (this.compareDates(item.testDeadline)) {\r\n\t\t\t\t\treturn item;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t} \r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<ArrowContent className=\"arrows\">\r\n\t\t\t\t\t<Arrow onClick={this.ToLeft.bind(this)}>Left</Arrow>\r\n\t\t\t\t\t<Arrow onClick={this.ToRight.bind(this)}>Right</Arrow>\r\n\t\t\t\t</ArrowContent>\r\n\t\t\t\t<CarouselContainer>\r\n\t\t\t\t\t<ContainerItem style={{ ...styles, transform: `translateX(${this.state.translate}%)` }}>\r\n\t\t\t\t\t\t{this.state.tests \r\n\t\t\t\t\t\t\t?\tfillteredTests.map( (item, index) => {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<TestRender test={item} key={item.id}/>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t: ''\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</ContainerItem>\r\n\t\t\t\t</CarouselContainer>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n\treturn {\r\n\t\ttests: state.appReducer.tests,\r\n\t}\r\n\t\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(TestSlider)"]},"metadata":{},"sourceType":"module"}