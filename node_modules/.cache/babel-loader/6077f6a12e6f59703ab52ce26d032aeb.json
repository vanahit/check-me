{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { CHANGE_TOTAL_SCORE, SUBMITTED_FALSE, SUBMITTED_TRUE, ADD_QUESTION, DELETE_QUESTION, ADD_QUESTION_SUBMITTED, ANSWER_VALID, QUESTION_VALID, ANSWER_NOT_VALID, QUESTION_NOT_VALID, TEST_NOT_VALID, TEST_VALID, UPDATE_QUESTIONS } from '../actions/actionTypes';\nvar initialState = {\n  questions: [],\n  totalScore: 0,\n  addQuestionSubmitted: false,\n  isAnswerValid: false,\n  isQuestionValid: false,\n  isTestValid: false,\n  submitted: false,\n  testValid: false,\n  isRight: false\n};\nexport default function testCreator() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case CHANGE_TOTAL_SCORE:\n      return _objectSpread({}, state, {\n        totalScore: state.totalScore + action.score\n      });\n\n    case SUBMITTED_FALSE:\n      return _objectSpread({}, state, {\n        submitted: false\n      });\n\n    case SUBMITTED_TRUE:\n      return _objectSpread({}, state, {\n        submitted: true\n      });\n\n    case ANSWER_VALID:\n      return _objectSpread({}, state, {\n        isAnswerValid: true\n      });\n\n    case ANSWER_NOT_VALID:\n      return _objectSpread({}, state, {\n        isAnswerValid: false\n      });\n\n    case QUESTION_VALID:\n      return _objectSpread({}, state, {\n        isQuestionValid: true\n      });\n\n    case QUESTION_NOT_VALID:\n      return _objectSpread({}, state, {\n        isQuestionValid: false\n      });\n\n    case ADD_QUESTION:\n      var oneQuestion = {\n        id: Date.now(),\n        answers: [{\n          id: Date.now(),\n          title: ''\n        }, {\n          id: Date.now() + 1,\n          title: ''\n        }],\n        isRight: 0,\n        questionTitle: '',\n        score: ''\n      };\n      return _objectSpread({}, state, {\n        questions: state.questions.concat(oneQuestion)\n      });\n\n    case DELETE_QUESTION:\n      return _objectSpread({}, state, {\n        questions: state.questions.filter(function (question) {\n          return question.id !== action.id;\n        }),\n        totalScore: state.totalScore - action.score\n      });\n\n    case ADD_QUESTION_SUBMITTED:\n      return _objectSpread({}, state, {\n        addQuestionSubmitted: true\n      });\n\n    case ADD_QUESTION_SUBMITTED:\n      return _objectSpread({}, state, {\n        addQuestionSubmitted: true\n      });\n\n    case TEST_NOT_VALID:\n      return _objectSpread({}, state, {\n        testValid: false\n      });\n\n    case TEST_VALID:\n      return _objectSpread({}, state, {\n        testValid: true\n      });\n\n    case UPDATE_QUESTIONS:\n      return _objectSpread({}, state, {\n        questions: action.questions\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:\\Users\\Gohar\\Desktop\\testing-project\\testing-project\\src\\store\\reducers\\testCreator.js"],"names":["CHANGE_TOTAL_SCORE","SUBMITTED_FALSE","SUBMITTED_TRUE","ADD_QUESTION","DELETE_QUESTION","ADD_QUESTION_SUBMITTED","ANSWER_VALID","QUESTION_VALID","ANSWER_NOT_VALID","QUESTION_NOT_VALID","TEST_NOT_VALID","TEST_VALID","UPDATE_QUESTIONS","initialState","questions","totalScore","addQuestionSubmitted","isAnswerValid","isQuestionValid","isTestValid","submitted","testValid","isRight","testCreator","state","action","type","score","oneQuestion","id","Date","now","answers","title","questionTitle","concat","filter","question"],"mappings":"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","sourcesContent":["import {CHANGE_TOTAL_SCORE, SUBMITTED_FALSE, SUBMITTED_TRUE, ADD_QUESTION, DELETE_QUESTION, ADD_QUESTION_SUBMITTED, \r\n  ANSWER_VALID, QUESTION_VALID, ANSWER_NOT_VALID, QUESTION_NOT_VALID, TEST_NOT_VALID, TEST_VALID, UPDATE_QUESTIONS} from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n  questions: [],\r\n  totalScore: 0,\r\n  addQuestionSubmitted: false,\r\n  isAnswerValid: false,\r\n  isQuestionValid: false,\r\n  isTestValid: false,\r\n  submitted: false,\r\n  testValid: false,\r\n  isRight: false,\r\n\r\n}\r\n\r\nexport default function testCreator(state = initialState, action) {\r\n  switch (action.type) {\r\n    case CHANGE_TOTAL_SCORE:\r\n      return {\r\n        ...state,\r\n        totalScore: state.totalScore + action.score,\r\n      }\r\n    case SUBMITTED_FALSE:\r\n      return {\r\n        ...state,\r\n        submitted: false,\r\n      }\r\n    case SUBMITTED_TRUE:\r\n      return {\r\n        ...state,\r\n        submitted: true,\r\n    }\r\n    case ANSWER_VALID:\r\n      return {\r\n        ...state,\r\n        isAnswerValid: true,\r\n    }\r\n    case ANSWER_NOT_VALID:\r\n      return {\r\n        ...state,\r\n        isAnswerValid: false,\r\n      }\r\n    case QUESTION_VALID:\r\n      return {\r\n        ...state,\r\n        isQuestionValid: true,\r\n    }\r\n    case QUESTION_NOT_VALID:\r\n      return {\r\n        ...state,\r\n        isQuestionValid: false,\r\n      }\r\n    case ADD_QUESTION:\r\n      let oneQuestion = {\r\n        id: Date.now(),\r\n        answers: [{ id: Date.now(), title: ''}, { id: Date.now() + 1, title: ''}],\r\n        isRight: 0,\r\n        questionTitle: '',\r\n        score: '',\r\n      }\r\n      return {\r\n        ...state,\r\n        questions: state.questions.concat(oneQuestion),\r\n      }\r\n      case DELETE_QUESTION:\r\n        return {\r\n          ...state,\r\n          questions: state.questions.filter(question => question.id !== action.id),\r\n          totalScore: state.totalScore - action.score,\r\n        }\r\n      case ADD_QUESTION_SUBMITTED:\r\n        return {\r\n          ...state,\r\n          addQuestionSubmitted: true,\r\n        }\r\n      case ADD_QUESTION_SUBMITTED:\r\n        return {\r\n          ...state,\r\n          addQuestionSubmitted: true,\r\n      }\r\n      case TEST_NOT_VALID:\r\n        return {\r\n          ...state,\r\n          testValid: false,\r\n      }\r\n\r\n      case TEST_VALID:\r\n        return {\r\n          ...state,\r\n          testValid: true,\r\n      }\r\n\r\n      case UPDATE_QUESTIONS:\r\n        return {\r\n          ...state,\r\n          questions: action.questions,\r\n        }\r\n\r\n      default:\r\n        return state\r\n  }\r\n  \r\n} \r\n"]},"metadata":{},"sourceType":"module"}