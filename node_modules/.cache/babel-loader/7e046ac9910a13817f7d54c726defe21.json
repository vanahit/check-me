{"ast":null,"code":"import { getCompaniesStarted, getCompaniesSuccess, getCompaniesFailure, getTestsStarted, getTestsFailure, getTestsSuccess, getUsersStarted, getUsersFailure, getUsersSuccess } from '../actions/appAction';\nexport var getTests = function getTests() {\n  return function (dispatch) {\n    dispatch(getTestsStarted());\n    fetch('https://test-project-4ab6b.firebaseio.com/tests.json').then(function (response) {\n      return response.json();\n    }).then(function (response) {\n      var tests = [];\n      tests = Object.values(response[0]);\n      dispatch(getTestsSuccess(tests));\n    }).catch(function (err) {\n      dispatch(getTestsFailure(err.message));\n    });\n  };\n};\nexport var getCompanies = function getCompanies() {\n  return function (dispatch) {\n    dispatch(getCompaniesStarted());\n    fetch('https://test-project-4ab6b.firebaseio.com/companies.json').then(function (response) {\n      return response.json();\n    }).then(function (response) {\n      console.log(response);\n      var companies = [];\n      companies = Object.values(response[0]);\n      dispatch(getCompaniesSuccess(response[0]));\n    }).catch(function (err) {\n      dispatch(getCompaniesFailure(err.message));\n    });\n  };\n};\nexport var getUsers = function getUsers() {\n  return function (dispatch) {\n    dispatch(getUsersStarted());\n    fetch('https://test-project-4ab6b.firebaseio.com/user.json').then(function (response) {\n      return response.json();\n    }).then(function (response) {\n      var users = [];\n      users = Object.values(response[0]);\n      dispatch(getUsersSuccess(users));\n    }).catch(function (err) {\n      dispatch(getUsersFailure(err.message));\n    });\n  };\n};","map":{"version":3,"sources":["C:\\Users\\Gohar\\Desktop\\testing-project\\testing-project\\src\\store\\thunks\\thunks.js"],"names":["getCompaniesStarted","getCompaniesSuccess","getCompaniesFailure","getTestsStarted","getTestsFailure","getTestsSuccess","getUsersStarted","getUsersFailure","getUsersSuccess","getTests","dispatch","fetch","then","response","json","tests","Object","values","catch","err","message","getCompanies","console","log","companies","getUsers","users"],"mappings":"AAAA,SAAQA,mBAAR,EACQC,mBADR,EAEQC,mBAFR,EAGQC,eAHR,EAIQC,eAJR,EAKQC,eALR,EAMQC,eANR,EAOQC,eAPR,EAQQC,eARR,QASW,sBATX;AAWA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAC1B,SAAO,UAAAC,QAAQ,EAAI;AACfA,IAAAA,QAAQ,CAACP,eAAe,EAAhB,CAAR;AACAQ,IAAAA,KAAK,CAAC,sDAAD,CAAL,CACKC,IADL,CACU,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KADlB,EAEKF,IAFL,CAEU,UAAAC,QAAQ,EAAI;AACd,UAAIE,KAAK,GAAG,EAAZ;AACAA,MAAAA,KAAK,GAAGC,MAAM,CAACC,MAAP,CAAcJ,QAAQ,CAAC,CAAD,CAAtB,CAAR;AACAH,MAAAA,QAAQ,CAACL,eAAe,CAACU,KAAD,CAAhB,CAAR;AACH,KANL,EAOKG,KAPL,CAOW,UAAAC,GAAG,EAAI;AACVT,MAAAA,QAAQ,CAACN,eAAe,CAACe,GAAG,CAACC,OAAL,CAAhB,CAAR;AACH,KATL;AAUH,GAZD;AAaD,CAdI;AAgBP,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAC9B,SAAO,UAAAX,QAAQ,EAAI;AACfA,IAAAA,QAAQ,CAACV,mBAAmB,EAApB,CAAR;AAEFW,IAAAA,KAAK,CAAC,0DAAD,CAAL,CACGC,IADH,CACQ,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KADhB,EAEGF,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AACdS,MAAAA,OAAO,CAACC,GAAR,CAAYV,QAAZ;AACI,UAAIW,SAAS,GAAG,EAAhB;AACAA,MAAAA,SAAS,GAAGR,MAAM,CAACC,MAAP,CAAcJ,QAAQ,CAAC,CAAD,CAAtB,CAAZ;AACDH,MAAAA,QAAQ,CAACT,mBAAmB,CAACY,QAAQ,CAAC,CAAD,CAAT,CAApB,CAAR;AACN,KAPH,EAQGK,KARH,CAQS,UAAAC,GAAG,EAAI;AACNT,MAAAA,QAAQ,CAACR,mBAAmB,CAACiB,GAAG,CAACC,OAAL,CAApB,CAAR;AACP,KAVH;AAWD,GAdD;AAeD,CAhBI;AAkBP,OAAO,IAAMK,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAC1B,SAAO,UAAAf,QAAQ,EAAI;AACfA,IAAAA,QAAQ,CAACJ,eAAe,EAAhB,CAAR;AACAK,IAAAA,KAAK,CAAC,qDAAD,CAAL,CACCC,IADD,CACM,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KADd,EAECF,IAFD,CAEM,UAAAC,QAAQ,EAAI;AACd,UAAIa,KAAK,GAAG,EAAZ;AACAA,MAAAA,KAAK,GAAGV,MAAM,CAACC,MAAP,CAAcJ,QAAQ,CAAC,CAAD,CAAtB,CAAR;AACAH,MAAAA,QAAQ,CAACF,eAAe,CAACkB,KAAD,CAAhB,CAAR;AACH,KAND,EAOCR,KAPD,CAOO,UAAAC,GAAG,EAAI;AACZT,MAAAA,QAAQ,CAACH,eAAe,CAACY,GAAG,CAACC,OAAL,CAAhB,CAAR;AACD,KATD;AAUH,GAZD;AAaD,CAdI","sourcesContent":["import {getCompaniesStarted, \r\n        getCompaniesSuccess, \r\n        getCompaniesFailure,\r\n        getTestsStarted, \r\n        getTestsFailure, \r\n        getTestsSuccess,\r\n        getUsersStarted,\r\n        getUsersFailure,\r\n        getUsersSuccess,\r\n    } from '../actions/appAction';\r\n\r\nexport const getTests = () => {\r\n    return dispatch => {\r\n        dispatch(getTestsStarted());\r\n        fetch('https://test-project-4ab6b.firebaseio.com/tests.json')\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                let tests = [];\r\n                tests = Object.values(response[0]);\r\n                dispatch(getTestsSuccess(tests));\r\n            })\r\n            .catch(err => {\r\n                dispatch(getTestsFailure(err.message));\r\n            });\r\n    };\r\n  };\r\n\r\nexport const getCompanies = () => {\r\n    return dispatch => {\r\n        dispatch(getCompaniesStarted());\r\n  \r\n      fetch('https://test-project-4ab6b.firebaseio.com/companies.json')\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            console.log(response);\r\n                let companies = [];\r\n                companies = Object.values(response[0]);\r\n               dispatch(getCompaniesSuccess(response[0]));\r\n        })\r\n        .catch(err => {\r\n                dispatch(getCompaniesFailure(err.message));\r\n        });\r\n    };\r\n  };\r\n\r\nexport const getUsers = () => {\r\n    return dispatch => {\r\n        dispatch(getUsersStarted());\r\n        fetch('https://test-project-4ab6b.firebaseio.com/user.json')\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            let users = [];\r\n            users = Object.values(response[0])\r\n            dispatch(getUsersSuccess(users));\r\n        })\r\n        .catch(err => {\r\n          dispatch(getUsersFailure(err.message));\r\n        });\r\n    };\r\n  };\r\n"]},"metadata":{},"sourceType":"module"}