{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\src\\\\containers\\\\QuizCreator\\\\QuestionCreater\\\\OneAnswerCreater.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { createAnswers as _createAnswers } from '../../../store/actions/createAnswer';\n\nvar OneAnswerCreater =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(OneAnswerCreater, _React$Component);\n\n  function OneAnswerCreater(props) {\n    var _this;\n\n    _classCallCheck(this, OneAnswerCreater);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(OneAnswerCreater).call(this, props));\n\n    _this.inputChangeHandler = function (e) {\n      console.log(_this.props.isRight);\n      return new Promise(function (resolve, reject) {\n        _this.setState({\n          title: e.target.value\n        });\n\n        resolve(_this.state.title);\n      }).then(function () {\n        return _this.getInputValue();\n      });\n    };\n\n    _this.getInputValue = function () {\n      var answers = _this.props.answers;\n      var id = _this.props.id;\n      var isRight = _this.props.isRight;\n\n      for (var i = 0; i < answers.length; i++) {\n        if (answers[i].id === id) {\n          answers[i].title = _this.state.title;\n          answers[i].isRight = isRight;\n        }\n      }\n\n      _this.props.createAnswers(answers);\n    };\n\n    _this.state = {\n      title: ''\n    };\n    return _this;\n  }\n\n  _createClass(OneAnswerCreater, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.isRight !== this.state.isRight) {\n        this.getInputValue();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"textarea\", {\n        value: this.state.title,\n        onChange: this.inputChangeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return OneAnswerCreater;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  return {\n    answers: state.quiz.answers\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    createAnswers: function createAnswers(answers) {\n      return dispatch(_createAnswers(answers));\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OneAnswerCreater);","map":{"version":3,"sources":["C:\\Users\\Gohar\\Desktop\\testing-project\\testing-project\\src\\containers\\QuizCreator\\QuestionCreater\\OneAnswerCreater.js"],"names":["React","connect","createAnswers","OneAnswerCreater","props","inputChangeHandler","e","console","log","isRight","Promise","resolve","reject","setState","title","target","value","state","then","getInputValue","answers","id","i","length","prevProps","Component","mapStateToProps","quiz","mapDispatchToProps","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,aAAa,IAAbA,cAAR,QAA4B,qCAA5B;;IAEMC,gB;;;;;AACL,4BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAClB,0FAAMA,KAAN;;AADkB,UAKnBC,kBALmB,GAKE,UAACC,CAAD,EAAO;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKJ,KAAL,CAAWK,OAAvB;AACF,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACvC,cAAKC,QAAL,CAAc;AAACC,UAAAA,KAAK,EAAER,CAAC,CAACS,MAAF,CAASC;AAAjB,SAAd;;AACAL,QAAAA,OAAO,CAAC,MAAKM,KAAL,CAAWH,KAAZ,CAAP;AACA,OAHM,EAINI,IAJM,CAID;AAAA,eAAM,MAAKC,aAAL,EAAN;AAAA,OAJC,CAAP;AAMA,KAbkB;;AAAA,UAcnBA,aAdmB,GAcH,YAAM;AACnB,UAAIC,OAAO,GAAG,MAAKhB,KAAL,CAAWgB,OAAzB;AACA,UAAIC,EAAE,GAAG,MAAKjB,KAAL,CAAWiB,EAApB;AACF,UAAIZ,OAAO,GAAG,MAAKL,KAAL,CAAWK,OAAzB;;AACC,WAAI,IAAIa,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,OAAO,CAACG,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACtC,YAAIF,OAAO,CAACE,CAAD,CAAP,CAAWD,EAAX,KAAkBA,EAAtB,EAA0B;AACvBD,UAAAA,OAAO,CAACE,CAAD,CAAP,CAAWR,KAAX,GAAmB,MAAKG,KAAL,CAAWH,KAA9B;AACAM,UAAAA,OAAO,CAACE,CAAD,CAAP,CAAWb,OAAX,GAAqBA,OAArB;AACD;AACF;;AACD,YAAKL,KAAL,CAAWF,aAAX,CAAyBkB,OAAzB;AACD,KAzBiB;;AAElB,UAAKH,KAAL,GAAa;AAACH,MAAAA,KAAK,EAAE;AAAR,KAAb;AAFkB;AAIlB;;;;uCAsBmBU,S,EAAW;AAC5B,UAAIA,SAAS,CAACf,OAAV,KAAsB,KAAKQ,KAAL,CAAWR,OAArC,EAA8C;AAC5C,aAAKU,aAAL;AACD;AAEF;;;6BAEO;AACN,aACE;AAAU,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWH,KAA5B;AAAmC,QAAA,QAAQ,EAAE,KAAKT,kBAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD;;;;EAtC4BL,KAAK,CAACyB,S;;AAyCrC,SAASC,eAAT,CAAyBT,KAAzB,EAAgC;AAC9B,SAAO;AAACG,IAAAA,OAAO,EAAEH,KAAK,CAACU,IAAN,CAAWP;AAArB,GAAP;AACD;;AACD,SAASQ,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACL3B,IAAAA,aAAa,EAAE,uBAACkB,OAAD;AAAA,aAAaS,QAAQ,CAAC3B,cAAa,CAACkB,OAAD,CAAd,CAArB;AAAA;AADV,GAAP;AAGD;;AAED,eAAenB,OAAO,CAACyB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CzB,gBAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {createAnswers} from '../../../store/actions/createAnswer';\r\n\r\nclass OneAnswerCreater extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {title: ''}\r\n\r\n\t}\r\n\tinputChangeHandler = (e) => {\r\n    console.log(this.props.isRight);\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tthis.setState({title: e.target.value});\r\n\t\t\tresolve(this.state.title);\r\n\t\t})\r\n\t\t.then(() => this.getInputValue());\r\n\t\r\n\t}\r\n\tgetInputValue = () => {\r\n    let answers = this.props.answers;\r\n    let id = this.props.id;\r\n\t\tlet isRight = this.props.isRight;\r\n\t  for(let i = 0; i < answers.length; i++) {\r\n\t    if (answers[i].id === id) {\r\n        answers[i].title = this.state.title;\r\n        answers[i].isRight = isRight;  \r\n      } \r\n    }\r\n    this.props.createAnswers(answers);\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.isRight !== this.state.isRight) {\r\n      this.getInputValue();\r\n    }\r\n\r\n  }\r\n\r\n\trender() {\r\n    return ( \r\n      <textarea value={this.state.title} onChange={this.inputChangeHandler}/>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {answers: state.quiz.answers}\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    createAnswers: (answers) => dispatch(createAnswers(answers)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OneAnswerCreater)"]},"metadata":{},"sourceType":"module"}