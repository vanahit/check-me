{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { GET_TESTS_STARTED, GET_TESTS_SUCCESS, GET_TESTS_FAILURE, GET_USERS_STARTED, GET_USERS_SUCCESS, GET_USERS_FAILURE, GET_COMPANIES_STARTED, GET_COMPANIES_SUCCESS, GET_COMPANIES_FAILURE } from '../actions/actionTypes';\nvar initialState = {\n  testsLoaded: false,\n  usersLoaded: false,\n  companiesLoaded: false,\n  tests: [],\n  companies: [],\n  users: [],\n  editingTest: null,\n  testsError: null,\n  usersError: null,\n  companiesError: null,\n  userLogin: false,\n  companyLogin: false\n};\nexport default function appReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_TESTS_STARTED:\n      return _objectSpread({}, state, {\n        testsLoaded: false\n      });\n\n    case GET_TESTS_SUCCESS:\n      return _objectSpread({}, state, {\n        testsLoaded: true,\n        testsError: null,\n        tests: action.payload\n      });\n\n    case GET_TESTS_FAILURE:\n      return _objectSpread({}, state, {\n        testsError: action.payload.error\n      });\n\n    case GET_USERS_STARTED:\n      return _objectSpread({}, state, {\n        usersLoaded: false\n      });\n\n    case GET_USERS_SUCCESS:\n      return _objectSpread({}, state, {\n        usersLoaded: true,\n        usersError: null,\n        users: action.payload\n      });\n\n    case GET_USERS_FAILURE:\n      return _objectSpread({}, state, {\n        usersError: action.payload.error\n      });\n\n    case GET_COMPANIES_STARTED:\n      return _objectSpread({}, state, {\n        companiesLoaded: false\n      });\n\n    case GET_COMPANIES_SUCCESS:\n      return _objectSpread({}, state, {\n        companiesLoaded: true,\n        companiesError: null,\n        companies: action.payload\n      });\n\n    case GET_COMPANIES_FAILURE:\n      return _objectSpread({}, state, {\n        companiesLoaded: false,\n        companiesError: action.payload.error\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:\\Users\\Gohar\\Desktop\\testing-project\\testing-project\\src\\store\\reducers\\appReducer.js"],"names":["GET_TESTS_STARTED","GET_TESTS_SUCCESS","GET_TESTS_FAILURE","GET_USERS_STARTED","GET_USERS_SUCCESS","GET_USERS_FAILURE","GET_COMPANIES_STARTED","GET_COMPANIES_SUCCESS","GET_COMPANIES_FAILURE","initialState","testsLoaded","usersLoaded","companiesLoaded","tests","companies","users","editingTest","testsError","usersError","companiesError","userLogin","companyLogin","appReducer","state","action","type","payload","error"],"mappings":";AACA,SAASA,iBAAT,EACEC,iBADF,EAEEC,iBAFF,EAGEC,iBAHF,EAIEC,iBAJF,EAKEC,iBALF,EAMEC,qBANF,EAOEC,qBAPF,EAQEC,qBARF,QAUO,wBAVP;AAYE,IAAMC,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE,KADM;AAEnBC,EAAAA,WAAW,EAAE,KAFM;AAGnBC,EAAAA,eAAe,EAAE,KAHE;AAInBC,EAAAA,KAAK,EAAE,EAJY;AAKnBC,EAAAA,SAAS,EAAE,EALQ;AAMnBC,EAAAA,KAAK,EAAE,EANY;AAOnBC,EAAAA,WAAW,EAAE,IAPM;AAQnBC,EAAAA,UAAU,EAAE,IARO;AASnBC,EAAAA,UAAU,EAAE,IATO;AAUnBC,EAAAA,cAAc,EAAE,IAVG;AAWnBC,EAAAA,SAAS,EAAE,KAXQ;AAYnBC,EAAAA,YAAY,EAAE;AAZK,CAArB;AAeA,eAAe,SAASC,UAAT,GAAkD;AAAA,MAA9BC,KAA8B,uEAAtBd,YAAsB;AAAA,MAARe,MAAQ;;AAC/D,UAAQA,MAAM,CAACC,IAAf;AAEE,SAAKzB,iBAAL;AACE,+BACKuB,KADL;AAEEb,QAAAA,WAAW,EAAE;AAFf;;AAKF,SAAKT,iBAAL;AACE,+BACKsB,KADL;AAEEb,QAAAA,WAAW,EAAE,IAFf;AAGEO,QAAAA,UAAU,EAAE,IAHd;AAIEJ,QAAAA,KAAK,EAAEW,MAAM,CAACE;AAJhB;;AAOF,SAAKxB,iBAAL;AACE,+BACKqB,KADL;AAEEN,QAAAA,UAAU,EAAEO,MAAM,CAACE,OAAP,CAAeC;AAF7B;;AAKF,SAAKxB,iBAAL;AACE,+BACKoB,KADL;AAEEZ,QAAAA,WAAW,EAAE;AAFf;;AAKF,SAAKP,iBAAL;AACE,+BACKmB,KADL;AAEEZ,QAAAA,WAAW,EAAE,IAFf;AAGEO,QAAAA,UAAU,EAAE,IAHd;AAIEH,QAAAA,KAAK,EAAES,MAAM,CAACE;AAJhB;;AAMF,SAAKrB,iBAAL;AACE,+BACKkB,KADL;AAEEL,QAAAA,UAAU,EAAEM,MAAM,CAACE,OAAP,CAAeC;AAF7B;;AAKF,SAAKrB,qBAAL;AACE,+BACKiB,KADL;AAEEX,QAAAA,eAAe,EAAE;AAFnB;;AAKF,SAAKL,qBAAL;AACE,+BACKgB,KADL;AAEEX,QAAAA,eAAe,EAAE,IAFnB;AAGEO,QAAAA,cAAc,EAAE,IAHlB;AAIEL,QAAAA,SAAS,EAAEU,MAAM,CAACE;AAJpB;;AAOF,SAAKlB,qBAAL;AACE,+BACKe,KADL;AAEEX,QAAAA,eAAe,EAAE,KAFnB;AAGEO,QAAAA,cAAc,EAAEK,MAAM,CAACE,OAAP,CAAeC;AAHjC;;AAKF;AACE,aAAOJ,KAAP;AA9DJ;AAgED","sourcesContent":["\r\nimport { GET_TESTS_STARTED, \r\n  GET_TESTS_SUCCESS, \r\n  GET_TESTS_FAILURE,\r\n  GET_USERS_STARTED, \r\n  GET_USERS_SUCCESS, \r\n  GET_USERS_FAILURE,\r\n  GET_COMPANIES_STARTED, \r\n  GET_COMPANIES_SUCCESS, \r\n  GET_COMPANIES_FAILURE,\r\n\r\n} from '../actions/actionTypes';\r\n  \r\n  const initialState = {\r\n    testsLoaded: false,\r\n    usersLoaded: false,\r\n    companiesLoaded: false,\r\n    tests: [],\r\n    companies: [],\r\n    users: [],\r\n    editingTest: null,\r\n    testsError: null,\r\n    usersError: null,\r\n    companiesError: null,\r\n    userLogin: false,\r\n    companyLogin: false,\r\n  };\r\n  \r\n  export default function appReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n      \r\n      case GET_TESTS_STARTED:\r\n        return {\r\n          ...state,\r\n          testsLoaded: false,\r\n        };\r\n\r\n      case GET_TESTS_SUCCESS:\r\n        return {\r\n          ...state,\r\n          testsLoaded: true,\r\n          testsError: null,\r\n          tests: action.payload\r\n        };\r\n\r\n      case GET_TESTS_FAILURE:\r\n        return {\r\n          ...state,\r\n          testsError: action.payload.error\r\n        };\r\n\r\n      case GET_USERS_STARTED:\r\n        return {\r\n          ...state,\r\n          usersLoaded: false,\r\n        };\r\n\r\n      case GET_USERS_SUCCESS:\r\n        return {\r\n          ...state,\r\n          usersLoaded: true,\r\n          usersError: null,\r\n          users: action.payload\r\n        };\r\n      case GET_USERS_FAILURE:\r\n        return {\r\n          ...state,\r\n          usersError: action.payload.error\r\n        };\r\n\r\n      case GET_COMPANIES_STARTED:\r\n        return {\r\n          ...state,\r\n          companiesLoaded: false\r\n        };\r\n\r\n      case GET_COMPANIES_SUCCESS:\r\n        return {\r\n          ...state,\r\n          companiesLoaded: true,\r\n          companiesError: null,\r\n          companies: action.payload\r\n        };\r\n\r\n      case GET_COMPANIES_FAILURE:\r\n        return {\r\n          ...state,\r\n          companiesLoaded: false,\r\n          companiesError: action.payload.error\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }"]},"metadata":{},"sourceType":"module"}