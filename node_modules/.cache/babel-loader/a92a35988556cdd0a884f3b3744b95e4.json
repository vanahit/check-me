{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\src\\\\containers\\\\Pages\\\\UserProfile.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n\\tbox-sizing: border-box;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport PassedTests from './PassedTests';\nimport UserSvg from './UserSvg';\nimport * as firebase from \"firebase\";\nimport { storage } from '../../firebase/firebase';\nimport styled from 'styled-components';\nvar Main = styled.div(_templateObject());\n\nvar UserProfile =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UserProfile, _Component);\n\n  function UserProfile(props) {\n    var _this;\n\n    _classCallCheck(this, UserProfile);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UserProfile).call(this, props));\n    _this.state = {\n      image: null,\n      url: _this.props.user.image,\n      progress: 0\n    };\n    return _this;\n  }\n\n  _createClass(UserProfile, [{\n    key: \"chooseImg\",\n    value: function chooseImg(e) {\n      if (e.target.files[0]) {\n        var image = e.target.files[0];\n        this.setState({\n          image: image\n        });\n      }\n    }\n  }, {\n    key: \"handleUpload\",\n    value: function handleUpload() {\n      var _this2 = this;\n\n      var image = this.state.image;\n\n      if (image) {\n        var uploadImage = storage.ref(\"images/\".concat(this.props.user.id, \"/\").concat(image.name)).put(image);\n        uploadImage.on('state_changed', function (snapshot) {\n          var progress = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n\n          _this2.setState({\n            progress: progress\n          });\n        }, function (error) {}, function () {\n          storage.ref(\"images/\".concat(_this2.props.user.id)).child(image.name).getDownloadURL().then(function (url) {\n            _this2.setState({\n              url: url\n            });\n          });\n        });\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (prevState.url !== this.state.url) {\n        firebase.database().ref(\"user/\".concat(this.props.user.id)).child('image').set(this.state.url);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Main, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"userContent company-profile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"profile-logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"image-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, this.state.url ? React.createElement(\"img\", {\n        src: this.state.url,\n        alt: \"Upload\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }) : React.createElement(UserSvg, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), this.state.url && React.createElement(\"div\", {\n        className: \"uploadOverlay\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), !this.state.image ? React.createElement(\"button\", {\n        onClick: this.handleUpload.bind(this),\n        className: \"uploadImage\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Upload\") : React.createElement(\"button\", {\n        onClick: this.handleUpload.bind(this),\n        className: \"uploadImage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Upload\")), this.state.progress !== 0 && React.createElement(\"progress\", {\n        value: this.state.progress,\n        className: \"progress red upload-progress\",\n        max: \"100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"file\",\n        name: \"file\",\n        id: \"file\",\n        className: \"upload\",\n        onChange: this.chooseImg.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"infoUser\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"\".concat(this.props.user.firstName, \" \").concat(this.props.user.lastName)), React.createElement(\"div\", {\n        style: {\n          padding: \"20px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\"))), React.createElement(\"div\", {\n        className: \"settings\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Edit\"), \" / \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Profie Settings\")), React.createElement(\"div\", {\n        className: \"labelHeader\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Passed Tests\"), React.createElement(PassedTests, {\n        user: this.props.user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return UserProfile;\n}(Component);\n\nexport { UserProfile as default };","map":{"version":3,"sources":["C:\\Users\\Gohar\\Desktop\\testing-project\\testing-project\\src\\containers\\Pages\\UserProfile.js"],"names":["React","Component","PassedTests","UserSvg","firebase","storage","styled","Main","div","UserProfile","props","state","image","url","user","progress","e","target","files","setState","uploadImage","ref","id","name","put","on","snapshot","Math","round","bytesTransferred","totalBytes","error","child","getDownloadURL","then","prevProps","prevState","database","set","handleUpload","bind","chooseImg","firstName","lastName","padding"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport PassedTests from './PassedTests';\r\nimport UserSvg from './UserSvg';\r\nimport * as firebase from \"firebase\";\r\nimport {storage} from '../../firebase/firebase'\r\nimport styled from 'styled-components';\r\n\r\nconst Main = styled.div`\r\n\tbox-sizing: border-box;\r\n`;\r\n\r\nexport default class UserProfile extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props)\r\n\r\n\t\tthis.state = {\r\n            image: null,\r\n            url: this.props.user.image,\r\n            progress: 0\r\n        }\r\n\t}\r\n\r\n\tchooseImg (e) {\r\n        if(e.target.files[0]){\r\n            const image = e.target.files[0];\r\n            this.setState({image})\r\n        }\r\n    }\r\n\r\n    handleUpload () {\r\n\r\n        const { image } = this.state;\r\n        if(image){\r\n        const uploadImage = storage.ref(`images/${this.props.user.id}/${image.name}`).put(image);\r\n\r\n        \r\n            uploadImage.on('state_changed',\r\n            (snapshot) => {\r\n                const progress = Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100);\r\n                this.setState({progress})\r\n            },\r\n            (error) => {\r\n                \r\n            },\r\n            () => {\r\n                storage.ref(`images/${this.props.user.id}`).child(image.name).getDownloadURL().then(url => {\r\n                    \r\n                    this.setState({url})\r\n                })\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    componentDidUpdate (prevProps, prevState) {\r\n        if(prevState.url !== this.state.url){\r\n            firebase.database().ref(`user/${this.props.user.id}`).child('image').set(this.state.url);\r\n           \r\n            \r\n        }\r\n    }\r\n\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<Main>\r\n\t\t\t\t<div className=\"userContent company-profile\">\r\n\t\t\t\t\t<div className='profile-logo' > \r\n                        <div className=\"image-content\">\r\n                            {this.state.url ? <img src={this.state.url} alt=\"Upload\" /> : <UserSvg /> }\r\n                            {this.state.url && <div className='uploadOverlay'></div>}\r\n                            { !this.state.image ? <button onClick={this.handleUpload.bind(this)} className=\"uploadImage\" disabled={true}>Upload</button> : <button onClick={this.handleUpload.bind(this)} className=\"uploadImage\" >Upload</button>}\r\n                        </div>\r\n                        {this.state.progress !== 0 && <progress value={this.state.progress} className=\"progress red upload-progress\" max=\"100\" ></progress>}\r\n                        <input type=\"file\" name=\"file\" id=\"file\" className=\"upload\" onChange={this.chooseImg.bind(this)}  />\r\n                        \r\n                        \r\n                    </div>\r\n\t\t\t\t\t<div className=\"infoUser\">\r\n\t\t\t\t\t\t<h2>{`${this.props.user.firstName} ${this.props.user.lastName}`}</h2>\r\n\t\t\t\t\t\t<div style={{padding: \"20px\"}}>\r\n\t\t\t\t\t\t\tLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"settings\">\r\n\t\t\t\t\t<span>Edit</span>{` / `}<span>Profie Settings</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"labelHeader\">Passed Tests</div>\r\n\t\t\t\t<PassedTests user={this.props.user} />\r\n\t\t\t</Main>\r\n\t\t);\r\n\t}\r\n\r\n}"]},"metadata":{},"sourceType":"module"}