{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { Route, Switch, withRouter } from \"react-router-dom\";\nimport TestCreator from './components/TestCreator/TestCreator';\nimport TestEditor from './components/TestCreator/TestEditor';\nimport TestPassPanel from './components/TestPassPanel/TestPassPanel';\nimport AboutUs from './components/AboutUs/AboutUs';\nimport Authorization from \"./components/Autorization/Authorization\";\nimport AutorizationUser from \"./components/Autorization/AutorizationUser\";\nimport AutorizationCompany from \"./components/Autorization/AutorizationCompany\";\nimport Company from \"./containers/Pages/Company\";\nimport CompaniesInUser from \"./containers/Pages/CompaniesInUser\";\nimport UsersInCompany from \"./containers/Pages/UsersInCompany\";\nimport AllTests from \"./containers/Pages/AllTests\";\nimport AllCompanies from \"./containers/Pages/AllCompanies\";\nimport AllUsers from \"./containers/Pages/AllUsers\";\nimport User from \"./containers/Pages/User\";\nimport NoMatch from \"./components/NoMatch\";\nimport HomePage from \"./components/HomePage/HomePage\";\nimport { connect } from 'react-redux';\nimport { getCompanies as _getCompanies, getTests as _getTests, getUsers as _getUsers } from './store/thunks/thunks';\nimport * as firebase from \"firebase\";\nimport Layout from \"./Hoc/Layout\";\nimport PopUpLogin from './components/PopUps/PopUpLogin';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      currentLog: null,\n      testsLoaded: _this.props.testsLoaded,\n      companiesLoaded: _this.props.companiesLoaded,\n      testAddClicked: false,\n      user: null\n    };\n\n    _this.testAddClicked = function () {\n      _this.setState({\n        testAddClicked: !_this.state.testAddClicked\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      firebase.auth().onAuthStateChanged(function (currentLog) {\n        if (currentLog) {\n          _this2.setState({\n            currentLog: currentLog\n          });\n\n          firebase.database().ref(\"companies/\".concat(currentLog.uid)).once('value', function (snapshot) {\n            _this2.setState({\n              currentLog: currentLog,\n              user: _objectSpread({}, snapshot.val())\n            });\n          });\n          console.log(\"log in \");\n        } else {\n          console.log('log out');\n\n          _this2.setState({\n            currentLog: null,\n            user: null\n          });\n        }\n      });\n      this.props.getCompanies();\n      this.props.getTests();\n      this.props.getUsers();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (this.props.testsLoaded === true && this.props.testsLoaded !== prevProps.testsLoaded) {\n        this.setState({\n          testsLoaded: this.props.testsLoaded\n        });\n      }\n\n      if (this.props.companiesLoaded === true && this.props.companiesLoaded !== prevProps.companiesLoaded) {\n        this.setState({\n          companiesLoaded: this.props.companiesLoaded\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.setState({\n        testAddClicked: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, this.state.testAddClicked && React.createElement(PopUpLogin, {\n        testAddClicked: this.testAddClicked,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(Layout, {\n        currentLog: this.state.currentLog,\n        user: this.state.user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: '/',\n        component: function component() {\n          return React.createElement(HomePage, {\n            testAddClicked: _this3.testAddClicked,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/registration/user\",\n        component: AutorizationUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/registration/company\",\n        component: AutorizationCompany,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/Users/\",\n        component: AllUsers,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/companies/\",\n        component: AllCompanies,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/CompaniesInUser/\",\n        component: CompaniesInUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/UsersInCompany/\",\n        component: UsersInCompany,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/User/:Text\",\n        component: User,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/:company/add-test\",\n        component: function component() {\n          return React.createElement(TestCreator, {\n            user: _this3.state.user,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/:company/edit-test\",\n        component: function component() {\n          return React.createElement(TestEditor, {\n            editingTest: _this3.props.editingTest,\n            user: _this3.state.user,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/:company/:text\",\n        component: function component() {\n          return React.createElement(Company, {\n            currentCompany: _this3.state.currentLog,\n            user: _this3.state.user,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/authorization/\",\n        component: function component() {\n          return React.createElement(Authorization, {\n            currentCompany: _this3.state.currentLog,\n            user: _this3.state.user,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/aboutUs/\",\n        component: AboutUs,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/testPassPanel/\",\n        component: TestPassPanel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/tests/\",\n        component: function component() {\n          return React.createElement(AllTests, {\n            testAddClicked: _this3.testAddClicked,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(Route, {\n        component: NoMatch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    testsLoaded: state.appReducer.testsLoaded,\n    companiesLoaded: state.appReducer.companiesLoaded,\n    editingTest: state.appReducer.editingTest\n  };\n}\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getCompanies: function getCompanies(companies) {\n      return dispatch(_getCompanies(companies));\n    },\n    getTests: function getTests(tests) {\n      return dispatch(_getTests(tests));\n    },\n    getUsers: function getUsers(users) {\n      return dispatch(_getUsers(users));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));","map":{"version":3,"sources":["C:\\Users\\Gohar\\Desktop\\testing-project\\testing-project\\src\\App.js"],"names":["React","Component","Route","Switch","withRouter","TestCreator","TestEditor","TestPassPanel","AboutUs","Authorization","AutorizationUser","AutorizationCompany","Company","CompaniesInUser","UsersInCompany","AllTests","AllCompanies","AllUsers","User","NoMatch","HomePage","connect","getCompanies","getTests","getUsers","firebase","Layout","PopUpLogin","App","state","currentLog","testsLoaded","props","companiesLoaded","testAddClicked","user","setState","auth","onAuthStateChanged","database","ref","uid","once","snapshot","val","console","log","prevProps","prevState","editingTest","mapStateToProps","appReducer","mapDispatchToProps","dispatch","companies","tests","users"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport './App.css';\r\nimport {Route, Switch, withRouter} from \"react-router-dom\";\r\nimport TestCreator from './components/TestCreator/TestCreator';\r\nimport TestEditor from './components/TestCreator/TestEditor';\r\nimport TestPassPanel from './components/TestPassPanel/TestPassPanel';\r\nimport AboutUs from './components/AboutUs/AboutUs';\r\nimport Authorization from \"./components/Autorization/Authorization\";\r\nimport AutorizationUser from \"./components/Autorization/AutorizationUser\";\r\nimport AutorizationCompany from \"./components/Autorization/AutorizationCompany\";\r\nimport Company from \"./containers/Pages/Company\";\r\nimport CompaniesInUser from \"./containers/Pages/CompaniesInUser\";\r\nimport UsersInCompany from \"./containers/Pages/UsersInCompany\";\r\nimport AllTests from \"./containers/Pages/AllTests\";\r\nimport AllCompanies from \"./containers/Pages/AllCompanies\";\r\nimport AllUsers from \"./containers/Pages/AllUsers\";\r\nimport User from \"./containers/Pages/User\";\r\nimport NoMatch from \"./components/NoMatch\";\r\nimport HomePage from \"./components/HomePage/HomePage\";\r\nimport {connect} from 'react-redux';\r\nimport {getCompanies, getTests, getUsers} from './store/thunks/thunks';\r\nimport * as firebase from \"firebase\";\r\nimport Layout from \"./Hoc/Layout\";\r\nimport PopUpLogin from './components/PopUps/PopUpLogin';\r\n\r\nclass App extends Component {\r\n\r\n\r\n    state = {\r\n        currentLog: null,\r\n        testsLoaded: this.props.testsLoaded,\r\n        companiesLoaded: this.props.companiesLoaded,\r\n        testAddClicked: false,\r\n        user: null\r\n    };\r\n\r\n    componentDidMount() {\r\n\r\n    firebase.auth().onAuthStateChanged((currentLog) => {\r\n            if (currentLog) {\r\n                this.setState({currentLog});\r\n                firebase.database().ref(`companies/${currentLog.uid}`).once('value',(snapshot)=>{\r\n                    this.setState({currentLog, user: {...snapshot.val()} })\r\n                    \r\n                });\r\n                console.log(`log in `);\r\n            } else {\r\n                console.log('log out');\r\n                this.setState({currentLog: null, user: null})\r\n            }\r\n        });\r\n        this.props.getCompanies();\r\n        this.props.getTests();\r\n        this.props.getUsers();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props.testsLoaded === true && this.props.testsLoaded !== prevProps.testsLoaded) {\r\n\r\n            this.setState({testsLoaded: this.props.testsLoaded})\r\n        }\r\n        if (this.props.companiesLoaded === true && this.props.companiesLoaded !== prevProps.companiesLoaded) {\r\n\r\n            this.setState({companiesLoaded: this.props.companiesLoaded})\r\n        }\r\n    }\r\n\r\n   testAddClicked = () => {\r\n        this.setState({testAddClicked: !this.state.testAddClicked});\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.setState({testAddClicked: false});\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.testAddClicked && <PopUpLogin testAddClicked={this.testAddClicked}/>} \r\n                <Layout currentLog={this.state.currentLog} user={this.state.user}>\r\n                    <Switch className=\"App\">\r\n                        <Route exact path={'/'} component={() => <HomePage  testAddClicked={this.testAddClicked} />}/>\r\n                        <Route path='/registration/user'  component={AutorizationUser}/>\r\n                        <Route path='/registration/company'  component={AutorizationCompany}/>\r\n                        <Route path=\"/Users/\" component={AllUsers}/>\r\n                        <Route path=\"/companies/\" component={AllCompanies}/>\r\n                        <Route path=\"/CompaniesInUser/\" component={CompaniesInUser}/>\r\n                        <Route path=\"/UsersInCompany/\" component={UsersInCompany}/>\r\n                        <Route path=\"/User/:Text\" component={User}/>\r\n                        <Route path=\"/:company/add-test\" component={() => <TestCreator user={this.state.user} />}/>\r\n                        <Route path=\"/:company/edit-test\" component={() => \r\n                            <TestEditor editingTest={this.props.editingTest} user={this.state.user} />}\r\n                        />\r\n                        <Route path=\"/:company/:text\" component={() => <Company currentCompany={this.state.currentLog} user={this.state.user} />}/>\r\n                        <Route\r\n                            path='/authorization/'\r\n                            component={() => <Authorization currentCompany={this.state.currentLog} user={this.state.user}/>}\r\n                        />\r\n                        <Route path=\"/aboutUs/\" component={AboutUs}/>\r\n                        <Route path=\"/testPassPanel/\" component={TestPassPanel}/>\r\n                        <Route path=\"/tests/\" component={ () => <AllTests  testAddClicked={this.testAddClicked} />}/>\r\n                        <Route component={NoMatch}/>\r\n                    </Switch>\r\n                </Layout>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        testsLoaded: state.appReducer.testsLoaded,\r\n        companiesLoaded: state.appReducer.companiesLoaded,\r\n        editingTest: state.appReducer.editingTest,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getCompanies: companies => dispatch(getCompanies(companies)),\r\n        getTests: tests => dispatch(getTests(tests)),\r\n        getUsers: users => dispatch(getUsers(users)),\r\n\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\r\n"]},"metadata":{},"sourceType":"module"}