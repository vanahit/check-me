{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\src\\\\components\\\\HomePage\\\\HomePage.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mainBackground from '../../images/home-page-bg.jpg';\nimport BecomeCompany from './components/BecomeCompany';\nimport BecomeUser from './components/BecomeUser';\nimport TestCreateVideo from './components/TestCreateVideo';\nimport TestPassVideo from './components/TestPassVideo';\nimport TestSlider from './components/TestsSlider';\nimport * as all from './styleComponents';\n\nvar HomePage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(HomePage, _Component);\n\n  function HomePage(props) {\n    var _this;\n\n    _classCallCheck(this, HomePage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(HomePage).call(this, props));\n    _this.state = {\n      testsLoaded: _this.props.testsLoaded\n    };\n    return _this;\n  }\n\n  _createClass(HomePage, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (this.props.testsLoaded === true && this.props.testsLoaded !== prevProps.testsLoaded) {\n        this.setState({\n          testsLoaded: this.props.testsLoaded\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.state.testsLoaded);\n      return React.createElement(Main, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(GetStartedDiv, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(FlexRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(FlexChild, {\n        width: '1018px',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(GetsStartedText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"DigiLearn is an all-in-one platform that makes it easy to create online tests, launch programming companies, build landing pages, and design the perfect website.\")), React.createElement(FlexChild, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(Button, {\n        widht: '155px',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"GET STARTED\"))))), React.createElement(FlexRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"YOUR FIRST DESTINATION\"), React.createElement(BecomeCompany, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(BecomeUser, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      })), React.createElement(FlexRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"FOR OUT USERS\"), React.createElement(FlexChild, {\n        width: '48%',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Description, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Title, {\n        size: '20px',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"For our Companies\"), \"Our main goal is cooperation, which we founded between our users and companies .We give opportunity to our users to make achievements by completing tests which created by our companies . It is important for us to create reliable collaboration. The best achievement will be for our users , to receive invitation from leading companies. For our companies the best achievement will be invitation the best users to their company.\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"DESTINATION WAS ACHIEVES.\"))), React.createElement(FlexChild, {\n        width: '48%',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(TestCreateVideo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }))), React.createElement(FlexRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"FOR OUT USERS\"), React.createElement(FlexChild, {\n        width: '48%',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Description, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Title, {\n        size: '20px',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"For our Companies\"), \"Our main goal is cooperation, which we founded between our users and companies .We give opportunity to our users to make achievements by completing tests which created by our companies . It is important for us to create reliable collaboration. The best achievement will be for our users , to receive invitation from leading companies. For our companies the best achievement will be invitation the best users to their company.\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"DESTINATION WAS ACHIEVES.\"))), React.createElement(FlexChild, {\n        width: '48%',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(TestCreateVideo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }))), React.createElement(FlexRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"MOST POPULAR TESTS\")), React.createElement(FlexRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, this.state.testsLoaded ? React.createElement(TestSlider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }) : 'loading'));\n    }\n  }]);\n\n  return HomePage;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    tests: state.appReducer.test,\n    testsLoaded: state.appReducer.testsLoaded\n  };\n}\n\nexport default connect(mapStateToProps, null)(HomePage);\n{\n  /* <FlexChild width={'48%'}>\r\n  <TestPassVideo />\r\n  </FlexChild>  \r\n  <FlexChild width={'48%'}>\r\n  <Description>\r\n      Our main goal is cooperation, which we founded between our users and companies .We give opportunity to our \r\n      users to make achievements by completing tests which created by our companies . It is important for us to \r\n      create reliable collaboration. The best achievement will be for our users , to receive invitation from leading companies. \r\n      For our companies the best achievement will be invitation the best users to their company.<br /> \r\n      <b>DESTINATION WAS ACHIEVES.</b>\r\n  </Description>\r\n  </FlexChild>    */\n}","map":{"version":3,"sources":["C:\\Users\\Gohar\\Desktop\\testing-project\\testing-project\\src\\components\\HomePage\\HomePage.js"],"names":["React","Component","connect","mainBackground","BecomeCompany","BecomeUser","TestCreateVideo","TestPassVideo","TestSlider","all","HomePage","props","state","testsLoaded","prevProps","prevState","setState","console","log","mapStateToProps","tests","appReducer","test"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport mainBackground from '../../images/home-page-bg.jpg';\r\nimport BecomeCompany from './components/BecomeCompany';\r\nimport BecomeUser from './components/BecomeUser';\r\nimport TestCreateVideo from './components/TestCreateVideo';\r\nimport TestPassVideo from './components/TestPassVideo';\r\nimport TestSlider from './components/TestsSlider';\r\nimport * as all from './styleComponents';\r\n\r\n\r\nclass HomePage extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n        this.state ={testsLoaded: this.props.testsLoaded};\r\n        \r\n    }\r\n \r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props.testsLoaded === true && this.props.testsLoaded !== prevProps.testsLoaded) {\r\n            this.setState({testsLoaded: this.props.testsLoaded});\r\n        }\r\n     }\r\n\r\n\trender() {\r\n        console.log(this.state.testsLoaded)\r\n       \treturn (\r\n\t\t\t<Main>\r\n                <Header>\r\n                    <GetStartedDiv>\r\n                        <FlexRow>\r\n                            <FlexChild width={'1018px'}>\r\n                                <GetsStartedText>\r\n                                    DigiLearn is an all-in-one platform that makes it easy to create online tests, launch programming \r\n                                    companies, build landing pages, and design the perfect website.\r\n                                </GetsStartedText>\r\n                            </FlexChild>\r\n                            <FlexChild>\r\n                                <Button widht={'155px'}>\r\n                                    GET STARTED\r\n                                </Button>\r\n                            </FlexChild>\r\n                        </FlexRow>\r\n                    </GetStartedDiv>\r\n                </Header>\r\n                <FlexRow>\r\n                    <Title>\r\n                         YOUR FIRST DESTINATION \r\n                    </Title>\r\n                    <BecomeCompany />\r\n                    <BecomeUser />\r\n                </FlexRow>\r\n                <FlexRow>\r\n                    <Title>\r\n                        FOR OUT USERS\r\n                    </Title>\r\n                    <FlexChild width={'48%'}>\r\n                        <Description>\r\n                            <Title size={'20px'} >\r\n                                For our Companies\r\n                            </Title>                       \r\n                            Our main goal is cooperation, which we founded between our users and companies .We give opportunity to our \r\n                            users to make achievements by completing tests which created by our companies . It is important for us to \r\n                            create reliable collaboration. The best achievement will be for our users , to receive invitation from leading companies. \r\n                            For our companies the best achievement will be invitation the best users to their company.<br /> \r\n                            <b>DESTINATION WAS ACHIEVES.</b>\r\n                        </Description>\r\n                    </FlexChild>\r\n                    <FlexChild width={'48%'}>\r\n                        <TestCreateVideo />\r\n                    </FlexChild>\r\n                </FlexRow>\r\n                <FlexRow>\r\n                    <Title>\r\n                        FOR OUT USERS\r\n                    </Title>\r\n                    <FlexChild width={'48%'}>\r\n                        <Description>\r\n                            <Title size={'20px'} >\r\n                                For our Companies\r\n                            </Title>                       \r\n                            Our main goal is cooperation, which we founded between our users and companies .We give opportunity to our \r\n                            users to make achievements by completing tests which created by our companies . It is important for us to \r\n                            create reliable collaboration. The best achievement will be for our users , to receive invitation from leading companies. \r\n                            For our companies the best achievement will be invitation the best users to their company.<br /> \r\n                            <b>DESTINATION WAS ACHIEVES.</b>\r\n                        </Description>\r\n                    </FlexChild>\r\n                    <FlexChild width={'48%'}>\r\n                        <TestCreateVideo />\r\n                    </FlexChild>\r\n                </FlexRow>  \r\n                <FlexRow>\r\n                    <Title>\r\n                        MOST POPULAR TESTS\r\n                    </Title>\r\n                </FlexRow>\r\n                <FlexRow>\r\n                    {\r\n                        this.state.testsLoaded \r\n                        ? <TestSlider />\r\n                        : 'loading'\r\n                    }\r\n                </FlexRow>\r\n                   \r\n                      \r\n            \r\n            </Main>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n\treturn {\r\n        tests: state.appReducer.test,\r\n        testsLoaded: state.appReducer.testsLoaded\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(HomePage)\r\n\r\n\r\n{/* <FlexChild width={'48%'}>\r\n<TestPassVideo />\r\n</FlexChild>  \r\n<FlexChild width={'48%'}>\r\n <Description>\r\n     Our main goal is cooperation, which we founded between our users and companies .We give opportunity to our \r\n     users to make achievements by completing tests which created by our companies . It is important for us to \r\n     create reliable collaboration. The best achievement will be for our users , to receive invitation from leading companies. \r\n     For our companies the best achievement will be invitation the best users to their company.<br /> \r\n     <b>DESTINATION WAS ACHIEVES.</b>\r\n </Description>\r\n</FlexChild>    */}"]},"metadata":{},"sourceType":"module"}