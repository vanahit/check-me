{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { GET_TESTS_STARTED, GET_TESTS_SUCCESS, GET_TESTS_FAILURE, GET_USERS_STARTED, GET_USERS_SUCCESS, GET_USERS_FAILURE, GET_COMPANIES_STARTED, GET_COMPANIES_SUCCESS, GET_COMPANIES_FAILURE } from \"./actionTypes\";\nimport axios from 'axios';\nexport var getTests = function getTests() {\n  return function (dispatch) {\n    dispatch(getTestsStarted());\n    axios.get('https://test-project-4ab6b.firebaseio.com/tests.json').then(function (res) {\n      setTimeout(function () {\n        dispatch(getTestsSuccess(res.data));\n      }, 0);\n    }).catch(function (err) {\n      dispatch(getTestsFailure(err.message));\n    });\n  };\n};\n\nvar getTestsSuccess = function getTestsSuccess(tests) {\n  return {\n    type: GET_TESTS_SUCCESS,\n    payload: _objectSpread({}, tests)\n  };\n};\n\nvar getTestsStarted = function getTestsStarted() {\n  return {\n    type: GET_TESTS_STARTED\n  };\n};\n\nvar getTestsFailure = function getTestsFailure(error) {\n  return {\n    type: GET_TESTS_FAILURE,\n    payload: {\n      error: error\n    }\n  };\n};\n\nexport var getUsers = function getUsers() {\n  return function (dispatch) {\n    dispatch(getUsersStarted());\n    axios.get('https://test-project-4ab6b.firebaseio.com/companies.json').then(function (res) {\n      setTimeout(function () {\n        dispatch(getUsersSuccess(res.data));\n      }, 0);\n    }).catch(function (err) {\n      dispatch(getUsersFailure(err.message));\n    });\n  };\n};\n\nvar getUsersSuccess = function getUsersSuccess(users) {\n  return {\n    type: GET_USERS_SUCCESS,\n    payload: _objectSpread({}, users)\n  };\n};\n\nvar getUsersStarted = function getUsersStarted() {\n  return {\n    type: GET_USERS_STARTED\n  };\n};\n\nvar getUsersFailure = function getUsersFailure(error) {\n  return {\n    type: GET_USERS_FAILURE,\n    payload: {\n      error: error\n    }\n  };\n};\n\nexport var getCompanies = function getCompanies() {\n  return function (dispatch) {\n    dispatch(getCompaniesStarted());\n    axios.get('https://test-project-4ab6b.firebaseio.com/companies.json').then(function (res) {\n      setTimeout(function () {\n        dispatch(getCompaniesSuccess(res.data));\n      }, 1);\n    }).catch(function (err) {\n      dispatch(getCompaniesFailure(err.message));\n    });\n  };\n};\n\nvar getCompaniesSuccess = function getCompaniesSuccess(companies) {\n  return {\n    type: GET_COMPANIES_SUCCESS,\n    payload: _objectSpread({}, companies)\n  };\n};\n\nvar getCompaniesStarted = function getCompaniesStarted() {\n  return {\n    type: GET_COMPANIES_STARTED\n  };\n};\n\nvar getCompaniesFailure = function getCompaniesFailure(error) {\n  return {\n    type: GET_COMPANIES_FAILURE,\n    payload: {\n      error: error\n    }\n  };\n};","map":{"version":3,"sources":["C:\\Users\\Gohar\\Desktop\\testing-project\\testing-project\\src\\store\\actions\\appAction.js"],"names":["GET_TESTS_STARTED","GET_TESTS_SUCCESS","GET_TESTS_FAILURE","GET_USERS_STARTED","GET_USERS_SUCCESS","GET_USERS_FAILURE","GET_COMPANIES_STARTED","GET_COMPANIES_SUCCESS","GET_COMPANIES_FAILURE","axios","getTests","dispatch","getTestsStarted","get","then","res","setTimeout","getTestsSuccess","data","catch","err","getTestsFailure","message","tests","type","payload","error","getUsers","getUsersStarted","getUsersSuccess","getUsersFailure","users","getCompanies","getCompaniesStarted","getCompaniesSuccess","getCompaniesFailure","companies"],"mappings":"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","sourcesContent":["import { GET_TESTS_STARTED, \r\n        GET_TESTS_SUCCESS, \r\n        GET_TESTS_FAILURE,\r\n        GET_USERS_STARTED, \r\n        GET_USERS_SUCCESS, \r\n        GET_USERS_FAILURE,\r\n        GET_COMPANIES_STARTED, \r\n        GET_COMPANIES_SUCCESS, \r\n        GET_COMPANIES_FAILURE,\r\n\r\n      } from \"./actionTypes\";\r\nimport axios from 'axios';\r\n\r\nexport const getTests = () => {\r\n    return dispatch => {\r\n      dispatch(getTestsStarted());\r\n  \r\n      axios\r\n        .get('https://test-project-4ab6b.firebaseio.com/tests.json')\r\n        .then(res => {\r\n          setTimeout(() => {\r\n            dispatch(getTestsSuccess(res.data));\r\n          }, 0);\r\n        })\r\n        .catch(err => {\r\n          dispatch(getTestsFailure(err.message));\r\n        });\r\n    };\r\n  };\r\n\r\n  const getTestsSuccess = tests => ({\r\n    type: GET_TESTS_SUCCESS,\r\n    payload: {\r\n      ...tests\r\n    }\r\n  });\r\n  \r\n  const getTestsStarted = () => ({\r\n    type: GET_TESTS_STARTED\r\n  });\r\n  \r\n  const getTestsFailure = error => ({\r\n    type: GET_TESTS_FAILURE,\r\n    payload: {\r\n      error\r\n    }\r\n  })\r\n\r\n  export const getUsers = () => {\r\n    return dispatch => {\r\n      dispatch(getUsersStarted());\r\n  \r\n      axios\r\n        .get('https://test-project-4ab6b.firebaseio.com/companies.json')\r\n        .then(res => {\r\n          setTimeout(() => {\r\n            dispatch(getUsersSuccess(res.data));\r\n          }, 0);\r\n        })\r\n        .catch(err => {\r\n          dispatch(getUsersFailure(err.message));\r\n        });\r\n    };\r\n  };\r\n\r\n  const getUsersSuccess = users => ({\r\n    type: GET_USERS_SUCCESS,\r\n    payload: {\r\n      ...users\r\n    }\r\n  });\r\n  \r\n  const getUsersStarted = () => ({\r\n    type: GET_USERS_STARTED\r\n  });\r\n  \r\n  const getUsersFailure = error => ({\r\n    type: GET_USERS_FAILURE,\r\n    payload: {\r\n      error\r\n    }\r\n  })\r\n\r\n  export const getCompanies = () => {\r\n    return dispatch => {\r\n      dispatch(getCompaniesStarted());\r\n  \r\n      axios\r\n        .get('https://test-project-4ab6b.firebaseio.com/companies.json')\r\n        .then(res => {\r\n          setTimeout(() => {\r\n            dispatch(getCompaniesSuccess(res.data));\r\n          }, 1);\r\n        })\r\n        .catch(err => {\r\n          dispatch(getCompaniesFailure(err.message));\r\n        });\r\n    };\r\n  };\r\n\r\n  const getCompaniesSuccess = companies => ({\r\n    type: GET_COMPANIES_SUCCESS,\r\n    payload: {\r\n      ...companies\r\n    }\r\n  });\r\n  \r\n  const getCompaniesStarted = () => ({\r\n    type: GET_COMPANIES_STARTED\r\n  });\r\n  \r\n  const getCompaniesFailure = error => ({\r\n    type: GET_COMPANIES_FAILURE,\r\n    payload: {\r\n      error\r\n    }\r\n  })"]},"metadata":{},"sourceType":"module"}