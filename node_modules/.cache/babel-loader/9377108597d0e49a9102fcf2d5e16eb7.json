{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { Route, Switch, withRouter } from \"react-router-dom\";\nimport TestCreator from './components/TestCreator/TestCreator';\nimport TestPassPanel from './components/TestPassPanel/TestPassPanel';\nimport AboutUs from './components/AboutUs/AboutUs';\nimport Authorization from \"./components/Autorization/Authorization\";\nimport AutorizationUser from \"./components/Autorization/AutorizationUser\";\nimport AutorizationCompany from \"./components/Autorization/AutorizationCompany\";\nimport Company from \"./containers/Pages/Company\";\nimport CompaniesInUser from \"./containers/Pages/CompaniesInUser\";\nimport UsersInCompany from \"./containers/Pages/UsersInCompany\";\nimport AllTests from \"./containers/Pages/AllTests\";\nimport AllCompanies from \"./containers/Pages/AllCompanies\";\nimport AllUsers from \"./containers/Pages/AllUsers\";\nimport User from \"./containers/Pages/User\";\nimport NoMatch from \"./components/NoMatch\";\nimport HomePage from \"./components/HomePage/HomePage\";\nimport { connect } from 'react-redux';\nimport { getTests as _getTests, getUsers as _getUsers, getCompanies as _getCompanies } from './store/thunks/thunks';\nimport * as firebase from \"firebase\";\nimport CompanyPage from \"./components/Autorization/CompanyPage\";\nimport Layout from \"./Hoc/Layout\";\nimport PopUpLogin from '../PopUps/PopUpLogin';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      currentLog: null,\n      testsLoaded: _this.props.testsLoaded,\n      testAddClicked: false\n    };\n\n    _this.testAddClicked = function () {\n      _this.setState({\n        testAddClicked: true\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      firebase.auth().onAuthStateChanged(function (currentLog) {\n        if (currentLog) {\n          _this2.setState({\n            currentLog: currentLog\n          });\n\n          console.log(\"log in \");\n        } else {\n          console.log('log out');\n\n          _this2.setState({\n            currentLog: null\n          });\n        }\n      });\n      this.props.getCompanies();\n      this.props.getTests();\n      this.props.getUsers();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (this.props.testsLoaded === true && this.props.testsLoaded !== prevProps.testsLoaded) {\n        this.setState({\n          testsLoaded: this.props.testsLoaded\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, this.state.testAddClicked && React.createElement(PopUpLogin, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(Layout, {\n        currentLog: this.state.currentLog,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: '/',\n        component: function component() {\n          return React.createElement(HomePage, {\n            testAddClicked: _this3.testAddClicked,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/registration/user\",\n        component: AutorizationUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/registration/company\",\n        component: AutorizationCompany,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/Users/\",\n        component: AllUsers,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/Companies/\",\n        component: AllCompanies,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/CompaniesInUser/\",\n        component: CompaniesInUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/UsersInCompany/\",\n        component: UsersInCompany,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/User/:Text\",\n        component: User,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/Company/:Text\",\n        component: Company,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: '/companyPage',\n        component: function component() {\n          return React.createElement(CompanyPage, {\n            currentCompany: _this3.state.currentLog,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/authorization/\",\n        component: function component() {\n          return React.createElement(Authorization, {\n            currentCompany: _this3.state.currentLog,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/aboutUs/\",\n        component: AboutUs,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/testCreator/\",\n        component: TestCreator,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/testPassPanel/\",\n        component: TestPassPanel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/tests/\",\n        component: AllTests,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), React.createElement(Route, {\n        component: NoMatch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    testsLoaded: state.appReducer.testsLoaded\n  };\n}\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getCompanies: function getCompanies(companies) {\n      return dispatch(_getCompanies(companies));\n    },\n    getTests: function getTests(tests) {\n      return dispatch(_getTests(tests));\n    },\n    getUsers: function getUsers(users) {\n      return dispatch(_getUsers(users));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));","map":{"version":3,"sources":["C:\\Users\\Gohar\\Desktop\\testing-project\\testing-project\\src\\App.js"],"names":["React","Component","Route","Switch","withRouter","TestCreator","TestPassPanel","AboutUs","Authorization","AutorizationUser","AutorizationCompany","Company","CompaniesInUser","UsersInCompany","AllTests","AllCompanies","AllUsers","User","NoMatch","HomePage","connect","getTests","getUsers","getCompanies","firebase","CompanyPage","Layout","PopUpLogin","App","state","currentLog","testsLoaded","props","testAddClicked","setState","auth","onAuthStateChanged","console","log","prevProps","prevState","mapStateToProps","appReducer","mapDispatchToProps","dispatch","companies","tests","users"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport './App.css';\r\nimport {Route, Switch, withRouter} from \"react-router-dom\";\r\nimport TestCreator from './components/TestCreator/TestCreator';\r\nimport TestPassPanel from './components/TestPassPanel/TestPassPanel';\r\nimport AboutUs from './components/AboutUs/AboutUs';\r\nimport Authorization from \"./components/Autorization/Authorization\";\r\nimport AutorizationUser from \"./components/Autorization/AutorizationUser\";\r\nimport AutorizationCompany from \"./components/Autorization/AutorizationCompany\";\r\nimport Company from \"./containers/Pages/Company\";\r\nimport CompaniesInUser from \"./containers/Pages/CompaniesInUser\";\r\nimport UsersInCompany from \"./containers/Pages/UsersInCompany\";\r\nimport AllTests from \"./containers/Pages/AllTests\";\r\nimport AllCompanies from \"./containers/Pages/AllCompanies\";\r\nimport AllUsers from \"./containers/Pages/AllUsers\";\r\nimport User from \"./containers/Pages/User\";\r\nimport NoMatch from \"./components/NoMatch\";\r\nimport HomePage from \"./components/HomePage/HomePage\";\r\nimport { connect } from 'react-redux';\r\nimport { getTests, getUsers, getCompanies } from './store/thunks/thunks';\r\nimport * as firebase from \"firebase\";\r\nimport CompanyPage from \"./components/Autorization/CompanyPage\";\r\nimport Layout from \"./Hoc/Layout\";\r\nimport PopUpLogin from '../PopUps/PopUpLogin';\r\n\r\n\r\nclass App extends Component {\r\n\r\n\r\n    state = {\r\n        currentLog: null,\r\n        testsLoaded: this.props.testsLoaded,\r\n        testAddClicked: false,\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n\r\n        firebase.auth().onAuthStateChanged((currentLog) => {\r\n            if (currentLog) {\r\n                this.setState({currentLog});\r\n                console.log(`log in `);\r\n            } else {\r\n                console.log('log out');\r\n                this.setState({currentLog: null})\r\n            }\r\n        });\r\n\r\n        this.props.getCompanies();\r\n        this.props.getTests();\r\n        this.props.getUsers();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props.testsLoaded === true && this.props.testsLoaded !== prevProps.testsLoaded) {\r\n            \r\n            this.setState({testsLoaded: this.props.testsLoaded})\r\n        }\r\n    }\r\n\r\n    testAddClicked = () => {\r\n        this.setState({testAddClicked: true})\r\n    }\r\n \r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.testAddClicked && <PopUpLogin/>} \r\n                <Layout currentLog={this.state.currentLog}>\r\n                    <Switch className=\"App\">\r\n                        <Route exact path={'/'} component={() => <HomePage  testAddClicked={this.testAddClicked} />}/>\r\n                        <Route path='/registration/user'  component={AutorizationUser}/>\r\n                        <Route path='/registration/company'  component={AutorizationCompany}/>\r\n\r\n                        <Route path=\"/Users/\" component={AllUsers}/>\r\n                        <Route path=\"/Companies/\" component={AllCompanies}/>\r\n\r\n                        <Route path=\"/CompaniesInUser/\" component={CompaniesInUser}/>\r\n                        <Route path=\"/UsersInCompany/\" component={UsersInCompany}/>\r\n\r\n                        <Route path=\"/User/:Text\" component={User}/>\r\n                        <Route path=\"/Company/:Text\" component={Company}/>\r\n                        <Route path={'/companyPage'}\r\n                               component={() => <CompanyPage currentCompany={this.state.currentLog}/>}/>\r\n                        <Route\r\n                            path='/authorization/'\r\n                            component={() => <Authorization currentCompany={this.state.currentLog}\r\n                            />}\r\n                        />\r\n                        <Route path=\"/aboutUs/\"  component={AboutUs}/>\r\n                        <Route path=\"/testCreator/\"  component={TestCreator}/>\r\n                        <Route path=\"/testPassPanel/\" component={TestPassPanel}/>\r\n                        <Route path=\"/tests/\" component={AllTests}/>\r\n                        <Route component={NoMatch}/>\r\n                    </Switch>\r\n                </Layout>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n\treturn {\r\n        testsLoaded: state.appReducer.testsLoaded\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getCompanies: companies => dispatch(getCompanies(companies)),\r\n        getTests: tests =>  dispatch(getTests(tests)),\r\n        getUsers: users =>  dispatch(getUsers(users)),\r\n        \r\n    };\r\n  };\r\n  \r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\r\n"]},"metadata":{},"sourceType":"module"}