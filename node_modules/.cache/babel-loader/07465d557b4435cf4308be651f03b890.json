{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { CHANGE_TOTAL_SCORE, SUBMITTED_TRUE, ADD_QUESTION, DELETE_QUESTION, ANSWER_VALID, ADD_QUESTION_SUBMITTED, QUESTION_VALID, ANSWER_NOT_VALID, QUESTION_NOT_VALID, TEST_NOT_VALID, TEST_VALID, UPDATE_QUESTIONS, INITIAL_STATE } from '../actions/actionTypes';\nvar initialState = {\n  questions: [],\n  totalScore: 0\n};\nexport default function testCreator() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case CHANGE_TOTAL_SCORE:\n      return _objectSpread({}, state, {\n        totalScore: state.totalScore + action.score\n      });\n\n    case SUBMITTED_TRUE:\n      return _objectSpread({}, state, {\n        submitted: true\n      });\n\n    case ANSWER_VALID:\n      return _objectSpread({}, state, {\n        isAnswerValid: true\n      });\n\n    case ANSWER_NOT_VALID:\n      return _objectSpread({}, state, {\n        isAnswerValid: false\n      });\n\n    case QUESTION_VALID:\n      return _objectSpread({}, state, {\n        isQuestionValid: true\n      });\n\n    case QUESTION_NOT_VALID:\n      return _objectSpread({}, state, {\n        isQuestionValid: false\n      });\n\n    case ADD_QUESTION:\n      var oneQuestion = {\n        id: Date.now(),\n        answers: [{\n          id: Date.now(),\n          title: ''\n        }, {\n          id: Date.now() + 1,\n          title: ''\n        }],\n        isRight: 0,\n        questionTitle: '',\n        score: ''\n      };\n      return _objectSpread({}, state, {\n        questions: state.questions.concat(oneQuestion)\n      });\n\n    case DELETE_QUESTION:\n      return _objectSpread({}, state, {\n        questions: state.questions.filter(function (question) {\n          return question.id !== action.id;\n        }),\n        totalScore: state.totalScore - action.score\n      });\n\n    case ADD_QUESTION_SUBMITTED:\n      return _objectSpread({}, state, {\n        addQuestionSubmitted: true\n      });\n\n    case TEST_NOT_VALID:\n      return _objectSpread({}, state, {\n        testValid: false\n      });\n\n    case TEST_VALID:\n      return _objectSpread({}, state, {\n        testValid: true\n      });\n\n    case UPDATE_QUESTIONS:\n      return _objectSpread({}, state, {\n        questions: action.questions\n      });\n\n    case INITIAL_STATE:\n      return {\n        questions: [],\n        totalScore: 0\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:\\Users\\Gohar\\Desktop\\testing-project\\testing-project\\src\\store\\reducers\\testCreator.js"],"names":["CHANGE_TOTAL_SCORE","SUBMITTED_TRUE","ADD_QUESTION","DELETE_QUESTION","ANSWER_VALID","ADD_QUESTION_SUBMITTED","QUESTION_VALID","ANSWER_NOT_VALID","QUESTION_NOT_VALID","TEST_NOT_VALID","TEST_VALID","UPDATE_QUESTIONS","INITIAL_STATE","initialState","questions","totalScore","testCreator","state","action","type","score","submitted","isAnswerValid","isQuestionValid","oneQuestion","id","Date","now","answers","title","isRight","questionTitle","concat","filter","question","addQuestionSubmitted","testValid"],"mappings":";AAAA,SAAQA,kBAAR,EAA4BC,cAA5B,EAA4CC,YAA5C,EAA0DC,eAA1D,EACIC,YADJ,EACkBC,sBADlB,EAC0CC,cAD1C,EAC0DC,gBAD1D,EAC4EC,kBAD5E,EAEIC,cAFJ,EAEoBC,UAFpB,EAEgCC,gBAFhC,EAEkDC,aAFlD,QAEsE,wBAFtE;AAIA,IAAMC,YAAY,GAAG;AAClBC,EAAAA,SAAS,EAAE,EADO;AAElBC,EAAAA,UAAU,EAAE;AAFM,CAArB;AAKA,eAAe,SAASC,WAAT,GAAmD;AAAA,MAA9BC,KAA8B,uEAAtBJ,YAAsB;AAAA,MAARK,MAAQ;;AAChE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKnB,kBAAL;AACE,+BACKiB,KADL;AAEEF,QAAAA,UAAU,EAAEE,KAAK,CAACF,UAAN,GAAmBG,MAAM,CAACE;AAFxC;;AAIF,SAAKnB,cAAL;AACE,+BACKgB,KADL;AAEEI,QAAAA,SAAS,EAAE;AAFb;;AAIF,SAAKjB,YAAL;AACE,+BACKa,KADL;AAEEK,QAAAA,aAAa,EAAE;AAFjB;;AAIF,SAAKf,gBAAL;AACE,+BACKU,KADL;AAEEK,QAAAA,aAAa,EAAE;AAFjB;;AAIF,SAAKhB,cAAL;AACE,+BACKW,KADL;AAEEM,QAAAA,eAAe,EAAE;AAFnB;;AAIF,SAAKf,kBAAL;AACE,+BACKS,KADL;AAEEM,QAAAA,eAAe,EAAE;AAFnB;;AAIF,SAAKrB,YAAL;AACE,UAAIsB,WAAW,GAAG;AAChBC,QAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL,EADY;AAEhBC,QAAAA,OAAO,EAAE,CAAC;AAAEH,UAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL,EAAN;AAAkBE,UAAAA,KAAK,EAAE;AAAzB,SAAD,EAA+B;AAAEJ,UAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL,KAAa,CAAnB;AAAsBE,UAAAA,KAAK,EAAE;AAA7B,SAA/B,CAFO;AAGhBC,QAAAA,OAAO,EAAE,CAHO;AAIhBC,QAAAA,aAAa,EAAE,EAJC;AAKhBX,QAAAA,KAAK,EAAE;AALS,OAAlB;AAOA,+BACKH,KADL;AAEEH,QAAAA,SAAS,EAAEG,KAAK,CAACH,SAAN,CAAgBkB,MAAhB,CAAuBR,WAAvB;AAFb;;AAIA,SAAKrB,eAAL;AACE,+BACKc,KADL;AAEEH,QAAAA,SAAS,EAAEG,KAAK,CAACH,SAAN,CAAgBmB,MAAhB,CAAuB,UAAAC,QAAQ;AAAA,iBAAIA,QAAQ,CAACT,EAAT,KAAgBP,MAAM,CAACO,EAA3B;AAAA,SAA/B,CAFb;AAGEV,QAAAA,UAAU,EAAEE,KAAK,CAACF,UAAN,GAAmBG,MAAM,CAACE;AAHxC;;AAKF,SAAKf,sBAAL;AACE,+BACKY,KADL;AAEEkB,QAAAA,oBAAoB,EAAE;AAFxB;;AAKF,SAAK1B,cAAL;AACE,+BACKQ,KADL;AAEEmB,QAAAA,SAAS,EAAE;AAFb;;AAKF,SAAK1B,UAAL;AACE,+BACKO,KADL;AAEEmB,QAAAA,SAAS,EAAE;AAFb;;AAKF,SAAKzB,gBAAL;AACE,+BACKM,KADL;AAEEH,QAAAA,SAAS,EAAEI,MAAM,CAACJ;AAFpB;;AAKF,SAAKF,aAAL;AACE,aAAO;AACLE,QAAAA,SAAS,EAAE,EADN;AAELC,QAAAA,UAAU,EAAE;AAFP,OAAP;;AAKF;AACE,aAAOE,KAAP;AAhFN;AAmFD","sourcesContent":["import {CHANGE_TOTAL_SCORE, SUBMITTED_TRUE, ADD_QUESTION, DELETE_QUESTION, \r\n    ANSWER_VALID, ADD_QUESTION_SUBMITTED, QUESTION_VALID, ANSWER_NOT_VALID, QUESTION_NOT_VALID, \r\n    TEST_NOT_VALID, TEST_VALID, UPDATE_QUESTIONS, INITIAL_STATE} from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n   questions: [],\r\n   totalScore: 0,\r\n}\r\n\r\nexport default function testCreator(state = initialState, action) {\r\n  switch (action.type) {\r\n    case CHANGE_TOTAL_SCORE:\r\n      return {\r\n        ...state,\r\n        totalScore: state.totalScore + action.score,\r\n      }\r\n    case SUBMITTED_TRUE:\r\n      return {\r\n        ...state,\r\n        submitted: true,\r\n    }\r\n    case ANSWER_VALID:\r\n      return {\r\n        ...state,\r\n        isAnswerValid: true,\r\n    }\r\n    case ANSWER_NOT_VALID:\r\n      return {\r\n        ...state,\r\n        isAnswerValid: false,\r\n      }\r\n    case QUESTION_VALID:\r\n      return {\r\n        ...state,\r\n        isQuestionValid: true,\r\n    }\r\n    case QUESTION_NOT_VALID:\r\n      return {\r\n        ...state,\r\n        isQuestionValid: false,\r\n      }\r\n    case ADD_QUESTION:\r\n      let oneQuestion = {\r\n        id: Date.now(),\r\n        answers: [{ id: Date.now(), title: ''}, { id: Date.now() + 1, title: ''}],\r\n        isRight: 0,\r\n        questionTitle: '',\r\n        score: '',\r\n      }\r\n      return {\r\n        ...state,\r\n        questions: state.questions.concat(oneQuestion),\r\n      }\r\n      case DELETE_QUESTION:\r\n        return {\r\n          ...state,\r\n          questions: state.questions.filter(question => question.id !== action.id),\r\n          totalScore: state.totalScore - action.score,\r\n        }\r\n      case ADD_QUESTION_SUBMITTED:\r\n        return {\r\n          ...state,\r\n          addQuestionSubmitted: true,\r\n        }\r\n     \r\n      case TEST_NOT_VALID:\r\n        return {\r\n          ...state,\r\n          testValid: false,\r\n      }\r\n\r\n      case TEST_VALID:\r\n        return {\r\n          ...state,\r\n          testValid: true,\r\n      }\r\n\r\n      case UPDATE_QUESTIONS:\r\n        return {\r\n          ...state,\r\n          questions: action.questions,\r\n        }\r\n\r\n      case INITIAL_STATE:\r\n        return {\r\n          questions: [],\r\n          totalScore: 0,\r\n        }\r\n\r\n      default:\r\n        return state\r\n  }\r\n  \r\n} \r\n"]},"metadata":{},"sourceType":"module"}