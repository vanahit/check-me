{"ast":null,"code":"import { GET_TESTS_STARTED, GET_TESTS_SUCCESS, GET_TESTS_FAILURE, GET_USERS_STARTED, GET_USERS_SUCCESS, GET_USERS_FAILURE, GET_COMPANIES_STARTED, GET_COMPANIES_SUCCESS, GET_COMPANIES_FAILURE } from '../actions/actionTypes';\nvar initialState = {\n  testsLoaded: false,\n  usersLoading: false,\n  companiesLoading: false,\n  tests: [],\n  companies: [],\n  users: [],\n  testsError: null,\n  usersError: null,\n  companiesError: null\n}; // export default function appReducer(state = initialState, action) {\n//   switch (action.type) {\n//     case GET_TESTS_STARTED:\n//       return {\n//         ...state,\n//         testsLoading: true\n//       };\n//     case GET_TESTS_SUCCESS:\n//       return {\n//         ...state,\n//         testsLoaded: true,\n//         testsError: null,\n//         tests: [action.payload]\n//       };\n//     case GET_TESTS_FAILURE:\n//       return {\n//         ...state,\n//         testsLoading: false,\n//         testsError: action.payload.error\n//       };\n//     case GET_USERS_STARTED:\n//       return {\n//         ...state,\n//         usersLoading: true\n//       };\n//     case GET_USERS_SUCCESS:\n//       return {\n//         ...state,\n//         usersLoading: false,\n//         usersError: null,\n//         users: [action.payload]\n//       };\n//     case GET_USERS_FAILURE:\n//       return {\n//         ...state,\n//         usersLoading: false,\n//         usersError: action.payload.error\n//       };\n//     case GET_COMPANIES_STARTED:\n//       return {\n//         ...state,\n//         companiesLoading: true\n//       };\n//     case GET_COMPANIES_SUCCESS:\n//       return {\n//         ...state,\n//         companiesLoading: false,\n//         companiesError: null,\n//         companies: [action.payload]\n//       };\n//     case GET_COMPANIES_FAILURE:\n//       return {\n//         ...state,\n//         companiesLoading: false,\n//         companiesError: action.payload.error\n//       };\n//     default:\n//       return state;\n//   }\n// }","map":{"version":3,"sources":["C:\\Users\\Gohar\\Desktop\\testing-project\\testing-project\\src\\store\\reducers\\appReducer.js"],"names":["GET_TESTS_STARTED","GET_TESTS_SUCCESS","GET_TESTS_FAILURE","GET_USERS_STARTED","GET_USERS_SUCCESS","GET_USERS_FAILURE","GET_COMPANIES_STARTED","GET_COMPANIES_SUCCESS","GET_COMPANIES_FAILURE","initialState","testsLoaded","usersLoading","companiesLoading","tests","companies","users","testsError","usersError","companiesError"],"mappings":"AACA,SAASA,iBAAT,EACEC,iBADF,EAEEC,iBAFF,EAGEC,iBAHF,EAIEC,iBAJF,EAKEC,iBALF,EAMEC,qBANF,EAOEC,qBAPF,EAQEC,qBARF,QAUO,wBAVP;AAYE,IAAMC,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE,KADM;AAEnBC,EAAAA,YAAY,EAAE,KAFK;AAGnBC,EAAAA,gBAAgB,EAAE,KAHC;AAInBC,EAAAA,KAAK,EAAE,EAJY;AAKnBC,EAAAA,SAAS,EAAE,EALQ;AAMnBC,EAAAA,KAAK,EAAE,EANY;AAOnBC,EAAAA,UAAU,EAAE,IAPO;AAQnBC,EAAAA,UAAU,EAAE,IARO;AASnBC,EAAAA,cAAc,EAAE;AATG,CAArB,C,CAYA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["\r\nimport { GET_TESTS_STARTED, \r\n  GET_TESTS_SUCCESS, \r\n  GET_TESTS_FAILURE,\r\n  GET_USERS_STARTED, \r\n  GET_USERS_SUCCESS, \r\n  GET_USERS_FAILURE,\r\n  GET_COMPANIES_STARTED, \r\n  GET_COMPANIES_SUCCESS, \r\n  GET_COMPANIES_FAILURE,\r\n\r\n} from '../actions/actionTypes';\r\n  \r\n  const initialState = {\r\n    testsLoaded: false,\r\n    usersLoading: false,\r\n    companiesLoading: false,\r\n    tests: [],\r\n    companies: [],\r\n    users: [],\r\n    testsError: null,\r\n    usersError: null,\r\n    companiesError: null,\r\n  };\r\n  \r\n  // export default function appReducer(state = initialState, action) {\r\n  //   switch (action.type) {\r\n\r\n  //     case GET_TESTS_STARTED:\r\n  //       return {\r\n  //         ...state,\r\n  //         testsLoading: true\r\n  //       };\r\n\r\n  //     case GET_TESTS_SUCCESS:\r\n  //       return {\r\n  //         ...state,\r\n  //         testsLoaded: true,\r\n  //         testsError: null,\r\n  //         tests: [action.payload]\r\n  //       };\r\n\r\n  //     case GET_TESTS_FAILURE:\r\n  //       return {\r\n  //         ...state,\r\n  //         testsLoading: false,\r\n  //         testsError: action.payload.error\r\n  //       };\r\n\r\n  //     case GET_USERS_STARTED:\r\n  //       return {\r\n  //         ...state,\r\n  //         usersLoading: true\r\n  //       };\r\n\r\n  //     case GET_USERS_SUCCESS:\r\n  //       return {\r\n  //         ...state,\r\n  //         usersLoading: false,\r\n  //         usersError: null,\r\n  //         users: [action.payload]\r\n  //       };\r\n  //     case GET_USERS_FAILURE:\r\n  //       return {\r\n  //         ...state,\r\n  //         usersLoading: false,\r\n  //         usersError: action.payload.error\r\n  //       };\r\n\r\n  //     case GET_COMPANIES_STARTED:\r\n  //       return {\r\n  //         ...state,\r\n  //         companiesLoading: true\r\n  //       };\r\n\r\n  //     case GET_COMPANIES_SUCCESS:\r\n  //       return {\r\n  //         ...state,\r\n  //         companiesLoading: false,\r\n  //         companiesError: null,\r\n  //         companies: [action.payload]\r\n  //       };\r\n\r\n  //     case GET_COMPANIES_FAILURE:\r\n  //       return {\r\n  //         ...state,\r\n  //         companiesLoading: false,\r\n  //         companiesError: action.payload.error\r\n  //       };\r\n  //     default:\r\n  //       return state;\r\n  //   }\r\n  // }"]},"metadata":{},"sourceType":"module"}