{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { CHANGE_TOTAL_SCORE, SUBMITTED_FALSE, SUBMITTED_TRUE, ADD_QUESTION, DELETE_QUESTION, ADD_QUESTION_SUBMITTED, IS_ANSWER_VALID, IS_QUESTION_VALID } from '../actions/actionTypes';\nvar initialState = {\n  questions: [],\n  totalScore: 0,\n  addQuestionSubmitted: false,\n  isAnswerValid: false,\n  isQuestionValid: false,\n  isTestValid: false\n};\nexport default function testCreator() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case CHANGE_TOTAL_SCORE:\n      return _objectSpread({}, state, {\n        totalScore: state.totalScore + action.score\n      });\n\n    case SUBMITTED_FALSE:\n      return _objectSpread({}, state, {\n        submitted: false\n      });\n\n    case SUBMITTED_TRUE:\n      return _objectSpread({}, state, {\n        submitted: true\n      });\n\n    case ANSWER_VALID:\n      return _objectSpread({}, state, {\n        answerValid: true\n      });\n\n    case ANSWER_NOT_VALID:\n      return _objectSpread({}, state, {\n        answerNotValid: false\n      });\n\n    case QUESTION_VALID:\n      return _objectSpread({}, state, {\n        questionValid: true\n      });\n\n    case QUESTION_NOT_VALID:\n      return _objectSpread({}, state, {\n        questionNotValid: false\n      });\n\n    case ADD_QUESTION:\n      var oneQuestion = {\n        id: Date.now(),\n        answers: [{\n          id: Date.now(),\n          title: ''\n        }, {\n          id: Date.now() + 1,\n          title: ''\n        }],\n        isRight: 0,\n        questionTitle: '',\n        score: ''\n      };\n      return _objectSpread({}, state, {\n        questions: state.questions.concat(oneQuestion)\n      });\n\n    case DELETE_QUESTION:\n      return _objectSpread({}, state, {\n        questions: state.questions.filter(function (question) {\n          return question.id !== action.id;\n        }),\n        totalScore: state.totalScore - action.score\n      });\n\n    case ADD_QUESTION_SUBMITTED:\n      return _objectSpread({}, state, {\n        addQuestionSubmitted: true\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:\\Users\\Gohar\\Desktop\\testing-project\\testing-project\\src\\store\\reducers\\testCreator.js"],"names":["CHANGE_TOTAL_SCORE","SUBMITTED_FALSE","SUBMITTED_TRUE","ADD_QUESTION","DELETE_QUESTION","ADD_QUESTION_SUBMITTED","IS_ANSWER_VALID","IS_QUESTION_VALID","initialState","questions","totalScore","addQuestionSubmitted","isAnswerValid","isQuestionValid","isTestValid","testCreator","state","action","type","score","submitted","ANSWER_VALID","answerValid","ANSWER_NOT_VALID","answerNotValid","QUESTION_VALID","questionValid","QUESTION_NOT_VALID","questionNotValid","oneQuestion","id","Date","now","answers","title","isRight","questionTitle","concat","filter","question"],"mappings":";AAAA,SAAQA,kBAAR,EAA4BC,eAA5B,EAA6CC,cAA7C,EAA6DC,YAA7D,EAA2EC,eAA3E,EAA4FC,sBAA5F,EAAoHC,eAApH,EAAqIC,iBAArI,QAA8J,wBAA9J;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,EADQ;AAEnBC,EAAAA,UAAU,EAAE,CAFO;AAGnBC,EAAAA,oBAAoB,EAAE,KAHH;AAInBC,EAAAA,aAAa,EAAE,KAJI;AAKnBC,EAAAA,eAAe,EAAE,KALE;AAMnBC,EAAAA,WAAW,EAAE;AANM,CAArB;AAUA,eAAe,SAASC,WAAT,GAAmD;AAAA,MAA9BC,KAA8B,uEAAtBR,YAAsB;AAAA,MAARS,MAAQ;;AAChE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKlB,kBAAL;AACE,+BACKgB,KADL;AAEEN,QAAAA,UAAU,EAAEM,KAAK,CAACN,UAAN,GAAmBO,MAAM,CAACE;AAFxC;;AAIF,SAAKlB,eAAL;AACE,+BACKe,KADL;AAEEI,QAAAA,SAAS,EAAE;AAFb;;AAIF,SAAKlB,cAAL;AACE,+BACKc,KADL;AAEEI,QAAAA,SAAS,EAAE;AAFb;;AAIF,SAAKC,YAAL;AACE,+BACKL,KADL;AAEEM,QAAAA,WAAW,EAAE;AAFf;;AAIF,SAAKC,gBAAL;AACE,+BACKP,KADL;AAEEQ,QAAAA,cAAc,EAAE;AAFlB;;AAIF,SAAKC,cAAL;AACE,+BACKT,KADL;AAEEU,QAAAA,aAAa,EAAE;AAFjB;;AAIF,SAAKC,kBAAL;AACE,+BACKX,KADL;AAEEY,QAAAA,gBAAgB,EAAE;AAFpB;;AAIF,SAAKzB,YAAL;AACE,UAAI0B,WAAW,GAAG;AAChBC,QAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL,EADY;AAEhBC,QAAAA,OAAO,EAAE,CAAC;AAAEH,UAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL,EAAN;AAAkBE,UAAAA,KAAK,EAAE;AAAzB,SAAD,EAA+B;AAAEJ,UAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL,KAAa,CAAnB;AAAsBE,UAAAA,KAAK,EAAE;AAA7B,SAA/B,CAFO;AAGhBC,QAAAA,OAAO,EAAE,CAHO;AAIhBC,QAAAA,aAAa,EAAE,EAJC;AAKhBjB,QAAAA,KAAK,EAAE;AALS,OAAlB;AAOA,+BACKH,KADL;AAEEP,QAAAA,SAAS,EAAEO,KAAK,CAACP,SAAN,CAAgB4B,MAAhB,CAAuBR,WAAvB;AAFb;;AAIA,SAAKzB,eAAL;AACE,+BACKY,KADL;AAEEP,QAAAA,SAAS,EAAEO,KAAK,CAACP,SAAN,CAAgB6B,MAAhB,CAAuB,UAAAC,QAAQ;AAAA,iBAAIA,QAAQ,CAACT,EAAT,KAAgBb,MAAM,CAACa,EAA3B;AAAA,SAA/B,CAFb;AAGEpB,QAAAA,UAAU,EAAEM,KAAK,CAACN,UAAN,GAAmBO,MAAM,CAACE;AAHxC;;AAKF,SAAKd,sBAAL;AACE,+BACKW,KADL;AAEEL,QAAAA,oBAAoB,EAAE;AAFxB;;AAIF;AACE,aAAOK,KAAP;AA5DN;AA+DD","sourcesContent":["import {CHANGE_TOTAL_SCORE, SUBMITTED_FALSE, SUBMITTED_TRUE, ADD_QUESTION, DELETE_QUESTION, ADD_QUESTION_SUBMITTED, IS_ANSWER_VALID, IS_QUESTION_VALID } from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n  questions: [],\r\n  totalScore: 0,\r\n  addQuestionSubmitted: false,\r\n  isAnswerValid: false,\r\n  isQuestionValid: false,\r\n  isTestValid: false,\r\n\r\n}\r\n\r\nexport default function testCreator(state = initialState, action) {\r\n  switch (action.type) {\r\n    case CHANGE_TOTAL_SCORE:\r\n      return {\r\n        ...state,\r\n        totalScore: state.totalScore + action.score,\r\n      }\r\n    case SUBMITTED_FALSE:\r\n      return {\r\n        ...state,\r\n        submitted: false,\r\n      }\r\n    case SUBMITTED_TRUE:\r\n      return {\r\n        ...state,\r\n        submitted: true,\r\n    }\r\n    case ANSWER_VALID:\r\n      return {\r\n        ...state,\r\n        answerValid: true,\r\n    }\r\n    case ANSWER_NOT_VALID:\r\n      return {\r\n        ...state,\r\n        answerNotValid: false,\r\n      }\r\n    case QUESTION_VALID:\r\n      return {\r\n        ...state,\r\n        questionValid: true,\r\n    }\r\n    case QUESTION_NOT_VALID:\r\n      return {\r\n        ...state,\r\n        questionNotValid: false,\r\n      }\r\n    case ADD_QUESTION:\r\n      let oneQuestion = {\r\n        id: Date.now(),\r\n        answers: [{ id: Date.now(), title: ''}, { id: Date.now() + 1, title: ''}],\r\n        isRight: 0,\r\n        questionTitle: '',\r\n        score: '',\r\n      }\r\n      return {\r\n        ...state,\r\n        questions: state.questions.concat(oneQuestion),\r\n      }\r\n      case DELETE_QUESTION:\r\n        return {\r\n          ...state,\r\n          questions: state.questions.filter(question => question.id !== action.id),\r\n          totalScore: state.totalScore - action.score,\r\n        }\r\n      case ADD_QUESTION_SUBMITTED:\r\n        return {\r\n          ...state,\r\n          addQuestionSubmitted: true,\r\n        }\r\n      default:\r\n        return state\r\n  }\r\n  \r\n} \r\n"]},"metadata":{},"sourceType":"module"}