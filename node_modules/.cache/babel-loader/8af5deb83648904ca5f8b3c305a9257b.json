{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { GET_TESTS_STARTED, GET_TESTS_SUCCESS, GET_TESTS_FAILURE, GET_USERS, GET_COMPANYIES } from '../actions/actionTypes';\nvar initialState = {\n  loading: false,\n  tests: [],\n  companies: [],\n  users: [],\n  error: null\n};\nexport default function appReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_TESTS_STARTED:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case GET_TESTS_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        error: null,\n        tests: _toConsumableArray(state.tests).concat([action.payload])\n      });\n\n    case GET_TESTS_FAILURE:\n      return _objectSpread({}, state, {\n        loading: false,\n        error: action.payload.error\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:\\Users\\Gohar\\Desktop\\testing-project\\testing-project\\src\\store\\reducers\\appReducer.js"],"names":["GET_TESTS_STARTED","GET_TESTS_SUCCESS","GET_TESTS_FAILURE","GET_USERS","GET_COMPANYIES","initialState","loading","tests","companies","users","error","appReducer","state","action","type","payload"],"mappings":";;AACA,SACIA,iBADJ,EAEIC,iBAFJ,EAGIC,iBAHJ,EAIIC,SAJJ,EAKIC,cALJ,QAOS,wBAPT;AASE,IAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,KADU;AAEnBC,EAAAA,KAAK,EAAE,EAFY;AAGnBC,EAAAA,SAAS,EAAE,EAHQ;AAInBC,EAAAA,KAAK,EAAE,EAJY;AAKnBC,EAAAA,KAAK,EAAE;AALY,CAArB;AAQA,eAAe,SAASC,UAAT,GAAkD;AAAA,MAA9BC,KAA8B,uEAAtBP,YAAsB;AAAA,MAARQ,MAAQ;;AAC/D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKd,iBAAL;AACE,+BACKY,KADL;AAEEN,QAAAA,OAAO,EAAE;AAFX;;AAIF,SAAKL,iBAAL;AACE,+BACKW,KADL;AAEEN,QAAAA,OAAO,EAAE,KAFX;AAGEI,QAAAA,KAAK,EAAE,IAHT;AAIEH,QAAAA,KAAK,qBAAMK,KAAK,CAACL,KAAZ,UAAmBM,MAAM,CAACE,OAA1B;AAJP;;AAMF,SAAKb,iBAAL;AACE,+BACKU,KADL;AAEEN,QAAAA,OAAO,EAAE,KAFX;AAGEI,QAAAA,KAAK,EAAEG,MAAM,CAACE,OAAP,CAAeL;AAHxB;;AAKF;AACE,aAAOE,KAAP;AApBJ;AAsBD","sourcesContent":["\r\nimport {\r\n    GET_TESTS_STARTED,\r\n    GET_TESTS_SUCCESS,\r\n    GET_TESTS_FAILURE,\r\n    GET_USERS,\r\n    GET_COMPANYIES,\r\n   \r\n  } from '../actions/actionTypes';\r\n  \r\n  const initialState = {\r\n    loading: false,\r\n    tests: [],\r\n    companies: [],\r\n    users: [],\r\n    error: null\r\n  };\r\n  \r\n  export default function appReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n      case GET_TESTS_STARTED:\r\n        return {\r\n          ...state,\r\n          loading: true\r\n        };\r\n      case GET_TESTS_SUCCESS:\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          error: null,\r\n          tests: [...state.tests, action.payload]\r\n        };\r\n      case GET_TESTS_FAILURE:\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          error: action.payload.error\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }"]},"metadata":{},"sourceType":"module"}