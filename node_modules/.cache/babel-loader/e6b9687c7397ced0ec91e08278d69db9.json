{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\src\\\\containers\\\\Pages\\\\UserTests.js\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n\\tdisplay: inline-block;\\n\\ttext-decoration: none;\\n\\tpaddin-bottom: 5px;\\n\\tborder-bottom: 1px solid black;\\n\\tcolor: black;\\n\\t:hover {\\n\\t\\tcursor: pointer;\\n\\t}\\n\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n\\tfont-size: 28px;\\n\\tmargin: 40px 0;\\n\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport Searching from './Searching';\nimport Pagination from './Pagination';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { NavLink } from \"react-router-dom\";\nimport { addTest as _addTest } from '../../store/actions/testPasser';\nvar NoTests = styled.div(_templateObject());\nvar TestsLink = styled(NavLink)(_templateObject2());\n\nvar UserTests =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UserTests, _Component);\n\n  function UserTests(props) {\n    var _this;\n\n    _classCallCheck(this, UserTests);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UserTests).call(this, props));\n\n    _this.deadline = function (date) {\n      var today = new Date(date);\n      var dd = today.getDate();\n      var mm = today.getMonth() + 1;\n      var yyyy = today.getFullYear();\n\n      if (dd < 10) {\n        dd = '0' + dd;\n      }\n\n      if (mm < 10) {\n        mm = '0' + mm;\n      }\n\n      return today = dd + '/' + mm + '/' + yyyy;\n    };\n\n    _this.deleteTest = function (itemId) {\n      _this.props.testDeletedClicked();\n\n      _this.props.deleteTest(itemId);\n    };\n\n    _this.state = {\n      data: _this.props.user,\n      tests: _this.props.user.tests,\n      search: \"\",\n      type: \"\",\n      currentPage: 1,\n      dataPerPage: 4,\n      loadMore: 0,\n      sortType: \"testTitle\",\n      orderAscanding: true\n    };\n    return _this;\n  }\n\n  _createClass(UserTests, [{\n    key: \"searching\",\n    value: function searching(e, searchProp) {\n      var _this$setState;\n\n      this.setState((_this$setState = {}, _defineProperty(_this$setState, searchProp, e.target.value), _defineProperty(_this$setState, \"currentPage\", 1), _this$setState));\n    }\n  }, {\n    key: \"sorting\",\n    value: function sorting(sortType) {\n      this.setState({\n        orderAscanding: this.state.sortType !== sortType ? true : !this.state.orderAscanding,\n        sortType: sortType\n      });\n    }\n  }, {\n    key: \"pageClick\",\n    value: function pageClick(e) {\n      this.setState({\n        currentPage: Number(e.target.id),\n        loadMore: 0\n      });\n    }\n  }, {\n    key: \"loadMore\",\n    value: function loadMore(e) {\n      this.setState({\n        loadMore: this.state.loadMore + 1\n      });\n    }\n  }, {\n    key: \"prev\",\n    value: function prev() {\n      this.setState({\n        currentPage: this.state.currentPage + this.state.loadMore - 1,\n        loadMore: 0\n      });\n    }\n  }, {\n    key: \"next\",\n    value: function next() {\n      this.setState({\n        currentPage: this.state.currentPage + this.state.loadMore + 1,\n        loadMore: 0\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      // // if (this.props.user !== prevProps.user ) {\n      //     this.setState({ data: this.props.user, tests: this.props.user.tests});\n      //     console.log(this.state.tests);\n      // }\n      if (this.props.user.tests.length !== prevProps.user.tests.length) {\n        this.setState({\n          tests: this.props.user.tests\n        });\n        console.log(this.state.tests);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.props.user);\n      var tests = [];\n\n      if (this.state.tests) {\n        tests = this.state.tests.filter(function (test) {\n          return test.userScore < 0;\n        });\n        console.log(this.state.tests);\n      }\n\n      var selectSearchData = ['JavaScript', 'Java', \"PHP\", 'C#', 'MySQL', 'Python', 'Ruby', 'Swift', 'React', 'Redux'];\n      var _this$state = this.state,\n          data = _this$state.data,\n          search = _this$state.search,\n          type = _this$state.type,\n          currentPage = _this$state.currentPage,\n          dataPerPage = _this$state.dataPerPage,\n          loadMore = _this$state.loadMore,\n          sortType = _this$state.sortType,\n          orderAscanding = _this$state.orderAscanding;\n      var filterData = tests.filter(function (item) {\n        return item.testTitle.toLowerCase().substr(0, search.length) === search.toLowerCase();\n      });\n\n      if (type !== \"\") {\n        filterData = filterData.filter(function (item) {\n          return item.testType === type;\n        });\n      }\n\n      filterData.sort(function (a, b) {\n        var nameA;\n        var nameB;\n\n        if (sortType !== \"testDeadline\") {\n          nameA = a[sortType].toUpperCase();\n          nameB = b[sortType].toUpperCase();\n        } else {\n          nameA = new Date(a.testDeadline);\n          nameB = new Date(b.testDeadline);\n        }\n\n        if (orderAscanding) {\n          if (nameA < nameB) {\n            return -1;\n          }\n\n          if (nameA > nameB) {\n            return 1;\n          }\n        } else {\n          if (nameA < nameB) {\n            return 1;\n          }\n\n          if (nameA > nameB) {\n            return -1;\n          }\n        }\n\n        return 0;\n      });\n      var indexOfLastData = currentPage * dataPerPage;\n      var indexOfFirstData = indexOfLastData - dataPerPage;\n      var currentData = filterData.slice(indexOfFirstData, indexOfLastData + loadMore * dataPerPage);\n      var pages = [];\n\n      for (var i = 1; i <= Math.ceil(filterData.length / dataPerPage); i++) {\n        pages.push(i);\n      }\n\n      return currentData.length ? React.createElement(\"div\", {\n        className: \"container-table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(Searching, Object.assign({}, this.state, {\n        searching: this.searching.bind(this),\n        currentDataLength: currentData.length,\n        selectSearchData: selectSearchData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      })), React.createElement(\"table\", {\n        className: \"dataTable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        onClick: this.sorting.bind(this, \"testTitle\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, sortType === \"testTitle\" && orderAscanding && React.createElement(\"span\", {\n        className: \"sortArrowBottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }), sortType === \"testTitle\" && !orderAscanding && React.createElement(\"span\", {\n        className: \"sortArrowTop\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }), \"Title\"), React.createElement(\"th\", {\n        onClick: this.sorting.bind(this, \"testType\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, sortType === \"testType\" && orderAscanding && React.createElement(\"span\", {\n        className: \"sortArrowBottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }), sortType === \"testType\" && !orderAscanding && React.createElement(\"span\", {\n        className: \"sortArrowTop\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }), \"Type\"), React.createElement(\"th\", {\n        onClick: this.sorting.bind(this, \"company\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, sortType === \"company\" && orderAscanding && React.createElement(\"span\", {\n        className: \"sortArrowBottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }), sortType === \"company\" && !orderAscanding && React.createElement(\"span\", {\n        className: \"sortArrowTop\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }), \"Company\"), React.createElement(\"th\", {\n        onClick: this.sorting.bind(this, \"testDeadline\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, sortType === \"testDeadline\" && orderAscanding && React.createElement(\"span\", {\n        className: \"sortArrowBottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }), sortType === \"testDeadline\" && !orderAscanding && React.createElement(\"span\", {\n        className: \"sortArrowTop\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }), \"Deadline\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, \"Delete\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, \"Enrole Tests\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, this.state.tests ? currentData.map(function (item) {\n        return React.createElement(\"tr\", {\n          key: item.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223\n          },\n          __self: this\n        }, item.testTitle), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224\n          },\n          __self: this\n        }, item.testType), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225\n          },\n          __self: this\n        }, item.company), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226\n          },\n          __self: this\n        }, _this2.deadline(item.testDeadline)), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230\n          },\n          __self: this\n        }, \"Delete\")), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232\n          },\n          __self: this\n        }, React.createElement(NavLink, {\n          to: \"/\".concat(_this2.props.user.firstName).concat(_this2.props.user.lastName, \"/start-test\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          onClick: function onClick() {\n            return _this2.props.addTest(item);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234\n          },\n          __self: this\n        }, \"Start\"))));\n      }) : 'LOADER')), React.createElement(Pagination, {\n        load_More: loadMore,\n        loadMore: this.loadMore.bind(this),\n        currentPage: currentPage,\n        prev: this.prev.bind(this),\n        pageClick: this.pageClick.bind(this),\n        next: this.next.bind(this),\n        pages: pages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      })) : React.createElement(NoTests, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, \" There is no tests yet \", ' ', React.createElement(TestsLink, {\n        to: \"/tests\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, \"  add test \"));\n    }\n  }]);\n\n  return UserTests;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    tests: state.appReducer.tests,\n    testsLoaded: state.appReducer.testsLoaded\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addTest: function addTest(test) {\n      return dispatch(_addTest(test));\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserTests);","map":{"version":3,"sources":["C:\\Users\\Gohar\\Desktop\\testing-project\\testing-project\\src\\containers\\Pages\\UserTests.js"],"names":["React","Component","Searching","Pagination","connect","styled","NavLink","addTest","NoTests","div","TestsLink","UserTests","props","deadline","date","today","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","deleteTest","itemId","testDeletedClicked","state","data","user","tests","search","type","currentPage","dataPerPage","loadMore","sortType","orderAscanding","e","searchProp","setState","target","value","Number","id","prevProps","prevState","length","console","log","filter","test","userScore","selectSearchData","filterData","item","testTitle","toLowerCase","substr","testType","sort","a","b","nameA","nameB","toUpperCase","testDeadline","indexOfLastData","indexOfFirstData","currentData","slice","pages","i","Math","ceil","push","searching","bind","sorting","map","company","firstName","lastName","prev","pageClick","next","mapStateToProps","appReducer","testsLoaded","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport Searching from './Searching';\r\nimport Pagination from './Pagination';\r\nimport { connect } from 'react-redux';\r\nimport  styled  from 'styled-components';\r\nimport { NavLink} from \"react-router-dom\";\r\nimport { addTest } from '../../store/actions/testPasser';\r\n\r\nconst NoTests = styled.div`\r\n\tfont-size: 28px;\r\n\tmargin: 40px 0;\r\n\r\n`;\r\nconst TestsLink = styled(NavLink) `\r\n\tdisplay: inline-block;\r\n\ttext-decoration: none;\r\n\tpaddin-bottom: 5px;\r\n\tborder-bottom: 1px solid black;\r\n\tcolor: black;\r\n\t:hover {\r\n\t\tcursor: pointer;\r\n\t}\r\n\r\n`;\r\nclass UserTests extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: this.props.user,\r\n            tests: this.props.user.tests,\r\n            search: \"\",\r\n            type: \"\",\r\n            currentPage: 1,\r\n            dataPerPage: 4,\r\n            loadMore: 0,\r\n            sortType: \"testTitle\",\r\n            orderAscanding: true\r\n        }\r\n    }\r\n    searching(e, searchProp) {\r\n        this.setState({\r\n            [searchProp]: e.target.value,\r\n            currentPage: 1\r\n        })\r\n    }\r\n\r\n    sorting(sortType) {\r\n        this.setState({\r\n            orderAscanding: this.state.sortType !== sortType ? true : !this.state.orderAscanding,\r\n            sortType,\r\n        })\r\n    }\r\n\r\n    pageClick(e) {\r\n        this.setState({\r\n            currentPage: Number(e.target.id),\r\n            loadMore: 0\r\n        })\r\n    }\r\n\r\n    loadMore(e) {\r\n        this.setState({loadMore: this.state.loadMore + 1})\r\n    }\r\n\r\n    prev() {\r\n        this.setState({\r\n            currentPage: this.state.currentPage + this.state.loadMore - 1,\r\n            loadMore: 0\r\n        })\r\n    }\r\n\r\n    next() {\r\n        this.setState({\r\n            currentPage: this.state.currentPage + this.state.loadMore + 1,\r\n            loadMore: 0\r\n        })\r\n    }\r\n\r\n\tdeadline  = (date) => {\r\n\t\tlet today = new Date(date);\r\n\t\tlet dd = today.getDate();\r\n\t\tlet mm = today.getMonth() + 1;\r\n\t\tlet yyyy = today.getFullYear();\r\n\r\n\t\tif(dd < 10) {\r\n\t\t\tdd = '0' + dd\r\n\t\t} \r\n\r\n\t\tif (mm < 10) {\r\n\t\t\tmm = '0' + mm\r\n\t\t} \r\n\t\treturn\ttoday = dd + '/' + mm + '/' + yyyy ;\r\n\t}\r\n\r\n\tdeleteTest = (itemId) => {\r\n\t\tthis.props.testDeletedClicked();\r\n\t\tthis.props.deleteTest(itemId);\r\n\t}\r\n\r\n\r\n\tcomponentDidUpdate(prevProps, prevState) {\r\n\t\t\r\n        // // if (this.props.user !== prevProps.user ) {\r\n        //     this.setState({ data: this.props.user, tests: this.props.user.tests});\r\n        //     console.log(this.state.tests);\r\n        // }\r\n\r\n        if (this.props.user.tests.length !== prevProps.user.tests.length ) {\r\n            this.setState({ tests: this.props.user.tests });\r\n            console.log(this.state.tests)\r\n        }\r\n\t}\r\n\r\n    render() {\r\n        console.log(this.props.user)\r\n        let tests = [];\r\n\t\tif (this.state.tests) {\r\n            tests = this.state.tests.filter(test => {\r\n                return test.userScore < 0\r\n            });\r\n\r\n            console.log(this.state.tests)\r\n        }\r\n        \r\n        \r\n        const selectSearchData = ['JavaScript', 'Java', \"PHP\", 'C#', 'MySQL', 'Python', 'Ruby', 'Swift', 'React', 'Redux'];\r\n        const {data, search, type, currentPage, dataPerPage, loadMore, sortType, orderAscanding} = this.state;\r\n        let filterData = tests.filter(item => {\r\n            return item.testTitle.toLowerCase().substr(0, search.length) === search.toLowerCase()\r\n        })\r\n\r\n        if (type !== \"\") {\r\n            filterData = filterData.filter(item => item.testType === type)\r\n        }\r\n\r\n        filterData.sort((a, b) => {\r\n            let nameA;\r\n            let nameB\r\n            if (sortType !== \"testDeadline\") {\r\n                nameA = a[sortType].toUpperCase();\r\n                nameB = b[sortType].toUpperCase();\r\n            } else {\r\n                nameA = new Date(a.testDeadline)\r\n                nameB = new Date(b.testDeadline)\r\n            }\r\n            if (orderAscanding) {\r\n                if (nameA < nameB) {\r\n                    return -1;\r\n                }\r\n                if (nameA > nameB) {\r\n                    return 1;\r\n                }\r\n            } else {\r\n                if (nameA < nameB) {\r\n                    return 1;\r\n                }\r\n                if (nameA > nameB) {\r\n                    return -1;\r\n                }\r\n            }\r\n            return 0;\r\n        })\r\n\r\n        const indexOfLastData = currentPage * dataPerPage;\r\n        const indexOfFirstData = indexOfLastData - dataPerPage;\r\n        const currentData = filterData.slice(indexOfFirstData, indexOfLastData + loadMore * dataPerPage);\r\n\r\n        const pages = [];\r\n        for (let i = 1; i <= Math.ceil(filterData.length / dataPerPage); i++) {\r\n            pages.push(i);\r\n        }\r\n\r\n        return (\r\n            currentData.length ?\r\n            <div className=\"container-table\">\r\n                <Searching\r\n                    {...this.state}\r\n                    searching={this.searching.bind(this)}\r\n                    currentDataLength={currentData.length}\r\n                    selectSearchData={selectSearchData}\r\n                />\r\n                <table className=\"dataTable\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th onClick={this.sorting.bind(this, \"testTitle\")}>\r\n                            {sortType === \"testTitle\" && orderAscanding &&\r\n                            <span className=\"sortArrowBottom\"></span>}\r\n                            {sortType === \"testTitle\" && !orderAscanding &&\r\n                            <span className=\"sortArrowTop\"></span>}\r\n                            Title\r\n                        </th>\r\n                        <th onClick={this.sorting.bind(this, \"testType\")}>\r\n                            {sortType === \"testType\" && orderAscanding &&\r\n                            <span className=\"sortArrowBottom\"></span>}\r\n                            {sortType === \"testType\" && !orderAscanding &&\r\n                            <span className=\"sortArrowTop\"></span>}\r\n                            Type\r\n                        </th>\r\n                        <th onClick={this.sorting.bind(this, \"company\")}>\r\n                            {sortType === \"company\" && orderAscanding &&\r\n                            <span className=\"sortArrowBottom\"></span>}\r\n                            {sortType === \"company\" && !orderAscanding &&\r\n                            <span className=\"sortArrowTop\"></span>}\r\n                            Company\r\n                        </th>\r\n                        <th onClick={this.sorting.bind(this, \"testDeadline\")}>\r\n                            {sortType === \"testDeadline\" && orderAscanding &&\r\n                            <span className=\"sortArrowBottom\"></span>}\r\n                            {sortType === \"testDeadline\" && !orderAscanding &&\r\n                            <span className=\"sortArrowTop\"></span>}\r\n                            Deadline\r\n                        </th>\r\n                        <th>Delete</th>\r\n                        <th>Enrole Tests</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    { this.state.tests  ?\r\n                        currentData.map(item => {\r\n                            return (\r\n                                <tr key={item.id}>\r\n                                    <td>{item.testTitle}</td>\r\n                                    <td>{item.testType}</td>\r\n                                    <td>{item.company}</td>\r\n                                    <td>\r\n                                        {this.deadline(item.testDeadline)}\r\n                                    </td>\r\n                                    <td>\r\n                                        <span>Delete</span>\r\n                                    </td>\r\n                                    <td>\r\n                                        <NavLink to={`/${this.props.user.firstName}${this.props.user.lastName}/start-test`}>\r\n                                            <button onClick={() => this.props.addTest(item) }>Start</button>\r\n                                        </NavLink>\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        })\r\n                     : 'LOADER'\r\n                    }\r\n                    </tbody>\r\n\r\n                </table>\r\n                <Pagination\r\n                    load_More={loadMore}\r\n                    loadMore={this.loadMore.bind(this)}\r\n                    currentPage={currentPage}\r\n                    prev={this.prev.bind(this)}\r\n                    pageClick={this.pageClick.bind(this)}\r\n                    next={this.next.bind(this)}\r\n                    pages={pages}\r\n                />\r\n            </div>\r\n            :   <NoTests> There is no tests yet {' '} \r\n                   <TestsLink  to={`/tests`} >  add test </TestsLink>\r\n                </NoTests>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n\treturn {\r\n\t\ttests: state.appReducer.tests,\r\n\t\ttestsLoaded: state.appReducer.testsLoaded,\r\n\t}\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n\treturn {\r\n\t\taddTest: test => dispatch(addTest(test)),\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserTests)\r\n"]},"metadata":{},"sourceType":"module"}