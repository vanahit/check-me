{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\Gohar\\\\Desktop\\\\testing-project\\\\testing-project\\\\src\\\\components\\\\OneTestComponent\\\\TestDescription.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n        position: absolute;\\n        z-index: 2;\\n        padding: 10px 10px;\\n        word-wrap: break-word;\\n        left: 3%;\\n\\t\\ttop: -100px;\\n        width: 94%;\\n        height: \", \"\\n\\t    color: white;\\n\\t\\tfont-size: 20px;\\n\\t\\tbackground-color: rgba(0, 0, 0, 0.7);\\n\\t\\tborder-radius: 4px;\\n\\t\\ttransition: top 0.5s ;\\n\\n\\t\\t@media screen and (max-width: 1188.5px) {\\n\\t\\t\\tfont-size: 12px;\\n\\t\\t}\\t\\t\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport styled from 'styled-components';\nimport React from 'react';\nvar DescriptionDiv = styled.div(_templateObject(), function (props) {\n  return props.companyLogin === true ? '100%' : '78%';\n});\n\nvar TestDescription = function TestDescription(props) {\n  var componentDidMount = function componentDidMount() {}; // const getCoordinates = (e) => {\n  //     let rect = e.target.getBoundingClientRect();\n  // \tconsole.log(e.pageX );\n  // \tconsole.log(rect.top, rect.right, rect.bottom, rect.left);\n  // }\n\n\n  return React.createElement(DescriptionDiv, {\n    companyLogin: props.companyLogin // onMouseLeave={() => props.onOut()}\n    ,\n    onMouseOver: function onMouseOver(e) {\n      return props.getBlackDivCoords(e);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, props.description);\n};\n\nexport default TestDescription;","map":{"version":3,"sources":["C:\\Users\\Gohar\\Desktop\\testing-project\\testing-project\\src\\components\\OneTestComponent\\TestDescription.js"],"names":["styled","React","DescriptionDiv","div","props","companyLogin","TestDescription","componentDidMount","e","getBlackDivCoords","description"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,IAAMC,cAAc,GAAGF,MAAM,CAACG,GAAV,oBAQF,UAAAC,KAAK;AAAA,SAAIA,KAAK,CAACC,YAAN,KAAuB,IAAvB,GAA8B,MAA9B,GAAuC,KAA3C;AAAA,CARH,CAApB;;AAoBA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAF,KAAK,EAAI;AAC7B,MAAMG,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM,CAE/B,CAFD,CAD6B,CAI7B;AACA;AACH;AACA;AACG;;;AACA,SACI,oBAAC,cAAD;AACI,IAAA,YAAY,EAAEH,KAAK,CAACC,YADxB,CAEI;AAFJ;AAGI,IAAA,WAAW,EAAI,qBAACG,CAAD;AAAA,aAAOJ,KAAK,CAACK,iBAAN,CAAwBD,CAAxB,CAAP;AAAA,KAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMJJ,KAAK,CAACM,WANF,CADJ;AAUH,CAnBD;;AAqBA,eAAeJ,eAAf","sourcesContent":["import styled from 'styled-components';\r\nimport React from 'react';\r\n\r\nconst DescriptionDiv = styled.div`\r\n        position: absolute;\r\n        z-index: 2;\r\n        padding: 10px 10px;\r\n        word-wrap: break-word;\r\n        left: 3%;\r\n\t\ttop: -100px;\r\n        width: 94%;\r\n        height: ${props => props.companyLogin === true ? '100%' : '78%'}\r\n\t    color: white;\r\n\t\tfont-size: 20px;\r\n\t\tbackground-color: rgba(0, 0, 0, 0.7);\r\n\t\tborder-radius: 4px;\r\n\t\ttransition: top 0.5s ;\r\n\r\n\t\t@media screen and (max-width: 1188.5px) {\r\n\t\t\tfont-size: 12px;\r\n\t\t}\t\t\r\n`;\r\n\r\nconst TestDescription = props => {\r\n    const componentDidMount = () => {\r\n        \r\n    }\r\n    // const getCoordinates = (e) => {\r\n    //     let rect = e.target.getBoundingClientRect();\r\n\t// \tconsole.log(e.pageX );\r\n\t// \tconsole.log(rect.top, rect.right, rect.bottom, rect.left);\r\n    // }\r\n    return (\r\n        <DescriptionDiv \r\n            companyLogin={props.companyLogin}\r\n            // onMouseLeave={() => props.onOut()}\r\n            onMouseOver = {(e) => props.getBlackDivCoords(e)}\r\n          \r\n        >\r\n\t\t\t{props.description}\r\n\t\t</DescriptionDiv >\r\n\t)\r\n}\r\n\r\nexport default TestDescription;"]},"metadata":{},"sourceType":"module"}